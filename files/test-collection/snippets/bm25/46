Snippets for the query:  The use of Bayesian decision models to optimize information retrieval system performance. This includes stopping rules to determine when a user should cease scanning the output of a retrieval search.
************************
Total Hits:  135
************************

************************
Document:  CACM-2947.html
************************


SITAR: An Interactive Text Processing System for Small Computers

SITAR, a low-cost in teractive text handling
and text analysis system for nontechnical users, 
is in many ways comparable to in teractive bibliographical
search and retrieval systems, but has several 
additional features. It is implemented on a PDP/11 time-sharing
computer invoked by a CRT with microprogrammed 
editing functions.  It uses a simple command language designating
a function, a file, and a search template 
consisting of the textual string desired and strings
delimiting the context in which the hit is to be 
delivered.  Extensive experience with SITAR shows that
the combined powers of simple commands, string 
orientation, circular file structure, a CRT with local
memory, and conversational computing produce a 
system much more powerful than the sum of its parts.

CACM July, 1977

Schneider, B. R. Jr.
Watts, R. M.

<B>information retrieval</B>, text editing, minicomputers,
CRTs,time sharing, bibliographic search and 
retrieval, literary analysis, linguistic analysis, command languages

3.4 3.7

CA770705 JB December 28, 1977  10:20 AM

2947	5	2947
2947	5	2947
2947	5	2947


************************



SITAR: An Interactive Text Processing System for Small Computers

SITAR, a low-cost in teractive text handling
and text analysis system for nontechnical users, 
is in many ways comparable to in teractive bibliographical
search and <B>retrieval system</B>s, but has several 
additional features. It is implemented on a PDP/11 time-sharing
computer invoked by a CRT with microprogrammed 
editing functions.  It uses a simple command language designating
a function, a file, and a search template 
consisting of the textual string desired and strings
delimiting the context in which the hit is to be 
delivered.  Extensive experience with SITAR shows that
the combined powers of simple commands, string 
orientation, circular file structure, a CRT with local
memory, and conversational computing produce a 
system much more powerful than the sum of its parts.

CACM July, 1977

Schneider, B. R. Jr.
Watts, R. M.

information retrieval, text editing, minicomputers,
CRTs,time sharing, bibliographic search and 
retrieval, literary analysis, linguistic analysis, command languages

3.4 3.7

CA770705 JB December 28, 1977  10:20 AM

2947	5	2947
2947	5	2947
2947	5	2947


************************

************************
Document:  CACM-0891.html
************************


Everyman's Information Retrieval System

The <B>information retrieval</B> problem whose solution
is presented here was posed by a technical 
library with limited bubget and personnel.  The solution,
however, is quite general and is applicable 
to many different types of retrieval problems.  Further,the
method of solution makes it possible for 
many groups who have previously dismissed an information
retrieval program as expensive and difficult 
(from a programming stand-point) to reconsider their position,
for the present solution makes it possible 
to install an information retrieval program in less than
three months, and with relatively little equipment.

CACM March, 1963

Whitley, V. W.

CA630329 JB March 14, 1978  12:37 PM

891	5	891
891	5	891
891	5	891


************************

************************
Document:  CACM-1695.html
************************


PLEXUS-An On-Line System for Modeling Neural Networks

A description is presented of PLEXUS, a system
which enables a user to construct and specify 
a neural network, to analyze the output data produced
by the network, and to store and retrieve networks 
and data from a library.  The system, operated entirely
from a digital display unit, interacts directly 
with the user and permits easy and rapid transitions
between the various phases of the modeling process. 
 PLEXUS is designed to complement neurophysiological research
so that the systematic development of neural 
models can be coordinated with experimental work.  PLEXUS
networks are built up from components representing 
individual neurons, external stimuli, and interconnecting
fibers, each component being <B>of a</B> relatively 
detailed nature.  Provision is also made for the use of
experimental data as input to a network.  Convenient 
means for specification and modification of a network and
extensive error-checking capabilities are provided. 
Data resulting from the simulation of a network may be
analyzed by a variety of techniques ranging from 
examinations of the gross characteristics of the data to
the determination of detailed statistical properties.

CACM September, 1968

Dill, J. C.
Randall, D. L.
Richer, I.

biological modeling, data analysis, discrete system
simulation, library systems, modeling, network 
simulation, neural networks, neurophysiological
models, on-line simulation, simulation

3.12 3.19 3.29 3.65

CA680906 JB February 22, 1978  8:56 AM

1695	5	1695
1695	5	1695
1695	5	1695


************************



PLEXUS-An On-Line System for Modeling Neural Networks

A description is presented of PLEXUS, a system
which enables a user to construct and specify 
a neural network, to analyze the output data produced
by the network, and to store and retrieve networks 
and data from a library.  The system, operated entirely
from a digital display unit, interacts directly 
with the user and permits easy and rapid transitions
between the various phases of the modeling process. 
 PLEXUS is designed to complement neurophysiological research
so that the systematic development of neural 
models can be coordinated with experimental work.  PLEXUS
networks are built up from components representing 
individual neurons, external stimuli, and interconnecting
fibers, each component being of a relatively 
detailed nature.  Provision is also made for the <B>use of</B>
experimental data as input to a network.  Convenient 
means for specification and modification of a network and
extensive error-checking capabilities are provided. 
Data resulting from the simulation of a network may be
analyzed by a variety of techniques ranging from 
examinations of the gross characteristics of the data to
the determination of detailed statistical properties.

CACM September, 1968

Dill, J. C.
Randall, D. L.
Richer, I.

biological modeling, data analysis, discrete system
simulation, library systems, modeling, network 
simulation, neural networks, neurophysiological
models, on-line simulation, simulation

3.12 3.19 3.29 3.65

CA680906 JB February 22, 1978  8:56 AM

1695	5	1695
1695	5	1695
1695	5	1695


************************



PLEXUS-An On-Line System for Modeling Neural Networks

A description is presented of PLEXUS, a system
which enables <B>a user</B> to construct and specify 
a neural network, to analyze the output data produced
by the network, and to store and retrieve networks 
and data from a library.  The system, operated entirely
from a digital display unit, interacts directly 
with the user and permits easy and rapid transitions
between the various phases of the modeling process. 
 PLEXUS is designed to complement neurophysiological research
so that the systematic development of neural 
models can be coordinated with experimental work.  PLEXUS
networks are built up from components representing 
individual neurons, external stimuli, and interconnecting
fibers, each component being of a relatively 
detailed nature.  Provision is also made for the use of
experimental data as input to a network.  Convenient 
means for specification and modification of a network and
extensive error-checking capabilities are provided. 
Data resulting from the simulation of a network may be
analyzed by a variety of techniques ranging from 
examinations of the gross characteristics of the data to
the determination of detailed statistical properties.

CACM September, 1968

Dill, J. C.
Randall, D. L.
Richer, I.

biological modeling, data analysis, discrete system
simulation, library systems, modeling, network 
simulation, neural networks, neurophysiological
models, on-line simulation, simulation

3.12 3.19 3.29 3.65

CA680906 JB February 22, 1978  8:56 AM

1695	5	1695
1695	5	1695
1695	5	1695


************************



PLEXUS-An On-Line System for Modeling Neural Networks

A description is presented of PLEXUS, a system
which enables a user to construct and specify 
a neural network, to analyze <B>the output</B> data produced
by the network, and to store and retrieve networks 
and data from a library.  The system, operated entirely
from a digital display unit, interacts directly 
with the user and permits easy and rapid transitions
between the various phases of the modeling process. 
 PLEXUS is designed to complement neurophysiological research
so that the systematic development of neural 
models can be coordinated with experimental work.  PLEXUS
networks are built up from components representing 
individual neurons, external stimuli, and interconnecting
fibers, each component being of a relatively 
detailed nature.  Provision is also made for the use of
experimental data as input to a network.  Convenient 
means for specification and modification of a network and
extensive error-checking capabilities are provided. 
Data resulting from the simulation of a network may be
analyzed by a variety of techniques ranging from 
examinations of the gross characteristics of the data to
the determination of detailed statistical properties.

CACM September, 1968

Dill, J. C.
Randall, D. L.
Richer, I.

biological modeling, data analysis, discrete system
simulation, library systems, modeling, network 
simulation, neural networks, neurophysiological
models, on-line simulation, simulation

3.12 3.19 3.29 3.65

CA680906 JB February 22, 1978  8:56 AM

1695	5	1695
1695	5	1695
1695	5	1695


************************

************************
Document:  CACM-1831.html
************************


A Comment on Optimal Tree Structures

CACM October, 1969

Stanfel, L. E.

<B>information retrieval</B>, file searching, tree structures, double chaining

3.70 3.73 3.74

CA691015 JB February 15, 1978  1:31 PM

1831	5	1831
1831	5	1831
1831	5	1831
2257	5	1831
2360	5	1831
849	6	1831
849	6	1831
1831	6	1831
1831	6	1831
1936	6	1831
1936	6	1831
2360	6	1831


************************

************************
Document:  CACM-2424.html
************************


Dynamic Verification of Operating System Decisions

Dynamic verification <B>of a</B> decision implies
that every time the decision is made there is a 
consistency check performed on the decision using independent
hardware and software.  The dynamic verification 
of operating system decisions is used on the PRIME system
being designed and constructed at the University 
of California, Berkeley.  PRIME is an experimental time-sharing
which is to have the properties of continuous 
availability, data privacy, and cost effectiveness.
 The technique of dynamic verification allows the 
construction of an operating system which does not make certain
decisions improperly even in the presence 
of a single hardware or software fault.  Furthermore,
multiple faults lead to unreliable operation only 
if the faults happen to reinforce each other.  On PRIME,
dynamic verification is used to ensure that 
one user's information cannot become available to another
user gratuitously even in the presence of a 
single hardware or software fault.the amount of additional
hardware and software required for dynamic 
verification can be modest.

CACM November, 1973

Fabry, R. S.

operating systems, data security, fault tolerance,
software reliability, data privacy, program 
verification, modular computer systems

4.32

CA731102 JB January 20, 1978  10:56 AM

1828	4	2424
1854	4	2424
1877	4	2424
1960	4	2424
2150	4	2424
2317	4	2424
2319	4	2424
2377	4	2424
2342	4	2424
2376	4	2424
2379	4	2424
2424	4	2424
2482	4	2424
2618	4	2424
2632	4	2424
2704	4	2424
2723	4	2424
2738	4	2424
2740	4	2424
2741	4	2424
2867	4	2424
3184	4	2424
1749	5	2424
2424	5	2424
2424	5	2424
2424	5	2424


************************

************************
Document:  CACM-2307.html
************************


Dynamic Document Processing

The current role of computers in automatic
document processing is briefly outlined, and some 
reasons are given why the early promise of library automation
and of the mechanization of documentation 
processes has not been fulfilled.  A new dynamic document
environment is then outlined in which clustered
files are searched and information is retrieved following
an interactive user-controlled search process. 
 Methods are described for an automatic query modification
based on user needs, and for a continuous 
reorganization of the stored information as a function of
earlier file processing and of normal collection 
growth.  The proposed procedures provide powerful tools
for <B>information retrieval</B> and for the control 
of dynamic library collections in which new items
are continually added and old ones are retired.

CACM July, 1972

Salton, G.

automatic indexing, automatic search and retrieval,
iterative searching, mechanized library processing, 
collection growth, collection retirement, feedback search

3.62 3.71 3.73 3.74

CA720721 JB January 30, 1978  10:59 AM

2307	5	2307
2307	5	2307
2307	5	2307


************************

************************
Document:  CACM-2176.html
************************


Buffer Allocation in Merge-Sorting

A fixed buffer allocation for merge-sorting
is presented here which minimizes the number of 
input-output operations for a given order of merge.
 When sorting on movable arm disks, the number of 
seeks is equal to the number of input-output operations,
and the seek time usually controls the sort 
time.  First some standard terminology is introduced. 
Then the input buffer allocation method is described, 
followed by an analysis of the improvement to be expected
over more conventional allocation.  This analysis 
makes <B>use of</B> a particular distribution function.  An
analysis of a completely different distribution 
is given which yields similar results.  This suggests
that the results do not depend on a particular 
distribution function.  An optimum output buffer size
is also determined.  It is concluded that this 
buffering allocation can significantly reduce the time
of merge sorting on movable arm disks when the 
input data are not random, and that this output buffer
allocation should be used whether the data is 
random or not.

CACM July, 1971

Ferguson, D. E.

file, item, string, merge sort, seek time, gamma distribution function

4.41 5.31

CA710706 JB February 3, 1978  8:41 AM

1638	4	2176
2176	4	2176
2272	4	2176
2176	5	2176
2176	5	2176
2176	5	2176
677	5	2176


************************



Buffer Allocation in Merge-Sorting

A fixed buffer allocation for merge-sorting
is presented here which minimizes the number of 
input-output operations for a given order of merge.
 When sorting on movable arm disks, the number of 
seeks is equal to the number of input-output operations,
and the seek time usually controls the sort 
time.  First some standard terminology is introduced. 
Then the input buffer allocation method is described, 
followed by an analysis of the improvement to be expected
over more conventional allocation.  This analysis 
makes use <B>of a</B> particular distribution function.  An
analysis of a completely different distribution 
is given which yields similar results.  This suggests
that the results do not depend on a particular 
distribution function.  An optimum output buffer size
is also determined.  It is concluded that this 
buffering allocation can significantly reduce the time
of merge sorting on movable arm disks when the 
input data are not random, and that this output buffer
allocation should be used whether the data is 
random or not.

CACM July, 1971

Ferguson, D. E.

file, item, string, merge sort, seek time, gamma distribution function

4.41 5.31

CA710706 JB February 3, 1978  8:41 AM

1638	4	2176
2176	4	2176
2272	4	2176
2176	5	2176
2176	5	2176
2176	5	2176
677	5	2176


************************

************************
Document:  CACM-2622.html
************************


A User Authentication Scheme Not Requiring Secrecy in the Computer

In many computer operating systems a user authenticates
himself by entering a secret password 
known solely to himself and the system.  The system compares
this password with one recorded in a Password 
Table which is available to only the authentication
program.  The integrity of the system depends on 
keeping the table secret.  In this paper a password
scheme is presented which does not require secrecy 
in the computer.    All aspects of the system, including
all relevant code and data bases, may be known 
by anyone attempting to intrude.  The scheme is based
on using a function H which the would-be intruder 
is unable to invert.  This function is applied to the
user's password and the result compared to a table 
entry, a match being interpreted as authentication of
the user.  The intruder may know all about H and 
have access to the table, but he can penetrate the system
only if he can invert H <B>to determine</B> an input 
that produces a given output.  This paper discusses
issues surrounding selection of a suitable H.  Two 
different plausible arguments are given that penetration
would be exceedingly difficult, and it is then 
argued that more rigorous results are unlikely.  Finally,
some human engineering problems relating to 
the scheme are discussed.

CACM August, 1974

Evans, A. Jr.
Kantrowitz, W.
Weiss, E.

operating system security, security, authentication,
passwords, one-way encryption, cryptology

4.39 5.39

CA740802 JB January 17, 1978  10:19 AM

2622	5	2622
2622	5	2622
2622	5	2622


************************



A User Authentication Scheme Not Requiring Secrecy in the Computer

In many computer operating systems <B>a user</B> authenticates
himself by entering a secret password 
known solely to himself and the system.  The system compares
this password with one recorded in a Password 
Table which is available to only the authentication
program.  The integrity of the system depends on 
keeping the table secret.  In this paper a password
scheme is presented which does not require secrecy 
in the computer.    All aspects of the system, including
all relevant code and data bases, may be known 
by anyone attempting to intrude.  The scheme is based
on using a function H which the would-be intruder 
is unable to invert.  This function is applied to the
user's password and the result compared to a table 
entry, a match being interpreted as authentication of
the user.  The intruder may know all about H and 
have access to the table, but he can penetrate the system
only if he can invert H to determine an input 
that produces a given output.  This paper discusses
issues surrounding selection of a suitable H.  Two 
different plausible arguments are given that penetration
would be exceedingly difficult, and it is then 
argued that more rigorous results are unlikely.  Finally,
some human engineering problems relating to 
the scheme are discussed.

CACM August, 1974

Evans, A. Jr.
Kantrowitz, W.
Weiss, E.

operating system security, security, authentication,
passwords, one-way encryption, cryptology

4.39 5.39

CA740802 JB January 17, 1978  10:19 AM

2622	5	2622
2622	5	2622
2622	5	2622


************************



A User Authentication Scheme Not Requiring Secrecy in the Computer

In many computer operating systems a user authenticates
himself by entering a secret password 
known solely to himself and the system.  The system compares
this password with one recorded in a Password 
Table which is available to only the authentication
program.  The integrity of the system depends on 
keeping the table secret.  In this paper a password
scheme is presented which does not require secrecy 
in the computer.    All aspects of the system, including
all relevant code and data bases, may be known 
by anyone attempting to intrude.  The scheme is based
on using a function H which the would-be intruder 
is unable to invert.  This function is applied to the
user's password and the result compared to a table 
entry, a match being interpreted as authentication of
the user.  The intruder may know all about H and 
have access to the table, but he can penetrate the system
only if he can invert H to determine an input 
that produces a given output.  This paper discusses
issues surrounding selection <B>of a</B> suitable H.  Two 
different plausible arguments are given that penetration
would be exceedingly difficult, and it is then 
argued that more rigorous results are unlikely.  Finally,
some human engineering problems relating to 
the scheme are discussed.

CACM August, 1974

Evans, A. Jr.
Kantrowitz, W.
Weiss, E.

operating system security, security, authentication,
passwords, one-way encryption, cryptology

4.39 5.39

CA740802 JB January 17, 1978  10:19 AM

2622	5	2622
2622	5	2622
2622	5	2622


************************

************************
Document:  CACM-2278.html
************************


On Foster's Information Storage and Retrieval Using AVL Trees

CACM September, 1972

Tan, K. C.

binary trees, search trees, information storage, <B>information retrieval</B>

3.70 3.73 3.74

CA720912 JB January 27, 1978  4:10 PM

2278	5	2278
2278	5	2278
2278	5	2278
2455	5	2278
2278	6	2278
2388	6	2278


************************

************************
Document:  CACM-0440.html
************************


Record Linkage

Special difficulties are encountered in devising
reliable systems for searching and updating 
any large files of documents that must be identified
primarily on the basis of names and other personal 
particulars.  The underlying problem is that of making nearly
maximum <B>use of</B> items of identifying information 
that are individually unreliable but that may collectively
be of considerable discriminating power.  
Rules that can be applied generally to name retrieval
systems have been developed in a methodological 
study of the linkage of vital and health records into
family groupings for demographic research purposes. 
 These rules are described, and the ways in which information
utilization for matching may be optimized 
are discussed.

CACM November, 1962

Newcombe, H. B.
Kennedy, J. M.

CA621121 JB March 17, 1978  5:51 PM

1112	4	440
1592	4	440
2111	4	440
2339	4	440
440	4	440
2339	5	440
440	5	440
440	5	440
440	5	440
619	5	440
1112	6	440
1592	6	440
440	6	440
619	6	440


************************

************************
Document:  CACM-2979.html
************************


Studies in Machine Cognition Using The Game of Poker

A progress report is presented of on-going
research efforts concerning human decision making 
under uncertainly and risk and human problem solving
and learning processes on the one hand, and machine 
learning, large scale programming systems, and novel
programming techniques on the other.  There has 
also been in terest in how humans make deductive and inductive
inferences and form and optimize heuristic 
rules, and how machines can reach similar results.
 Although the vehicle of these investigations has 
been the game of poker, a conceptual framework has been
provided that should have a fairly wide range 
<B>of a</B>pplicability.  The models of human judgment, choice,
and decision making are incorporated in a large 
scale complex program.  They represent both descriptive
and normative theories of behavior. An in teractive 
game environment has been recently established which,
besides its usefulness for experiments in game 
playing, enables humans to construct machine strategies
"on-line" in a question answering, advice taking 
mode.

CACM April, 1977

Findler, N. V.

machine learning, game playing programs, decision
making under uncertain ty and risk, automatic 
forming and optimizing of heuristic rules, automatic
inductive and deductive inference making, models 
of game learning, poker, gambling and bluffing

3.36 3.62 3.61 3.64 3.65 3.66

CA770403 JB December 29, 1977  5:34 AM

2979	5	2979
2979	5	2979
2979	5	2979


************************

************************
Document:  CACM-1937.html
************************


CODAS: A Data Display System

CODAS, a Customer Oriented Data System, is
a user-oriented dat<B>a retrieval</B> and display system. 
 The command language of the system provides the user
with an easy means for specifying data retrieval 
and display requests.  Data is displayed as tables and
graphs produced in a format ready for publication. 
 In this paper the statements of the request language
and the general system design are described.

CACM February, 1969

Day, R. H.
Mansfield, M. K.
Ellis, M. E.

data display, information retrieval, graphic display,
command languages, report program generation, 
management data processing

3.50 3.51 3.59 3.70 3.75 3.79 4.20 4.29

CA690201 JB February 20, 1978  11:32 AM

1937	5	1937
1937	5	1937
1937	5	1937
2002	5	1937
1767	6	1937
1937	6	1937


************************



CODAS: A Data Display System

CODAS, a Customer Oriented Data System, is
a user-oriented data retrieval and display system. 
 The command language of the system provides the user
with an easy means for specifying data retrieval 
and display requests.  Data is displayed as tables and
graphs produced in a format ready for publication. 
 In this paper the statements of the request language
and the general system design are described.

CACM February, 1969

Day, R. H.
Mansfield, M. K.
Ellis, M. E.

data display, <B>information retrieval</B>, graphic display,
command languages, report program generation, 
management data processing

3.50 3.51 3.59 3.70 3.75 3.79 4.20 4.29

CA690201 JB February 20, 1978  11:32 AM

1937	5	1937
1937	5	1937
1937	5	1937
2002	5	1937
1767	6	1937
1937	6	1937


************************



CODAS: A Data Display System

CODAS, a Customer Oriented Data System, is
<B>a user</B>-oriented data retrieval and display system. 
 The command language of the system provides the user
with an easy means for specifying data retrieval 
and display requests.  Data is displayed as tables and
graphs produced in a format ready for publication. 
 In this paper the statements of the request language
and the general system design are described.

CACM February, 1969

Day, R. H.
Mansfield, M. K.
Ellis, M. E.

data display, information retrieval, graphic display,
command languages, report program generation, 
management data processing

3.50 3.51 3.59 3.70 3.75 3.79 4.20 4.29

CA690201 JB February 20, 1978  11:32 AM

1937	5	1937
1937	5	1937
1937	5	1937
2002	5	1937
1767	6	1937
1937	6	1937


************************

************************
Document:  CACM-2561.html
************************


A Heuristic Approach to Inductive Inference in Fact Retrieval Systems

Heuristic procedures are presented which have
been developed to perform inferences by generalizing 
from available information.  The procedures make use
of a similarity structure which is imposed on the 
data base using nonnumerical clustering algorithms.  They
are implemented in a model fact <B>retrieval system</B> 
which uses a formal query language and a property-list data
structure.  A program of experiments is described 
wherein the procedures are used with test data bases
which are altered by deleting part of the data and 
by purposely introducing false data.  It is found that
the system can infer the correct response under 
a variety of conditions involving incomplete and inconsistent data.

CACM December, 1974

Skinner, C. W.

inference, inductive inference, clustering, fact retrieval, heuristics

3.61 3.71 3.79

CA741213 JB January 13, 1978  3:40 PM

2178	4	2561
2396	4	2561
2561	4	2561
2127	5	2561
2561	5	2561
2561	5	2561
2561	5	2561


************************



A Heuristic Approach to Inductive Inference in Fact Retrieval Systems

Heuristic procedures are presented which have
been developed to perform inferences by generalizing 
from available information.  The procedures make use
<B>of a</B> similarity structure which is imposed on the 
data base using nonnumerical clustering algorithms.  They
are implemented in a model fact retrieval system 
which uses a formal query language and a property-list data
structure.  A program of experiments is described 
wherein the procedures are used with test data bases
which are altered by deleting part of the data and 
by purposely introducing false data.  It is found that
the system can infer the correct response under 
a variety of conditions involving incomplete and inconsistent data.

CACM December, 1974

Skinner, C. W.

inference, inductive inference, clustering, fact retrieval, heuristics

3.61 3.71 3.79

CA741213 JB January 13, 1978  3:40 PM

2178	4	2561
2396	4	2561
2561	4	2561
2127	5	2561
2561	5	2561
2561	5	2561
2561	5	2561


************************

************************
Document:  CACM-2846.html
************************


Compressed Tries

This paper presents a new data structure,
called a compressed trie or C-trie, to be used in 
<B>information retrieval</B> systems.  It has the same underlying
m-ary tree structure as a trie, where m is 
a parameter of the trie, but whereas the fields of the
nodes in a trie have to be large enough to hold 
a key or at least a pointer, the fields in a C-trie are
only one bit long.  In the analysis part of the 
paper it will be shown that for a collection of n keys the
retrieval time, measured in terms of bit inspections 
of one key, is of the order logm(n) and the storage
requirement of the order n*(m+log2 n) bits.  This 
improvement in storage requirements and retrieval time
is achieved at the cost of decreasing the flexibility 
of the structure, and therefore updating costs are increased.
 First the C-trie is analyzed as a data 
structure, and then several methods of its use
for relatively static databases are discussed.

CACM July, 1976

Maly, K.

data structure, database, m-ary tree, trie,
retrieval time, storage requirement, keys

3.70 3.74 3.75

CA760707 JB January 4, 1978  12:26 PM

2846	4	2846
849	4	2846
944	4	2846
155	5	2846
2846	5	2846
2846	5	2846
2846	5	2846
3041	5	2846
2846	6	2846
2905	6	2846


************************



Compressed Tries

This paper presents a new data structure,
called a compressed trie or C-trie, to be used in 
information <B>retrieval system</B>s.  It has the same underlying
m-ary tree structure as a trie, where m is 
a parameter of the trie, but whereas the fields of the
nodes in a trie have to be large enough to hold 
a key or at least a pointer, the fields in a C-trie are
only one bit long.  In the analysis part of the 
paper it will be shown that for a collection of n keys the
retrieval time, measured in terms of bit inspections 
of one key, is of the order logm(n) and the storage
requirement of the order n*(m+log2 n) bits.  This 
improvement in storage requirements and retrieval time
is achieved at the cost of decreasing the flexibility 
of the structure, and therefore updating costs are increased.
 First the C-trie is analyzed as a data 
structure, and then several methods of its use
for relatively static databases are discussed.

CACM July, 1976

Maly, K.

data structure, database, m-ary tree, trie,
retrieval time, storage requirement, keys

3.70 3.74 3.75

CA760707 JB January 4, 1978  12:26 PM

2846	4	2846
849	4	2846
944	4	2846
155	5	2846
2846	5	2846
2846	5	2846
2846	5	2846
3041	5	2846
2846	6	2846
2905	6	2846


************************

************************
Document:  CACM-2258.html
************************


Additional Results on Key-to-Address Transform
Techniques: A Fundamental Performance Study on 
Large Existing Formatted Files

CACM November, 1972

Lum, V. Y.
Yuen, P. S. T.

hashing, hashing techniques, hashing methods, hash
coding, keys, key transformation, key-to-address 
transformation, direct addressing, direct access method,
randomizing, random access file organization, 
file search, scatter storage, <B>information retrieval</B>

3.7 3.72 3.73 3.74 3.79 4.9

CA721111 JB January 27, 1978  1:31 PM  

2258	4	2258
2319	4	2258
2313	4	2258
2359	4	2258
2437	4	2258
2552	4	2258
2781	4	2258
2860	4	2258
2991	4	2258
2203	5	2258
2258	5	2258
2258	5	2258
2258	5	2258


************************

************************
Document:  CACM-2516.html
************************


Hierarchical Storage in Information Retrieval

A probabilistic analysis is employed <B>to determine</B>
the effect of hierarchical storage organizations 
on information retrieval operations.  The data storage
hardware is assumed to consist on n-levels of 
linearly connected memory hardware with increasing data
access times and increasing data storage capabilities. 
 A system might, for example, consist of fast semiconductor
memory, computer core memory, extended core 
storage, disk memory, and data cells.  Equations are derived
to predict the effect of such a system on 
data access times using sequential files, random access files,
and structured files employing multiple-hierarchical 
linked lists.

CACM May, 1973

Salasin, J.

information retrieval, hierarchical storage

3.70 3.72 3.73 3.74 3.79 3.90 6.20 6.34

CA730504 JB January 24, 1978  8:48 AM

2516	5	2516
2516	5	2516
2516	5	2516


************************



Hierarchical Storage in Information Retrieval

A probabilistic analysis is employed to determine
the effect of hierarchical storage organizations 
on <B>information retrieval</B> operations.  The data storage
hardware is assumed to consist on n-levels of 
linearly connected memory hardware with increasing data
access times and increasing data storage capabilities. 
 A system might, for example, consist of fast semiconductor
memory, computer core memory, extended core 
storage, disk memory, and data cells.  Equations are derived
to predict the effect of such a system on 
data access times using sequential files, random access files,
and structured files employing multiple-hierarchical 
linked lists.

CACM May, 1973

Salasin, J.

information retrieval, hierarchical storage

3.70 3.72 3.73 3.74 3.79 3.90 6.20 6.34

CA730504 JB January 24, 1978  8:48 AM

2516	5	2516
2516	5	2516
2516	5	2516


************************

************************
Document:  CACM-2965.html
************************


An Optimal Evaluation of Boolean Expressions in an Online Query System

CACM May, 1977

Hanani, M. Z.

query, Boolean expression, <B>information retrieval</B>, file organization

3.5 3.70 3.74

CA770507 JB December 29, 1977  1:51 AM

2155	4	2965
2406	4	2965
2710	4	2965
2715	4	2965
2716	4	2965
2717	4	2965
2718	4	2965
2765	4	2965
2765	4	2965
2817	4	2965
2888	4	2965
2901	4	2965
2957	4	2965
2959	4	2965
2965	4	2965
2965	4	2965
3087	4	2965
3154	4	2965
2046	5	2965
2451	5	2965
2965	5	2965
2965	5	2965
2965	5	2965
3168	5	2965
3169	5	2965
2965	6	2965
2965	6	2965
3002	6	2965


************************

************************
Document:  CACM-2552.html
************************


A Note on When To Chain Overflow Items Within a Direct-Access Table

CACM January, 1973

Bays, C.

hash code, open hash, chaining, <B>information retrieval</B>, collision

3.7 4.9

CA730109 JB January 24, 1978  4:07 PM

1271	4	2552
1676	4	2552
1682	4	2552
1728	4	2552
1785	4	2552
1785	4	2552
1860	4	2552
1973	4	2552
2018	4	2552
2032	4	2552
2033	4	2552
2107	4	2552
2109	4	2552
2203	4	2552
2203	4	2552
2251	4	2552
2258	4	2552
2319	4	2552
2313	4	2552
2359	4	2552
2359	4	2552
2437	4	2552
2524	4	2552
2543	4	2552
2543	4	2552
2552	4	2552
2552	4	2552
2552	4	2552
2552	4	2552
2559	4	2552
2781	4	2552
2860	4	2552
2991	4	2552
2991	4	2552
3053	4	2552
911	4	2552
911	5	2552
1785	5	2552
332	5	2552
2203	5	2552
2552	5	2552
2552	5	2552
2552	5	2552
3083	5	2552
1328	6	2552
1973	6	2552
2107	6	2552
2543	6	2552
2552	6	2552


************************

************************
Document:  CACM-1705.html
************************


A Set of Basic Input-Output Procedures (Algorithm 335 [15])

By means of the primitives in symbol, outsymbol
and length, as requested by this journal's 
Algorithms Policy [Comm. ACM 10 (Nov. 67), 729] a basic
set of input-output procedures is defined aiming 
at quality and flexibility.  Outreal, for instance, is
written as a derived procedure; it outputs using 
the fixed point or the floating point representation,
and rounds properly.  Variants can easily be written 
beca<B>use of</B> the explicit call of the procedures decompose
integer and decompose real.  The highly recommended 
practice of echoing input is made easy with one subset
of derived procedures (ioi, ior, iob, ioa).  The 
documentation of output in the form of equivalent ALGOL
statements is also provided when use is made 
of the subset oti, otr, otb, ota.  The Berkeley style
of providing information on the form of output 
using prior calls of procedures such as real format is
defined.  A use of the parameter outchannel to 
provide information for simultaneous output to several
channels is suggested.  Interrelationship between 
the declared procedures is furnished in tabular form.

CACM August, 1968

De Vogelaere, R.

input output, transput, input output procedures,
input echo, quality output, decompose integer, 
decompose real, style, Berkeley style, procedures relationship,
output documentation, equivalent ALGOL 
statements, ALGOL, ALGOL 60, integer format, real format,out
integer, read real, input output Boolean, 
input output array, fixed point representation, floating
point representation, output channel interpretation

4.0 4.41

CA680809 JB February 22, 1978  10:32 AM

1705	4	1705
1705	4	1705
1705	4	1705
1705	4	1705
1945	4	1705
2034	4	1705
984	5	1705
986	5	1705
1020	5	1705
1321	5	1705
1705	5	1705
1705	5	1705
1705	5	1705


************************

************************
Document:  CACM-1627.html
************************


Application of Level Changing to a Multilevel Storage Organization

A technique for organizing the devices of a computer
storage system is described.  This technique, 
called the multilevel store, provides a means for economically
satisfying the requirements for very large 
storage capacities of certain data management and information
retrieval systems.  The concept of level 
changing is introduced and its application to the multilevel
store is discussed.  A possible means for 
physically organizing the information for efficient
<B>use of</B> the multilevel store is presented.

CACM March, 1967

Morenoff, E.
McLean, J. B.

CA670302 JB February 28, 1978  1:43 PM

1627	5	1627
1627	5	1627
1627	5	1627


************************



Application of Level Changing to a Multilevel Storage Organization

A technique for organizing the devices <B>of a</B> computer
storage system is described.  This technique, 
called the multilevel store, provides a means for economically
satisfying the requirements for very large 
storage capacities of certain data management and information
retrieval systems.  The concept of level 
changing is introduced and its application to the multilevel
store is discussed.  A possible means for 
physically organizing the information for efficient
use of the multilevel store is presented.

CACM March, 1967

Morenoff, E.
McLean, J. B.

CA670302 JB February 28, 1978  1:43 PM

1627	5	1627
1627	5	1627
1627	5	1627


************************



Application of Level Changing to a Multilevel Storage Organization

A technique for organizing the devices of a computer
storage system is described.  This technique, 
called the multilevel store, provides a means for economically
satisfying the requirements for very large 
storage capacities of certain data management and information
<B>retrieval system</B>s.  The concept of level 
changing is introduced and its application to the multilevel
store is discussed.  A possible means for 
physically organizing the information for efficient
use of the multilevel store is presented.

CACM March, 1967

Morenoff, E.
McLean, J. B.

CA670302 JB February 28, 1978  1:43 PM

1627	5	1627
1627	5	1627
1627	5	1627


************************

************************
Document:  CACM-2092.html
************************


A Deductive Question-Answer for Natural Language Inference

The question-answering aspects of the Protosynthex III pro
totype language processing system are described and exemplified in
detail.  The system is written in LISP 1.5 and operates on the Q-32
time-sharing system.  The system's data structures and their semantic
organization, the deductive question-answering formalism of
relational properties and complex-relation-forming operators, and
the question-answering procedures which employ these features in
their operation are all described and illustrated.  Examples of the
system's performance and of the limitations of its question-answering 
capability are presented and discussed.  It is shown that the
<B>use of</B> semantic information in deductive question answering greatly 
facilitates the process, and that a top-down procedure which works
from question to answer enables effective use to be made of this
information.  It is concluded that the development of Protosynthex
III into a practically useful system to work with large data
bases is possible but will require changes in both the data
structures and the algorithms used for question answering.

CACM March, 1970

Schwarcz, R. M.
Burger, J. F.
Simmons, R. F.

question answering, natural language, Protosynthex III, LISP,
semantics, artificial intelligence, computational
linguistics, language processing, fact retrieval

3.42 3.61

CA700306 JB February 13, 1978  4:30 PM

2092	4	2092
2127	4	2092
1527	5	2092
2092	5	2092
2092	5	2092
2092	5	2092
2396	5	2092
1487	6	2092
1856	6	2092
2092	6	2092
2127	6	2092


************************

************************
Document:  CACM-2519.html
************************


On the Problem of Communicating Complex Information

The nature of the difficulty involved in communicating
mathematical results between scientists 
using a computer based information <B>retrieval system</B>
is examined.  The problem is analyzed in terms of 
psychological and information-processing processes, and
what turns out to be a vicious circle of effects 
is described.  These include ways of augmenting written
natural language by various notational and linguistic 
devices, the exhibition of the structure inherent in the
information we are communicating, and a sophisticated 
interactive system controlled by computer.

CACM May, 1973

Pager, D.

complex information, information, communication,
mathematics, proof, interactive system, language

1.0 1.1 1.50 1.52 1.59 2.42 3.32 3.51 3.62 3.70 3.81

CA730501 JB January 24, 1978  9:25 AM

2519	4	2519
2390	5	2519
2519	5	2519
2519	5	2519
2519	5	2519


************************



On the Problem of Communicating Complex Information

The nature of the difficulty involved in communicating
mathematical results between scientists 
using a computer based information retrieval system
is examined.  The problem is analyzed in terms of 
psychological and information-processing processes, and
what turns out to be a vicious circle of effects 
is described.  These include ways <B>of a</B>ugmenting written
natural language by various notational and linguistic 
devices, the exhibition of the structure inherent in the
information we are communicating, and a sophisticated 
interactive system controlled by computer.

CACM May, 1973

Pager, D.

complex information, information, communication,
mathematics, proof, interactive system, language

1.0 1.1 1.50 1.52 1.59 2.42 3.32 3.51 3.62 3.70 3.81

CA730501 JB January 24, 1978  9:25 AM

2519	4	2519
2390	5	2519
2519	5	2519
2519	5	2519
2519	5	2519


************************



On the Problem of Communicating Complex Information

The nature of the difficulty involved in communicating
mathematical results between scientists 
using a computer based <B>information retrieval</B> system
is examined.  The problem is analyzed in terms of 
psychological and information-processing processes, and
what turns out to be a vicious circle of effects 
is described.  These include ways of augmenting written
natural language by various notational and linguistic 
devices, the exhibition of the structure inherent in the
information we are communicating, and a sophisticated 
interactive system controlled by computer.

CACM May, 1973

Pager, D.

complex information, information, communication,
mathematics, proof, interactive system, language

1.0 1.1 1.50 1.52 1.59 2.42 3.32 3.51 3.62 3.70 3.81

CA730501 JB January 24, 1978  9:25 AM

2519	4	2519
2390	5	2519
2519	5	2519
2519	5	2519
2519	5	2519


************************

************************
Document:  CACM-1830.html
************************


Retrieval Times for a Packed Direct Access Inverted File

CACM October, 1969

Bayes, A. J.

<B>information retrieval</B>, direct access memory, data base, inverted list

3.70 4.41

CA691016 JB February 15, 1978  1:27 PM

1830	5	1830
1830	5	1830
1830	5	1830


************************

************************
Document:  CACM-2711.html
************************


A Vector Space Model for Automatic Indexing

In a document retrieval, or other pattern matching
environment where stored entities (documents) 
are compared with each other or with incoming patterns
(search requests), it appears that the best indexing 
(property) space is one where each entity lies as far away
from the others as possible; in these circumstances 
the value <B>of a</B>n indexing system may be expressible
as a function of the density of the object space; 
in particular, retrieval performance may correlate inversely
with space density.  An approach based on 
space density computations is used to choose an optimum
indexing vocabulary for a collection of documents. 
 Typical evaluation results are shown, demonstrating
the usefulness of the model.

CACM November, 1975

Salton, G.
Wong, A.
Yang, C. S.

automatic information retrieval, automatic
indexing, content analysis, document space

3.71 3.73 3.74 3.75

CA751101 JB January 6, 1978  10:14 AM

2711	5	2711
2711	5	2711
2711	5	2711


************************



A Vector Space Model for Automatic Indexing

In a document retrieval, or other pattern matching
environment where stored entities (documents) 
are compared with each other or with incoming patterns
(search requests), it appears that the best indexing 
(property) space is one where each entity lies as far away
from the others as possible; in these circumstances 
the value of an indexing system may be expressible
as a function of the density of the object space; 
in particular, retrieval performance may correlate inversely
with space density.  An approach based on 
space density computations is used to choose an optimum
indexing vocabulary for a collection of documents. 
 Typical evaluation results are shown, demonstrating
the usefulness of the model.

CACM November, 1975

Salton, G.
Wong, A.
Yang, C. S.

automatic <B>information retrieval</B>, automatic
indexing, content analysis, document space

3.71 3.73 3.74 3.75

CA751101 JB January 6, 1978  10:14 AM

2711	5	2711
2711	5	2711
2711	5	2711


************************

************************
Document:  CACM-1681.html
************************


Easy English,a Language for Information
Retrieval Through a Remote Typewriter Console

Easy English is a natural command language
designed to simplify communication between man and 
machine through remote typewriter console.  It has been developed
for retrieval of documents from a computerized 
data base, the Moore School Information Systems Laboratory
files.  Requests are formulated in a standardized 
syntactical form (examples of which are presented), and
this form is then transformed into an equivalent 
query expressed in the retrieval system's original Symbolic
Command Language, which is briefly described. 
 Operation of easy English is detailed by illustration
of the transformations performed upon a sample 
request up to the point at which the request string
is sent to the system.  A macro flowchart of Easy 
English is included, and an Appendix provides
the printout of a retrieval demonstration.

CACM October, 1968

Rubinoff, M.
Bergman, S.
Cautin, H.
Rapp, F.

natural language communication, on-line searching,
remote console communication, <B>information retrieval</B>, 
man-machine communication, remote terminal communication,
translator, document retrieval, conversational 
mode, information retrieval language, symbolic command language

3.74 3.81 4.19

CA681006 JB February 21, 1978  3:59 PM

1681	4	1681
1699	4	1681
1194	5	1681
1681	5	1681
1681	5	1681
1681	5	1681
1699	5	1681
1194	6	1681
1324	6	1681
1681	6	1681


************************



Easy English,a Language for Information
Retrieval Through a Remote Typewriter Console

Easy English is a natural command language
designed to simplify communication between man and 
machine through remote typewriter console.  It has been developed
for retrieval of documents from a computerized 
data base, the Moore School Information Systems Laboratory
files.  Requests are formulated in a standardized 
syntactical form (examples of which are presented), and
this form is then transformed into an equivalent 
query expressed in the <B>retrieval system</B>'s original Symbolic
Command Language, which is briefly described. 
 Operation of easy English is detailed by illustration
of the transformations performed upon a sample 
request up to the point at which the request string
is sent to the system.  A macro flowchart of Easy 
English is included, and an Appendix provides
the printout of a retrieval demonstration.

CACM October, 1968

Rubinoff, M.
Bergman, S.
Cautin, H.
Rapp, F.

natural language communication, on-line searching,
remote console communication, information retrieval, 
man-machine communication, remote terminal communication,
translator, document retrieval, conversational 
mode, information retrieval language, symbolic command language

3.74 3.81 4.19

CA681006 JB February 21, 1978  3:59 PM

1681	4	1681
1699	4	1681
1194	5	1681
1681	5	1681
1681	5	1681
1681	5	1681
1699	5	1681
1194	6	1681
1324	6	1681
1681	6	1681


************************



Easy English,a Language for Information
Retrieval Through a Remote Typewriter Console

Easy English is a natural command language
designed to simplify communication between man and 
machine through remote typewriter console.  It has been developed
for retrieval of documents from a computerized 
data base, the Moore School Information Systems Laboratory
files.  Requests are formulated in a standardized 
syntactical form (examples of which are presented), and
this form is then transformed into an equivalent 
query expressed in the retrieval system's original Symbolic
Command Language, which is briefly described. 
 Operation of easy English is detailed by illustration
of the transformations performed upon a sample 
request up to the point at which the request string
is sent to the system.  A macro flowchart of Easy 
English is included, and an Appendix provides
the printout of <B>a retrieval</B> demonstration.

CACM October, 1968

Rubinoff, M.
Bergman, S.
Cautin, H.
Rapp, F.

natural language communication, on-line searching,
remote console communication, information retrieval, 
man-machine communication, remote terminal communication,
translator, document retrieval, conversational 
mode, information retrieval language, symbolic command language

3.74 3.81 4.19

CA681006 JB February 21, 1978  3:59 PM

1681	4	1681
1699	4	1681
1194	5	1681
1681	5	1681
1681	5	1681
1681	5	1681
1699	5	1681
1194	6	1681
1324	6	1681
1681	6	1681


************************



Easy English,a Language for Information
Retrieval Through a Remote Typewriter Console

Easy English is a natural command language
designed to simplify communication between man and 
machine through remote typewriter console.  It has been developed
for retrieval of documents from a computerized 
data base, the Moore School Information Systems Laboratory
files.  Requests are formulated in a standardized 
syntactical form (examples of which are presented), and
this form is then transformed into an equivalent 
query expressed in the retrieval system's original Symbolic
Command Language, which is briefly described. 
 Operation of easy English is detailed by illustration
of the transformations performed upon a sample 
request up to the point at which the request string
is sent to the system.  A macro flowchart of Easy 
English is included, and an Appendix provides
the printout <B>of a</B> retrieval demonstration.

CACM October, 1968

Rubinoff, M.
Bergman, S.
Cautin, H.
Rapp, F.

natural language communication, on-line searching,
remote console communication, information retrieval, 
man-machine communication, remote terminal communication,
translator, document retrieval, conversational 
mode, information retrieval language, symbolic command language

3.74 3.81 4.19

CA681006 JB February 21, 1978  3:59 PM

1681	4	1681
1699	4	1681
1194	5	1681
1681	5	1681
1681	5	1681
1681	5	1681
1699	5	1681
1194	6	1681
1324	6	1681
1681	6	1681


************************

************************
Document:  CACM-1927.html
************************


Information Science in a Ph. Computer Science Program

This report contains recommendations on a sample course
curriculum in the general area of information 
organization and information system design in a Ph.
Computer Science Program.  The subject area is 
first briefly described, followed by a listing of some desirable
graduate-level courses.  Suitable bibliographies 
are appended.

CACM February, 1969

Salton, G.

course curriculum, graduate courses, university
courses,computer science curriculum, information 
science, information organization, information retrieval,
dat<B>a retrieval</B>, language analysis, information 
processing

1.52 3.42 3.70

CA690211 JB February 20, 1978  9:50 AM

1720	4	1927
1927	4	1927
1927	4	1927
2147	4	1927
2163	4	1927
2345	4	1927
2478	4	1927
2594	4	1927
2852	4	1927
2899	4	1927
3003	4	1927
3130	4	1927
1659	5	1927
1771	5	1927
1927	5	1927
1927	5	1927
1927	5	1927
2163	5	1927
3003	5	1927
1659	6	1927
1678	6	1927
1720	6	1927
1771	6	1927
1927	6	1927
1927	6	1927
1945	6	1927
2097	6	1927
2147	6	1927
2163	6	1927
2181	6	1927
2187	6	1927
2329	6	1927
2345	6	1927
2367	6	1927
2407	6	1927
2478	6	1927
2479	6	1927
2480	6	1927
2538	6	1927


************************



Information Science in a Ph. Computer Science Program

This report contains recommendations on a sample course
curriculum in the general area of information 
organization and information system design in a Ph.
Computer Science Program.  The subject area is 
first briefly described, followed by a listing of some desirable
graduate-level courses.  Suitable bibliographies 
are appended.

CACM February, 1969

Salton, G.

course curriculum, graduate courses, university
courses,computer science curriculum, information 
science, information organization, <B>information retrieval</B>,
data retrieval, language analysis, information 
processing

1.52 3.42 3.70

CA690211 JB February 20, 1978  9:50 AM

1720	4	1927
1927	4	1927
1927	4	1927
2147	4	1927
2163	4	1927
2345	4	1927
2478	4	1927
2594	4	1927
2852	4	1927
2899	4	1927
3003	4	1927
3130	4	1927
1659	5	1927
1771	5	1927
1927	5	1927
1927	5	1927
1927	5	1927
2163	5	1927
3003	5	1927
1659	6	1927
1678	6	1927
1720	6	1927
1771	6	1927
1927	6	1927
1927	6	1927
1945	6	1927
2097	6	1927
2147	6	1927
2163	6	1927
2181	6	1927
2187	6	1927
2329	6	1927
2345	6	1927
2367	6	1927
2407	6	1927
2478	6	1927
2479	6	1927
2480	6	1927
2538	6	1927


************************

************************
Document:  CACM-1976.html
************************


Multi-attribute Retrieval with Combined Indexes

In this paper a file organization scheme designed to
replace the <B>use of</B> the popular secondary index filing scheme
(or inverted files on secondary key fields) is described.
Through the use of redundancy and storing 
keys (or access numbers of the records) that satisfy different combinations
of secondary index values in "buckets," it is possible to retrieve
all keys satisfying any input query derived from a subset of
fields by a single access to an index file, although each bucket may
be used for many combinations of values and a combination of
buckets may be required for a given query.  The method which, in its
degenerate case, becomes the conventional secondary index filing
scheme works similarly but has the following advantages: (1) the elimination
of multiple accesses in many cases; (2) the elimination
of false drops; (3) the elimination of computer time to perform intersection
of key sets each qualified for one secondary index field
only; and (4) the avoidance of long strings of keys when an index
field appearing in a query has very few possible values.  Redundancy, in some 
cases, is the same as the secondary indexing method. In the general case, 
trade-off between the number of accesses for query and redundancy exists.

CACM November, 1970

Lum, V. Y.

file organization, secondary index files, inverted files, information
retrieval, data management, access method, secondary 
keys, storage with buckets, rapid retrieval, balanced filing scheme, elimination
of false drops, combining indexes, query, multi-attribute retrieval

3.73 3.74 3.79

CA701102 JB February 10, 1978  9:00 AM

1976	4	1976
1271	5	1976
1976	5	1976
1976	5	1976
1976	5	1976
2140	5	1976
2452	5	1976
2765	5	1976
2901	5	1976
3134	5	1976
849	6	1976
1936	6	1976
1936	6	1976
1976	6	1976
1976	6	1976
1976	6	1976
1976	6	1976
1976	6	1976
2046	6	1976
2046	6	1976
2160	6	1976
2198	6	1976
2451	6	1976
2452	6	1976
2524	6	1976
2715	6	1976
2990	6	1976
616	6	1976


************************



Multi-attribute Retrieval with Combined Indexes

In this paper a file organization scheme designed to
replace the use of the popular secondary index filing scheme
(or inverted files on secondary key fields) is described.
Through the use of redundancy and storing 
keys (or access numbers of the records) that satisfy different combinations
of secondary index values in "buckets," it is possible to retrieve
all keys satisfying any input query derived from a subset of
fields by a single access to an index file, although each bucket may
be used for many combinations of values and a combination of
buckets may be required for a given query.  The method which, in its
degenerate case, becomes the conventional secondary index filing
scheme works similarly but has the following advantages: (1) the elimination
of multiple accesses in many cases; (2) the elimination
of false drops; (3) the elimination of computer time to perform intersection
of key sets each qualified for one secondary index field
only; and (4) the avoidance of long strings of keys when an index
field appearing in a query has very few possible values.  Redundancy, in some 
cases, is the same as the secondary indexing method. In the general case, 
trade-off between the number <B>of a</B>ccesses for query and redundancy exists.

CACM November, 1970

Lum, V. Y.

file organization, secondary index files, inverted files, information
retrieval, data management, access method, secondary 
keys, storage with buckets, rapid retrieval, balanced filing scheme, elimination
of false drops, combining indexes, query, multi-attribute retrieval

3.73 3.74 3.79

CA701102 JB February 10, 1978  9:00 AM

1976	4	1976
1271	5	1976
1976	5	1976
1976	5	1976
1976	5	1976
2140	5	1976
2452	5	1976
2765	5	1976
2901	5	1976
3134	5	1976
849	6	1976
1936	6	1976
1936	6	1976
1976	6	1976
1976	6	1976
1976	6	1976
1976	6	1976
1976	6	1976
2046	6	1976
2046	6	1976
2160	6	1976
2198	6	1976
2451	6	1976
2452	6	1976
2524	6	1976
2715	6	1976
2990	6	1976
616	6	1976


************************



Multi-attribute Retrieval with Combined Indexes

In this paper a file organization scheme designed to
replace the use of the popular secondary index filing scheme
(or inverted files on secondary key fields) is described.
Through the use of redundancy and storing 
keys (or access numbers of the records) that satisfy different combinations
of secondary index values in "buckets," it is possible to retrieve
all keys satisfying any input query derived from a subset of
fields by a single access to an index file, although each bucket may
be used for many combinations of values and a combination of
buckets may be required for a given query.  The method which, in its
degenerate case, becomes the conventional secondary index filing
scheme works similarly but has the following advantages: (1) the elimination
of multiple accesses in many cases; (2) the elimination
of false drops; (3) the elimination of computer time to perform intersection
of key sets each qualified for one secondary index field
only; and (4) the avoidance of long strings of keys <B>when a</B>n index
field appearing in a query has very few possible values.  Redundancy, in some 
cases, is the same as the secondary indexing method. In the general case, 
trade-off between the number of accesses for query and redundancy exists.

CACM November, 1970

Lum, V. Y.

file organization, secondary index files, inverted files, information
retrieval, data management, access method, secondary 
keys, storage with buckets, rapid retrieval, balanced filing scheme, elimination
of false drops, combining indexes, query, multi-attribute retrieval

3.73 3.74 3.79

CA701102 JB February 10, 1978  9:00 AM

1976	4	1976
1271	5	1976
1976	5	1976
1976	5	1976
1976	5	1976
2140	5	1976
2452	5	1976
2765	5	1976
2901	5	1976
3134	5	1976
849	6	1976
1936	6	1976
1936	6	1976
1976	6	1976
1976	6	1976
1976	6	1976
1976	6	1976
1976	6	1976
2046	6	1976
2046	6	1976
2160	6	1976
2198	6	1976
2451	6	1976
2452	6	1976
2524	6	1976
2715	6	1976
2990	6	1976
616	6	1976


************************

************************
Document:  CACM-1698.html
************************


A Statistical Model for Console Behavior in Multiuser Computers

The ability <B>of a</B> computer system to communicate
with the outside world efficiently is as important 
as its ability to perform computations efficiently. 
It is quite difficult to characterize a particular 
user, but rather easy to characterize the entire user community.
 Based on the properties of this community 
we have postulated a hypothetical "virtual console."
 No claim is made that a virtual console behaves 
like any actual console, but the entire collection of
virtual consoles models the collection of actual 
consoles.  Using the model we answer questions like: 
How many processes are suspended waiting for console 
input?  What is the maximum rate at which a process can
execute?  What bounds can be set on overall buffer 
requirements?  Answers to these and similar questions
are needed in certain aspects of operating system 
design.

CACM September, 1968

Denning, P. J.

statistical models for input-output, operating
system design, input-output design

4.30 4.41 5.5

CA680903 JB February 22, 1978  9:21 AM

1458	4	1698
1523	4	1698
1603	4	1698
1698	4	1698
1747	4	1698
1748	4	1698
1854	4	1698
1877	4	1698
1960	4	1698
2377	4	1698
2378	4	1698
2497	4	1698
2558	4	1698
2625	4	1698
2632	4	1698
2840	4	1698
2941	4	1698
3105	4	1698
3144	4	1698
1471	5	1698
1698	5	1698
1698	5	1698
1698	5	1698


************************

************************
Document:  CACM-1514.html
************************


On the Expected Gain From Adjust ing Matched Term Retrieval Systems

A file adjustment procedure based on maximizing
the Bayes expected gain proposed for matched 
term <B>retrieval system</B>s.  The expected gain and its probability
distribution are derived as a function 
of: (1) the prior proportion of omitted terms, and (2) the
coefficient of separation between two distributions 
corresponding to values of an adjustment statistic.  An
example evaluates the gain parameters for a typical 
information retrieval system.

CACM November, 1967

Shumway, R. H.

CA671106 JB February 26, 1978  2:59 PM

1514	5	1514
1514	5	1514
1514	5	1514


************************



On the Expected Gain From Adjust ing Matched Term Retrieval Systems

A file adjustment procedure based on maximizing
the Bayes expected gain proposed for matched 
term retrieval systems.  The expected gain and its probability
distribution are derived as a function 
of: (1) the prior proportion of omitted terms, and (2) the
coefficient of separation between two distributions 
corresponding to values <B>of a</B>n adjustment statistic.  An
example evaluates the gain parameters for a typical 
information retrieval system.

CACM November, 1967

Shumway, R. H.

CA671106 JB February 26, 1978  2:59 PM

1514	5	1514
1514	5	1514
1514	5	1514


************************



On the Expected Gain From Adjust ing Matched Term Retrieval Systems

A file adjustment procedure based on maximizing
the Bayes expected gain proposed for matched 
term retrieval systems.  The expected gain and its probability
distribution are derived as a function 
of: (1) the prior proportion of omitted terms, and (2) the
coefficient of separation between two distributions 
corresponding to values of an adjustment statistic.  An
example evaluates the gain parameters for a typical 
<B>information retrieval</B> system.

CACM November, 1967

Shumway, R. H.

CA671106 JB February 26, 1978  2:59 PM

1514	5	1514
1514	5	1514
1514	5	1514


************************

************************
Document:  CACM-3011.html
************************


Management Utilization of Computers in American Local Governments

Traditional concepts of management information
systems (MIS) bear little relation to the information 
systems currently in use by top management in most US local
governments.  What exists is management-oriented 
computing, involving the <B>use of</B> relatively unsophisticated
applications.  Despite the unsophisticated 
nature of these systems, management use of computing is
surprisingly common, but also varied in its extent 
among local governments.  Management computing is most
prevalent in those governments with professional 
management practices where top management is supportive
of computing and tends to control computing decisions 
and where department users have less control over design
and implementation activities.  Finally, management 
computing clearly has impacts for top managers, mostly
involving improvements in decision information.

CACM March, 1978

Dutton, W.
Kraemer, K.

computer utilization, management information system,
American local government, city government 
computers, county government computers, computer impacts, management computing

2.0 2.1 2.11 2.19 2.4 2.45 2.9 3.5 3.53

CA780302 JB March 28, 1978  1:46 PM

2407	4	3011
2852	4	3011
2977	4	3011
2985	4	3011
3003	4	3011
3011	4	3011
3011	4	3011
3011	4	3011
3011	4	3011
3035	4	3011
3050	4	3011
2075	5	3011
2302	5	3011
2345	5	3011
2485	5	3011
3011	5	3011
3011	5	3011
3011	5	3011


************************

************************
Document:  CACM-3168.html
************************


Comment on "An Optimal Evaluation of Boolean
Expressions in an Online Query System."

CACM October, 1979

Laird, P.

Query, Boolean expression, <B>information retrieval</B>, file organization

3.53.70 3.73 3.74

CA791001 DB January 16, 1980  4:50 PM

3168	4	3168
3168	4	3168
3169	4	3168
2965	5	3168
3002	5	3168
3168	5	3168
3168	5	3168
3168	5	3168


************************

************************
Document:  CACM-3134.html
************************


The Use of Normal Multiplication Tables
for Information Storage and Retrieval

This paper describes a method for the organization and retrieval <B>of a</B>ttribute 
based information systems, using the normal multiplication table as a directory
for the information system.  Algorithms for the organization an
d retrieval of information are described.  This method is particularly
suitable for queries requesting a group of information items,
 all of which possess a particular set of attributes (and possibly
some other attributes as well).  Several examples are given; the
results with respect to the number of disk accesses and disk space
are compared to other common approaches.  Algorithms evaluating
the appropriateness of the above approach to a given information system
are described.  For a certain class of information systems,
the normal multiplication table method yields far more rapid retrieval
with a more economical space requirement than conventional systems.  
Moreover this method incorporates an improved modification of the inverted 
file technique.

CACM March, 1979

Motzkin, D.

Information retrieval, inverted files, multiattribute retrieval,
multilist file, normal multiplication table, queries,
rapid retrieval, space economy

3.70 3.73 3.79

CA790305 DH May 21, 1979  9:46 AM

2140	4	3134
2452	4	3134
2575	4	3134
2765	4	3134
2901	4	3134
2966	4	3134
3134	4	3134
3134	4	3134
3134	4	3134
3134	4	3134
1976	5	3134
2160	5	3134
2524	5	3134
2990	5	3134
3134	5	3134
3134	5	3134
3134	5	3134


************************

************************
Document:  CACM-1725.html
************************


A Simple Proof of Lewin's Ordered-Retrieval
Theorem for Associative Memories

An efficient method of ordered retrieval of binary
words from an associative memory, as described
by Lewin, is based on the use of special readout circuits
which indicate the digit values present in 
the individual digit columns of the memory.  Thus the
circuits indicate whether the individual digit 
columns contain digits of both values, or of only one
value, or contain no digits at all (i.e. that the 
memory is empty).  The use of these circuits, which
in this paper are termed column value indicators, 
reduces considerably the number of memory accesses necessary
to retrieve in order a number of distinct 
words from the memory.  Lewin proves that, for the readout
by the described method of m distinct binary 
words, 2m - 1 memory accesses are necessary.  (Thus he
proves that the number of necessary memory accesses 
of his method, unlike those of other methods, is independent
of the word length.)  In this paper a very 
simple proof of this theorem derived from some elementary
aspects of the structure of sets of binary 
numbers is presented.

CACM July, 1968

Wolinsky, A.

associative memories, content-addressed memories,
ordered lists, ordered <B>information retrieval</B>, 
ordered retrieval theorem, column digit values, digit
value variety, column sensing arrangement, digit 
value readout, digit variety readout, memory access, memory
access frequency, ordered retrieval efficiency, 
access frequency proof, retrieval theorem proof

3.74 3.79 5.29 5.31 6.31 6.36

CA680704 JB February 22, 1978  12:24 PM

1725	5	1725
1725	5	1725
1725	5	1725


************************



A Simple Proof of Lewin's Ordered-Retrieval
Theorem for Associative Memories

An efficient method of ordered retrieval of binary
words from an associative memory, as described
by Lewin, is based on the use of special readout circuits
which indicate the digit values present in 
the individual digit columns of the memory.  Thus the
circuits indicate whether the individual digit 
columns contain digits of both values, or of only one
value, or contain no digits at all (i.e. that the 
memory is empty).  <B>The use</B> of these circuits, which
in this paper are termed column value indicators, 
reduces considerably the number of memory accesses necessary
to retrieve in order a number of distinct 
words from the memory.  Lewin proves that, for the readout
by the described method of m distinct binary 
words, 2m - 1 memory accesses are necessary.  (Thus he
proves that the number of necessary memory accesses 
of his method, unlike those of other methods, is independent
of the word length.)  In this paper a very 
simple proof of this theorem derived from some elementary
aspects of the structure of sets of binary 
numbers is presented.

CACM July, 1968

Wolinsky, A.

associative memories, content-addressed memories,
ordered lists, ordered information retrieval, 
ordered retrieval theorem, column digit values, digit
value variety, column sensing arrangement, digit 
value readout, digit variety readout, memory access, memory
access frequency, ordered retrieval efficiency, 
access frequency proof, retrieval theorem proof

3.74 3.79 5.29 5.31 6.31 6.36

CA680704 JB February 22, 1978  12:24 PM

1725	5	1725
1725	5	1725
1725	5	1725


************************



A Simple Proof of Lewin's Ordered-Retrieval
Theorem for Associative Memories

An efficient method of ordered retrieval of binary
words from an associative memory, as described
by Lewin, is based on the <B>use of</B> special readout circuits
which indicate the digit values present in 
the individual digit columns of the memory.  Thus the
circuits indicate whether the individual digit 
columns contain digits of both values, or of only one
value, or contain no digits at all (i.e. that the 
memory is empty).  The use of these circuits, which
in this paper are termed column value indicators, 
reduces considerably the number of memory accesses necessary
to retrieve in order a number of distinct 
words from the memory.  Lewin proves that, for the readout
by the described method of m distinct binary 
words, 2m - 1 memory accesses are necessary.  (Thus he
proves that the number of necessary memory accesses 
of his method, unlike those of other methods, is independent
of the word length.)  In this paper a very 
simple proof of this theorem derived from some elementary
aspects of the structure of sets of binary 
numbers is presented.

CACM July, 1968

Wolinsky, A.

associative memories, content-addressed memories,
ordered lists, ordered information retrieval, 
ordered retrieval theorem, column digit values, digit
value variety, column sensing arrangement, digit 
value readout, digit variety readout, memory access, memory
access frequency, ordered retrieval efficiency, 
access frequency proof, retrieval theorem proof

3.74 3.79 5.29 5.31 6.31 6.36

CA680704 JB February 22, 1978  12:24 PM

1725	5	1725
1725	5	1725
1725	5	1725


************************

************************
Document:  CACM-2970.html
************************


Achieving Specific Accuracy in Simulation Output Analysis

This paper extends the <B>use of</B> the regenerative
property of queueing systems in the analysis 
of simulation output.  In particular, it describes a
sequential estimation method which when used with 
the regenerative property allows results to be obtained
with specified statistical accuracy.  This method 
includes a test to check the normality assumption on
which the sequential procedure relies.  The paper 
illustrates the method using the empty and idle state
as the regenerative state.  A second example then 
describes how using the most frequently entered state
as the regenerative state reduces the chance of 
making a costly error in a preliminary simulation run.
 The paper also described how a variance reduction 
method due to Page [9] can be used to obtain a specified
accuracy with considerably fewer job completions 
than are required when no variance reduction technique is applied.

CACM May, 1977

Fishman, G. S.

confidence in terval, ratio estimator, regenerative
property, sequential estimator, simulation, 
stopping rule, variance reduction

5.5 8.1

CA770502 JB December 29, 1977  2:43 AM

2970	5	2970
2970	5	2970
2970	5	2970


************************

************************
Document:  CACM-2882.html
************************


A Stochastic Evaluation Model for Database
Organization in Data Retrieval Systems

Experimental work in the valuation of large
scale data retrieval systems has been scarce due 
to its difficulty and prohibitive cost. This paper
discusses a simulation model <B>of a</B> data retrieval 
system which has the effect of significantly reducing
the cost of experimentation and enabling research 
never attempted before.  The model is designed to estimate
the retrieval workload of alternative data 
retrieval systems.  These data retrieval systems can
be organized under several database organizations, 
including inverted list, threaded list, and cellular
list organizations and hybrid combinations of these 
systems.  Effectiveness of the methodology is demonstrated
by using the model to study the effect of 
database organizations in data retrieval systems.  In particular,
the impact of query complexity is analyzed.

CACM February, 1976

Siler, K. F.

database architecture, database performance and
evaluation, invented list, threaded list, cellular 
list, information retrieval, database organizations,
query complexity, stochastic model, Monte Carlo 
simulation

3.70 3.71 3.72 3.73 3.74 3.79

CA760205 JB January 5, 1978  9:20 AM

1050	4	2882
1549	4	2882
2452	4	2882
2723	4	2882
2765	4	2882
2882	4	2882
2882	4	2882
2882	4	2882
731	4	2882
793	4	2882
2198	5	2882
2452	5	2882
2882	5	2882
2882	5	2882
2882	5	2882
2976	5	2882
627	5	2882
2688	6	2882
2765	6	2882
2882	6	2882


************************



A Stochastic Evaluation Model for Database
Organization in Data Retrieval Systems

Experimental work in the valuation of large
scale dat<B>a retrieval</B> systems has been scarce due 
to its difficulty and prohibitive cost. This paper
discusses a simulation model of a data retrieval 
system which has the effect of significantly reducing
the cost of experimentation and enabling research 
never attempted before.  The model is designed to estimate
the retrieval workload of alternative data 
retrieval systems.  These data retrieval systems can
be organized under several database organizations, 
including inverted list, threaded list, and cellular
list organizations and hybrid combinations of these 
systems.  Effectiveness of the methodology is demonstrated
by using the model to study the effect of 
database organizations in data retrieval systems.  In particular,
the impact of query complexity is analyzed.

CACM February, 1976

Siler, K. F.

database architecture, database performance and
evaluation, invented list, threaded list, cellular 
list, information retrieval, database organizations,
query complexity, stochastic model, Monte Carlo 
simulation

3.70 3.71 3.72 3.73 3.74 3.79

CA760205 JB January 5, 1978  9:20 AM

1050	4	2882
1549	4	2882
2452	4	2882
2723	4	2882
2765	4	2882
2882	4	2882
2882	4	2882
2882	4	2882
731	4	2882
793	4	2882
2198	5	2882
2452	5	2882
2882	5	2882
2882	5	2882
2882	5	2882
2976	5	2882
627	5	2882
2688	6	2882
2765	6	2882
2882	6	2882


************************



A Stochastic Evaluation Model for Database
Organization in Data Retrieval Systems

Experimental work in the valuation of large
scale data retrieval systems has been scarce due 
to its difficulty and prohibitive cost. This paper
discusses a simulation model of a data retrieval 
system which has the effect of significantly reducing
the cost of experimentation and enabling research 
never attempted before.  The model is designed to estimate
the retrieval workload of alternative data 
retrieval systems.  These data retrieval systems can
be organized under several database organizations, 
including inverted list, threaded list, and cellular
list organizations and hybrid combinations of these 
systems.  Effectiveness of the methodology is demonstrated
by using the model to study the effect of 
database organizations in data retrieval systems.  In particular,
the impact of query complexity is analyzed.

CACM February, 1976

Siler, K. F.

database architecture, database performance and
evaluation, invented list, threaded list, cellular 
list, <B>information retrieval</B>, database organizations,
query complexity, stochastic model, Monte Carlo 
simulation

3.70 3.71 3.72 3.73 3.74 3.79

CA760205 JB January 5, 1978  9:20 AM

1050	4	2882
1549	4	2882
2452	4	2882
2723	4	2882
2765	4	2882
2882	4	2882
2882	4	2882
2882	4	2882
731	4	2882
793	4	2882
2198	5	2882
2452	5	2882
2882	5	2882
2882	5	2882
2882	5	2882
2976	5	2882
627	5	2882
2688	6	2882
2765	6	2882
2882	6	2882


************************



A Stochastic Evaluation Model for Database
Organization in Data Retrieval Systems

Experimental work in the valuation of large
scale data <B>retrieval system</B>s has been scarce due 
to its difficulty and prohibitive cost. This paper
discusses a simulation model of a data retrieval 
system which has the effect of significantly reducing
the cost of experimentation and enabling research 
never attempted before.  The model is designed to estimate
the retrieval workload of alternative data 
retrieval systems.  These data retrieval systems can
be organized under several database organizations, 
including inverted list, threaded list, and cellular
list organizations and hybrid combinations of these 
systems.  Effectiveness of the methodology is demonstrated
by using the model to study the effect of 
database organizations in data retrieval systems.  In particular,
the impact of query complexity is analyzed.

CACM February, 1976

Siler, K. F.

database architecture, database performance and
evaluation, invented list, threaded list, cellular 
list, information retrieval, database organizations,
query complexity, stochastic model, Monte Carlo 
simulation

3.70 3.71 3.72 3.73 3.74 3.79

CA760205 JB January 5, 1978  9:20 AM

1050	4	2882
1549	4	2882
2452	4	2882
2723	4	2882
2765	4	2882
2882	4	2882
2882	4	2882
2882	4	2882
731	4	2882
793	4	2882
2198	5	2882
2452	5	2882
2882	5	2882
2882	5	2882
2882	5	2882
2976	5	2882
627	5	2882
2688	6	2882
2765	6	2882
2882	6	2882


************************

************************
Document:  CACM-2577.html
************************


An On-Site Data Management System Application in Field Archaeology

CACM November, 1974

Brown, J. A.
Werner, B.

APL-PLUS, archaeology, Koster prehistoric
site data management, <B>retrieval system</B>s

3.36 3.70 3.73 3.89

CA741107 JB January 16, 1978  10:15 AM

2577	5	2577
2577	5	2577
2577	5	2577


************************

************************
Document:  CACM-1506.html
************************


The LACONIQ Monitor: Time Sharing for Online Dialogues

The LACONIQ (Laboratory Computer Online Inquiry)
Monitor was developed primarily to support 
non-numerical applications such as retrieval from very
large files by means <B>of a</B> "dialogue" between a 
system user and a retrieval application.  The monitor
was designed so that it could work with a small 
computer (an IBM System 360/30).  Therefore techniques
for resource allocation were important.  For this 
reason the use of core storage, computational facilities,
and input-output were all scheduled.  An unusual 
feature of the system is that it is event-driven rather
than clock-driven.  The program segments called 
into execution by the remote CRT consoles are invariably
run to completion rather than "rolled-out" to 
be brought back at a later time.

CACM December, 1967

Drew, D. L.

CA671202 JB February 26, 1978  2:45 PM

1506	5	1506
1506	5	1506
1506	5	1506


************************



The LACONIQ Monitor: Time Sharing for Online Dialogues

The LACONIQ (Laboratory Computer Online Inquiry)
Monitor was developed primarily to support 
non-numerical applications such as retrieval from very
large files by means of a "dialogue" between a 
system user and <B>a retrieval</B> application.  The monitor
was designed so that it could work with a small 
computer (an IBM System 360/30).  Therefore techniques
for resource allocation were important.  For this 
reason the use of core storage, computational facilities,
and input-output were all scheduled.  An unusual 
feature of the system is that it is event-driven rather
than clock-driven.  The program segments called 
into execution by the remote CRT consoles are invariably
run to completion rather than "rolled-out" to 
be brought back at a later time.

CACM December, 1967

Drew, D. L.

CA671202 JB February 26, 1978  2:45 PM

1506	5	1506
1506	5	1506
1506	5	1506


************************



The LACONIQ Monitor: Time Sharing for Online Dialogues

The LACONIQ (Laboratory Computer Online Inquiry)
Monitor was developed primarily to support 
non-numerical applications such as retrieval from very
large files by means of a "dialogue" between a 
system user and a retrieval application.  The monitor
was designed so that it could work with a small 
computer (an IBM System 360/30).  Therefore techniques
for resource allocation were important.  For this 
reason the <B>use of</B> core storage, computational facilities,
and input-output were all scheduled.  An unusual 
feature of the system is that it is event-driven rather
than clock-driven.  The program segments called 
into execution by the remote CRT consoles are invariably
run to completion rather than "rolled-out" to 
be brought back at a later time.

CACM December, 1967

Drew, D. L.

CA671202 JB February 26, 1978  2:45 PM

1506	5	1506
1506	5	1506
1506	5	1506


************************

************************
Document:  CACM-3086.html
************************


On the Complexity of Computing the Measure of U[ai, bi]

The decision tree complexity of computing the
measure of the union of n (possibly overlapping) 
intervals is shown to be  (n log n), even if comparisons
between linear functions of the interval endpoints 
are allowed.  The existence <B>of a</B>n   (n log n) lower bound
to determine whether any two of n real numbers 
are within   of each other is also demonstrated.  These
problems provide an excellent opportunity for 
discussing the effects of the computational model on
the ease of analysis and on the results produced.

CACM July, 1978

Fredman, M.
Weide, B.

Analysis of algorithms, combinatorial problems,
computational complexity, computational models, 
decision tree programs, lower bounds

5.25 5.26 5.30 5.39

CA780702 DH February 8, 1979  3:46 PM

3086	5	3086
3086	5	3086
3086	5	3086


************************



On the Complexity of Computing the Measure of U[ai, bi]

The decision tree complexity of computing the
measure of the union of n (possibly overlapping) 
intervals is shown to be  (n log n), even if comparisons
between linear functions of the interval endpoints 
are allowed.  The existence of an   (n log n) lower bound
<B>to determine</B> whether any two of n real numbers 
are within   of each other is also demonstrated.  These
problems provide an excellent opportunity for 
discussing the effects of the computational model on
the ease of analysis and on the results produced.

CACM July, 1978

Fredman, M.
Weide, B.

Analysis of algorithms, combinatorial problems,
computational complexity, computational models, 
decision tree programs, lower bounds

5.25 5.26 5.30 5.39

CA780702 DH February 8, 1979  3:46 PM

3086	5	3086
3086	5	3086
3086	5	3086


************************

************************
Document:  CACM-1684.html
************************


Ambiguity in Limited Entry Decision Tables

The <B>use of</B> decision tables as a tool in systems
analysis and for program specification is now 
becoming accepted.  Rules on redundancy, contradiction,
and completeness for limited entry tables were 
published in 1963.  These are usually used for checking,
preceded if necessary by a conversion from extended 
to limited entry form.  Processors which automatically
translate tables to more conventional program 
usually base their diagnostic facilities on these rules.
 In this paper it is suggested that these rules 
are unsatisfactory and that the important aspect of
checking is to eliminate ambiguity from tables.  
Ambiguity is defined and discussed, and a procedure for
producing checked-out decision tables is proposed. 
 The theoretical basis of the algorithm used is established.
The importance of well-designed diagnostic 
facilities in decision table processors is emphasized.

CACM October, 1968

King, P. J. H.

decision tables, DETAB-65, systems analysis 

3.50 4.19 4.49

CA681003 JB February 21, 1978  4:17 PM

1684	4	1684
1684	4	1684
2053	4	1684
2220	4	1684
2273	4	1684
2453	4	1684
2726	4	1684
2856	4	1684
3113	4	1684
1354	5	1684
1564	5	1684
1684	5	1684
1684	5	1684
1684	5	1684
2053	5	1684
2517	5	1684
2518	5	1684
2616	5	1684
3034	5	1684
931	6	1684
1172	6	1684
1237	6	1684
1327	6	1684
1354	6	1684
1548	6	1684
1548	6	1684
1684	6	1684
1684	6	1684
1684	6	1684
1684	6	1684
1684	6	1684
2053	6	1684
2053	6	1684
2221	6	1684
2517	6	1684
2517	6	1684


************************



Ambiguity in Limited Entry Decision Tables

<B>The use</B> of decision tables as a tool in systems
analysis and for program specification is now 
becoming accepted.  Rules on redundancy, contradiction,
and completeness for limited entry tables were 
published in 1963.  These are usually used for checking,
preceded if necessary by a conversion from extended 
to limited entry form.  Processors which automatically
translate tables to more conventional program 
usually base their diagnostic facilities on these rules.
 In this paper it is suggested that these rules 
are unsatisfactory and that the important aspect of
checking is to eliminate ambiguity from tables.  
Ambiguity is defined and discussed, and a procedure for
producing checked-out decision tables is proposed. 
 The theoretical basis of the algorithm used is established.
The importance of well-designed diagnostic 
facilities in decision table processors is emphasized.

CACM October, 1968

King, P. J. H.

decision tables, DETAB-65, systems analysis 

3.50 4.19 4.49

CA681003 JB February 21, 1978  4:17 PM

1684	4	1684
1684	4	1684
2053	4	1684
2220	4	1684
2273	4	1684
2453	4	1684
2726	4	1684
2856	4	1684
3113	4	1684
1354	5	1684
1564	5	1684
1684	5	1684
1684	5	1684
1684	5	1684
2053	5	1684
2517	5	1684
2518	5	1684
2616	5	1684
3034	5	1684
931	6	1684
1172	6	1684
1237	6	1684
1327	6	1684
1354	6	1684
1548	6	1684
1548	6	1684
1684	6	1684
1684	6	1684
1684	6	1684
1684	6	1684
1684	6	1684
2053	6	1684
2053	6	1684
2221	6	1684
2517	6	1684
2517	6	1684


************************

************************
Document:  CACM-1699.html
************************


Experimental Evaluation of Information
Retrieval Through a Teletypewriter

Experiments designed to evaluate the capabilities
of mechanized information retrieval systems, 
with emphasis on interactive (man-machine) language and on
some of the mechanical and psychological limitations 
in their design, were conducted at the Moore School information
Systems Laboratory.  The basic assumption 
of the research is that an information retrieval system
that provides for man-machine dialogue at a remote 
inquiry terminal should provide a searcher with many
of the tools which would be available to him were 
he actually performing his search at a library or repository
of documents.  Factors involved in evaluation 
of such a system include ease of use, learning time, and
effectiveness <B>of a</B>ctual retrieval.  Three experiments 
and the conclusions resulting from them are detailed.

CACM September, 1968

Rubinoff, M.
Bergman, S.
Franks, W.
Rubinoff, E.

information retrieval testing,  information system
evaluation, experimental document retrieval, 
document retrieval, document perusal, man-machine communication,
remote console communication, teletypewriter 
communication, remote terminal communication, retrieval
command language, symbolic command language, 
interactive systems, user learning factors, on-line searching

3.72 3.74 3.79 3.81

CA680902 JB February 22, 1978  9:30 AM

1155	4	1699
1456	4	1699
1468	4	1699
1515	4	1699
1681	4	1699
1699	4	1699
1699	4	1699
1699	4	1699
1856	4	1699
2127	4	1699
1194	5	1699
1324	5	1699
1681	5	1699
1699	5	1699
1699	5	1699
1699	5	1699


************************



Experimental Evaluation of Information
Retrieval Through a Teletypewriter

Experiments designed to evaluate the capabilities
of mechanized <B>information retrieval</B> systems, 
with emphasis on interactive (man-machine) language and on
some of the mechanical and psychological limitations 
in their design, were conducted at the Moore School information
Systems Laboratory.  The basic assumption 
of the research is that an information retrieval system
that provides for man-machine dialogue at a remote 
inquiry terminal should provide a searcher with many
of the tools which would be available to him were 
he actually performing his search at a library or repository
of documents.  Factors involved in evaluation 
of such a system include ease of use, learning time, and
effectiveness of actual retrieval.  Three experiments 
and the conclusions resulting from them are detailed.

CACM September, 1968

Rubinoff, M.
Bergman, S.
Franks, W.
Rubinoff, E.

information retrieval testing,  information system
evaluation, experimental document retrieval, 
document retrieval, document perusal, man-machine communication,
remote console communication, teletypewriter 
communication, remote terminal communication, retrieval
command language, symbolic command language, 
interactive systems, user learning factors, on-line searching

3.72 3.74 3.79 3.81

CA680902 JB February 22, 1978  9:30 AM

1155	4	1699
1456	4	1699
1468	4	1699
1515	4	1699
1681	4	1699
1699	4	1699
1699	4	1699
1699	4	1699
1856	4	1699
2127	4	1699
1194	5	1699
1324	5	1699
1681	5	1699
1699	5	1699
1699	5	1699
1699	5	1699


************************



Experimental Evaluation of Information
Retrieval Through a Teletypewriter

Experiments designed to evaluate the capabilities
of mechanized information <B>retrieval system</B>s, 
with emphasis on interactive (man-machine) language and on
some of the mechanical and psychological limitations 
in their design, were conducted at the Moore School information
Systems Laboratory.  The basic assumption 
of the research is that an information retrieval system
that provides for man-machine dialogue at a remote 
inquiry terminal should provide a searcher with many
of the tools which would be available to him were 
he actually performing his search at a library or repository
of documents.  Factors involved in evaluation 
of such a system include ease of use, learning time, and
effectiveness of actual retrieval.  Three experiments 
and the conclusions resulting from them are detailed.

CACM September, 1968

Rubinoff, M.
Bergman, S.
Franks, W.
Rubinoff, E.

information retrieval testing,  information system
evaluation, experimental document retrieval, 
document retrieval, document perusal, man-machine communication,
remote console communication, teletypewriter 
communication, remote terminal communication, retrieval
command language, symbolic command language, 
interactive systems, user learning factors, on-line searching

3.72 3.74 3.79 3.81

CA680902 JB February 22, 1978  9:30 AM

1155	4	1699
1456	4	1699
1468	4	1699
1515	4	1699
1681	4	1699
1699	4	1699
1699	4	1699
1699	4	1699
1856	4	1699
2127	4	1699
1194	5	1699
1324	5	1699
1681	5	1699
1699	5	1699
1699	5	1699
1699	5	1699


************************

************************
Document:  CACM-1359.html
************************


Data Filtering Applied to Information Storage and Retrieval Applications

Manipulation of data strings is the most complex
processing function in information storage 
and retrieval applications.  Data string manipulation
is discussed within the context of an interpretive 
processing environment controlled by the <B>use of</B> procedural
directives.  The sequence of procedural directives 
is derived from a job assumed to be expressed in a user-oriented
source language.  Each data string with 
the structured data environment (data bank) is explicitly
or implicitly related to a format declaration
residing in a format library.  The processing mechanics
associated with data string manipulation is developed 
in accordance with a generalized data filtering concept.
 This results in the implementation of a two-part 
data filter module that satisfies internal processing
functions by filtering data strings through format 
declarations associated with its input and output ports.

CACM November, 1966

Larsen, R. P.

CA661101 JB March 2, 1978  3:52 PM

1359	5	1359
1359	5	1359
1359	5	1359


************************



Data Filtering Applied to Information Storage and Retrieval Applications

Manipulation of data strings is the most complex
processing function in information storage 
and retrieval applications.  Data string manipulation
is discussed within the context <B>of a</B>n interpretive 
processing environment controlled by the use of procedural
directives.  The sequence of procedural directives 
is derived from a job assumed to be expressed in a user-oriented
source language.  Each data string with 
the structured data environment (data bank) is explicitly
or implicitly related to a format declaration
residing in a format library.  The processing mechanics
associated with data string manipulation is developed 
in accordance with a generalized data filtering concept.
 This results in the implementation of a two-part 
data filter module that satisfies internal processing
functions by filtering data strings through format 
declarations associated with its input and output ports.

CACM November, 1966

Larsen, R. P.

CA661101 JB March 2, 1978  3:52 PM

1359	5	1359
1359	5	1359
1359	5	1359


************************



Data Filtering Applied to Information Storage and Retrieval Applications

Manipulation of data strings is the most complex
processing function in information storage 
and retrieval applications.  Data string manipulation
is discussed within the context of an interpretive 
processing environment controlled by the use of procedural
directives.  The sequence of procedural directives 
is derived from a job assumed to be expressed in <B>a user</B>-oriented
source language.  Each data string with 
the structured data environment (data bank) is explicitly
or implicitly related to a format declaration
residing in a format library.  The processing mechanics
associated with data string manipulation is developed 
in accordance with a generalized data filtering concept.
 This results in the implementation of a two-part 
data filter module that satisfies internal processing
functions by filtering data strings through format 
declarations associated with its input and output ports.

CACM November, 1966

Larsen, R. P.

CA661101 JB March 2, 1978  3:52 PM

1359	5	1359
1359	5	1359
1359	5	1359


************************

************************
Document:  CACM-2160.html
************************


Canonical Structure in Attribute Based File Organization

A new file structure for attribute based retrieval
is proposed in this paper.  It allows queries 
involving arbitrary Boolean functions of the attribute-value
pairs to be processed without taking intersections 
of lists.  The structure is highly dependent on the
way in which the file is to be used and is uniquely 
determined by the specification of the allowed queries.
 Thus, for example, the structure for retrieval 
on the basis of ranges of values <B>of a</B> given attribute would
be very different from one where only retrieval 
on the basis of a single value is permitted.  The file
organization being proposed is based on the atoms 
of a Boolean algebra generated by the queries.  The desirable
properties claimed for this structure are 
proved, and file maintenance questions are discussed.

CACM September, 1971

Wong, E.
Chiang, T. C.

address calculation, atoms of Boolean algebra,
attributes, Boolean functions, Boolean queries, 
file organization, information retrieval, inverted
file, key words, multilist, queries, searches 

3.70 3.73 3.74

CA710904 JB February 2, 1978  2:22 PM

2160	4	2160
2688	4	2160
2114	5	2160
2160	5	2160
2160	5	2160
2160	5	2160
3134	5	2160
1976	6	2160
2160	6	2160
2524	6	2160
2990	6	2160


************************



Canonical Structure in Attribute Based File Organization

A new file structure for attribute based retrieval
is proposed in this paper.  It allows queries 
involving arbitrary Boolean functions of the attribute-value
pairs to be processed without taking intersections 
of lists.  The structure is highly dependent on the
way in which the file is to be used and is uniquely 
determined by the specification of the allowed queries.
 Thus, for example, the structure for retrieval 
on the basis of ranges of values of a given attribute would
be very different from one where only retrieval 
on the basis of a single value is permitted.  The file
organization being proposed is based on the atoms 
of a Boolean algebra generated by the queries.  The desirable
properties claimed for this structure are 
proved, and file maintenance questions are discussed.

CACM September, 1971

Wong, E.
Chiang, T. C.

address calculation, atoms of Boolean algebra,
attributes, Boolean functions, Boolean queries, 
file organization, <B>information retrieval</B>, inverted
file, key words, multilist, queries, searches 

3.70 3.73 3.74

CA710904 JB February 2, 1978  2:22 PM

2160	4	2160
2688	4	2160
2114	5	2160
2160	5	2160
2160	5	2160
2160	5	2160
3134	5	2160
1976	6	2160
2160	6	2160
2524	6	2160
2990	6	2160


************************

************************
Document:  CACM-2631.html
************************


An Information-Theoretic Approach to
Text Searching in Direct Access Systems

Using direct access computer files of bibliographic
information, an attempt is made to overcome 
one of the problems often associated with information
retrieval, namely, the maintenance and use of large 
dictionaries, the greater part of which is used only
infrequently.  A novel method is presented, which 
maps the hyperbolic frequency distribution.  This is
more suited to implementation on storage devices. 
 This method treats text as a string of characters rather
than words bounded by spaces, and chooses subsets 
of strings such that their frequencies of occurrence are
more even than those of word types.  The members 
of this subset are then used as index keys for retrieval.
The rectangular distribution of key frequencies 
results in a much simplified file organization
and promises considerable cost advantages.

CACM June, 1974

Barton, I. J.
Creasey, S. E.
Lynch, M. F.
Snell, M. J.

text searching, information theory, file organization,
direct access, <B>information retrieval</B>, character 
string, bit vector

3.42 3.70 3.73 3.74 5.6

CA740615 JB January 17, 1978  2:07 PM

2532	4	2631
2631	4	2631
2631	4	2631
2746	4	2631
3001	4	2631
2139	5	2631
2532	5	2631
2631	5	2631
2631	5	2631
2631	5	2631


************************



An Information-Theoretic Approach to
Text Searching in Direct Access Systems

Using direct access computer files of bibliographic
information, an attempt is made to overcome 
one of the problems often associated with information
retrieval, namely, the maintenance and <B>use of</B> large 
dictionaries, the greater part of which is used only
infrequently.  A novel method is presented, which 
maps the hyperbolic frequency distribution.  This is
more suited to implementation on storage devices. 
 This method treats text as a string of characters rather
than words bounded by spaces, and chooses subsets 
of strings such that their frequencies of occurrence are
more even than those of word types.  The members 
of this subset are then used as index keys for retrieval.
The rectangular distribution of key frequencies 
results in a much simplified file organization
and promises considerable cost advantages.

CACM June, 1974

Barton, I. J.
Creasey, S. E.
Lynch, M. F.
Snell, M. J.

text searching, information theory, file organization,
direct access, information retrieval, character 
string, bit vector

3.42 3.70 3.73 3.74 5.6

CA740615 JB January 17, 1978  2:07 PM

2532	4	2631
2631	4	2631
2631	4	2631
2746	4	2631
3001	4	2631
2139	5	2631
2532	5	2631
2631	5	2631
2631	5	2631
2631	5	2631


************************

************************
Document:  CACM-1236.html
************************


The SMART Automatic Document Retrieval System-An Illustration

A fully automatic document <B>retrieval system</B>
operating on the IBM 7094 is described.  The system 
is characterized by the fact that several hundred different
methods are available to analyze documents 
and search requests.  This feature is used in the retrieval
process by leaving the exact sequence of 
operations initially unspecified, and adapting the
search strategy to the needs of individual users. 
 The system is used not only to simulate an actual operating
environment, but also to test the effectiveness 
of the various available processing methods.  Results obtained
so far seem to indicate that some combination 
of analysis procedures can in general be relied upon to
retrieve the wanted information.  A typical search 
request is used as an example in the present report to illustrate
systems operations and evaluation procedures.

CACM June, 1965

Salton, G.
Lesk, M. E.

CA650619 JB March 6, 1978  9:41 PM

1236	5	1236
1236	5	1236
1236	5	1236
1457	5	1236
1236	6	1236


************************



The SMART Automatic Document Retrieval System-An Illustration

A fully automatic document retrieval system
operating on the IBM 7094 is described.  The system 
is characterized by the fact that several hundred different
methods are available to analyze documents 
and search requests.  This feature is used in the retrieval
process by leaving the exact sequence of 
operations initially unspecified, and adapting the
search strategy to the needs of individual users. 
 The system is used not only to simulate an actual operating
environment, but also to test the effectiveness 
of the various available processing methods.  Results obtained
so far seem to indicate that some combination 
<B>of a</B>nalysis procedures can in general be relied upon to
retrieve the wanted information.  A typical search 
request is used as an example in the present report to illustrate
systems operations and evaluation procedures.

CACM June, 1965

Salton, G.
Lesk, M. E.

CA650619 JB March 6, 1978  9:41 PM

1236	5	1236
1236	5	1236
1236	5	1236
1457	5	1236
1236	6	1236


************************

************************
Document:  CACM-1671.html
************************


A Phonological Rule Tester

The design and implementation <B>of a</B> system to
alleviate the problem of rule evaluation for the 
linguist in the area of phonology are presented.  It
permits the user to define, on-line, sets of rules 
statable within the framework presented in The Sound
Patterns of English by Chomsky and Halle, 1968, 
to define phonemes as bundles of specified distinctive
features, to define data as strings of phonemes 
with associated grammatical structure, to test the effect
of applying rules to the data, and to store 
both the definitions and results.  The rule application
facility described in detail was implemented 
by translating linguistic rules to rules in FLIP, a
format-directed list processor embedded in LISP. 
 This made the system construction easy while providing
sophisticated capabilities for the linguist. 
 The system is written in BBN LISP on the Scientific
Data System 940 computer and is designed to be used 
on-line in interactive fashion, with control returned
to the user after each command is executed.

CACM November, 1968

Borrow, D. G.
Fraser, J. B.

phonology, rule tester, linguistics, transformational
grammar, LISP, format-directed list processing, 
on-line systems

3.42 4.13 4.22

CA681108 JB February 21, 1978  2:41 PM

1659	5	1671
1671	5	1671
1671	5	1671
1671	5	1671
1225	6	1671
1265	6	1671
1350	6	1671
1671	6	1671
1697	6	1671


************************



A Phonological Rule Tester

The design and implementation of a system to
alleviate the problem of rule evaluation for the 
linguist in the area of phonology are presented.  It
permits the user to define, on-line, sets of rules 
statable within the framework presented in The Sound
Patterns of English by Chomsky and Halle, 1968, 
to define phonemes as bundles of specified distinctive
features, to define data as strings of phonemes 
with associated grammatical structure, to test the effect
of applying <B>rules to</B> the data, and to store 
both the definitions and results.  The rule application
facility described in detail was implemented 
by translating linguistic rules to rules in FLIP, a
format-directed list processor embedded in LISP. 
 This made the system construction easy while providing
sophisticated capabilities for the linguist. 
 The system is written in BBN LISP on the Scientific
Data System 940 computer and is designed to be used 
on-line in interactive fashion, with control returned
to the user after each command is executed.

CACM November, 1968

Borrow, D. G.
Fraser, J. B.

phonology, rule tester, linguistics, transformational
grammar, LISP, format-directed list processing, 
on-line systems

3.42 4.13 4.22

CA681108 JB February 21, 1978  2:41 PM

1659	5	1671
1671	5	1671
1671	5	1671
1671	5	1671
1225	6	1671
1265	6	1671
1350	6	1671
1671	6	1671
1697	6	1671


************************

************************
Document:  CACM-2990.html
************************


Effective Information Retrieval Using Term Accuracy

The performance of information retrieval systems
can be evaluated in a number of different 
ways.  Much of the published evaluation work is based
on measuring the retrieval performance <B>of a</B>n average 
user query.  Unfortunately, formal proofs are difficult
to construct for the average case.  In the present 
study, retrieval evaluation is based on optimizing the
performance of a specific user query.  The concept 
of query term accuracy is in troduced as the probability
of occurrence of a query term in the documents 
relevant to that query.  By relating term accuracy
to the frequency of occurrence of the term in the 
documents of a collection it is possible to give formal
proofs of the effectiveness with respect to a 
given user query of a number of automatic indexing systems
that have been used successfully in experimental 
situations.  Among these are inverse document frequency
weighting, thesaurus construction, and phrase 
generation.

CACM March, 1977

Yu, C. T.
Salton, G.

information retrieval, automatic indexing, content
analysis, term accuracy, frequency weighting, 
thesaurus and phrase transformations

3.71 3.72 3.75

CA770302 JB December 30, 1977  1:52 AM

2990	5	2990
2990	5	2990
2990	5	2990
3134	5	2990
1976	6	2990
2160	6	2990
2524	6	2990
2990	6	2990


************************



Effective Information Retrieval Using Term Accuracy

The performance of information <B>retrieval system</B>s
can be evaluated in a number of different 
ways.  Much of the published evaluation work is based
on measuring the retrieval performance of an average 
user query.  Unfortunately, formal proofs are difficult
to construct for the average case.  In the present 
study, retrieval evaluation is based on optimizing the
performance of a specific user query.  The concept 
of query term accuracy is in troduced as the probability
of occurrence of a query term in the documents 
relevant to that query.  By relating term accuracy
to the frequency of occurrence of the term in the 
documents of a collection it is possible to give formal
proofs of the effectiveness with respect to a 
given user query of a number of automatic indexing systems
that have been used successfully in experimental 
situations.  Among these are inverse document frequency
weighting, thesaurus construction, and phrase 
generation.

CACM March, 1977

Yu, C. T.
Salton, G.

information retrieval, automatic indexing, content
analysis, term accuracy, frequency weighting, 
thesaurus and phrase transformations

3.71 3.72 3.75

CA770302 JB December 30, 1977  1:52 AM

2990	5	2990
2990	5	2990
2990	5	2990
3134	5	2990
1976	6	2990
2160	6	2990
2524	6	2990
2990	6	2990


************************



Effective Information Retrieval Using Term Accuracy

The performance of <B>information retrieval</B> systems
can be evaluated in a number of different 
ways.  Much of the published evaluation work is based
on measuring the retrieval performance of an average 
user query.  Unfortunately, formal proofs are difficult
to construct for the average case.  In the present 
study, retrieval evaluation is based on optimizing the
performance of a specific user query.  The concept 
of query term accuracy is in troduced as the probability
of occurrence of a query term in the documents 
relevant to that query.  By relating term accuracy
to the frequency of occurrence of the term in the 
documents of a collection it is possible to give formal
proofs of the effectiveness with respect to a 
given user query of a number of automatic indexing systems
that have been used successfully in experimental 
situations.  Among these are inverse document frequency
weighting, thesaurus construction, and phrase 
generation.

CACM March, 1977

Yu, C. T.
Salton, G.

information retrieval, automatic indexing, content
analysis, term accuracy, frequency weighting, 
thesaurus and phrase transformations

3.71 3.72 3.75

CA770302 JB December 30, 1977  1:52 AM

2990	5	2990
2990	5	2990
2990	5	2990
3134	5	2990
1976	6	2990
2160	6	2990
2524	6	2990
2990	6	2990


************************

************************
Document:  CACM-1432.html
************************


Incorporation of Nonstandard Input/Output Devices into FORTRAN Systems

A FORTRAN system may readily be modified to
handle input/output with nonstandard media on the 
same basis on which it handles the standard media.  This
is done by providing a character-handling subroutine 
suited to the nonstandard medium and arranged to be called
by an otherwise unused output statement type 
or unit number. This method was used to control output
<B>of a</B>lphanumeric information on a digital graph 
plotter.

CACM May, 1966

Cohn, C. E.

CA660505 JB March 3, 1978  10:01 AM

1432	5	1432
1432	5	1432
1432	5	1432


************************

************************
Document:  CACM-1908.html
************************


Time-Sharing and Batch-Processing:  An Experimental
Comparison of Their Values in a Problem - 
Solving Situation

An experimental comparison of problem-solving
using time-sharing and batch-processing computer 
systems conducted at MIT is described in this paper.
 This study is the first known attempt to evaluate 
two such systems for what may well be the predominant user
population within the next decade-the professionals 
who, as nonprogrammers, are using the computer as an
aid in decision-making and problem-solving rather 
than as a programming end in itself.  Statistically
and logically significant results indicate equal 
cost for usage of the two computer systems; however,
a much higher level of performance is attained by 
time-sharing users.  There are indications that significantly
lower costs would have resulted if the 
time-sharing users had stopped work when they reached
a performance level equal to that of the batch 
users.  <B>The use</B>rs' speed of problem-solving and their
attitudes made time-sharing the more favorable 
system.

CACM May, 1969

Gold, M. M.

time-sharing vs batch-processing, user performance,
man/machine communications, cost effectiveness, 
on-line vs off-line performance, decision-making performance,
user/programmer behavior, programming experimental 
empirical studies, problem-solving, research in man/machine
communications, man/machine symbiosis

2.11 2.40 3.36 3.51 3.80

CA690501 JB February 17, 1978  4:10 PM

1792	4	1908
1908	4	1908
1908	4	1908
1550	5	1908
1605	5	1908
1908	5	1908
1908	5	1908
1908	5	1908
2705	5	1908
2984	5	1908
1908	6	1908
1908	6	1908
3185	6	1908


************************

************************
Document:  CACM-3087.html
************************


An English Language Question Answering System
for a Large Relational Database

By typing requests in English, casual users
will be able to obtain explicit answers from a 
large relational database of aircraft flight and maintenance
data using a system called PLANES.  The 
design and implementation of this system is described and
illustrated with detailed examples of the operation 
of system components and examples of overall system
operation.  The language processing portion of the 
system uses a number of augmented transition networks,
each of which matches phrases with a specific 
meaning, along with context registers (his tory keepers)
and concept case frames; these are used for judging 
meaningfulness of questions, generating dialogue for clarifying
partially understood questions, and resolving 
ellipsis and pronoun reference problems.  Other system components
construct a formal query for the relational 
database, and optimize the order of searching relations.
 Methods are discussed for handling vague or 
complex questions and for providing browsing ability.
 Also included are discussions of important issues 
in programming natural language systems for limited domains,
and the relationship of this system to others. 

CACM July, 1978

Waltz, D.

Question answering, relational database, natural language,
database front end, artificial intelligence, 
dialogue, query generation, <B>information retrieval</B>, natural language programming 

3.42 3.60 3.69 3.74 3.79

CA780701 DH February 8, 1979  4:26 PM

2155	4	3087
2406	4	3087
2581	4	3087
2710	4	3087
2715	4	3087
2716	4	3087
2717	4	3087
2718	4	3087
2739	4	3087
2765	4	3087
2795	4	3087
2817	4	3087
2888	4	3087
2901	4	3087
2921	4	3087
2957	4	3087
2959	4	3087
2965	4	3087
3087	4	3087
3087	4	3087
3154	4	3087
1989	5	3087
2046	5	3087
3087	5	3087
3087	5	3087
3087	5	3087


************************



An English Language Question Answering System
for a Large Relational Database

By typing requests in English, casual users
will be able to obtain explicit answers from a 
large relational database <B>of a</B>ircraft flight and maintenance
data using a system called PLANES.  The 
design and implementation of this system is described and
illustrated with detailed examples of the operation 
of system components and examples of overall system
operation.  The language processing portion of the 
system uses a number of augmented transition networks,
each of which matches phrases with a specific 
meaning, along with context registers (his tory keepers)
and concept case frames; these are used for judging 
meaningfulness of questions, generating dialogue for clarifying
partially understood questions, and resolving 
ellipsis and pronoun reference problems.  Other system components
construct a formal query for the relational 
database, and optimize the order of searching relations.
 Methods are discussed for handling vague or 
complex questions and for providing browsing ability.
 Also included are discussions of important issues 
in programming natural language systems for limited domains,
and the relationship of this system to others. 

CACM July, 1978

Waltz, D.

Question answering, relational database, natural language,
database front end, artificial intelligence, 
dialogue, query generation, information retrieval, natural language programming 

3.42 3.60 3.69 3.74 3.79

CA780701 DH February 8, 1979  4:26 PM

2155	4	3087
2406	4	3087
2581	4	3087
2710	4	3087
2715	4	3087
2716	4	3087
2717	4	3087
2718	4	3087
2739	4	3087
2765	4	3087
2795	4	3087
2817	4	3087
2888	4	3087
2901	4	3087
2921	4	3087
2957	4	3087
2959	4	3087
2965	4	3087
3087	4	3087
3087	4	3087
3154	4	3087
1989	5	3087
2046	5	3087
3087	5	3087
3087	5	3087
3087	5	3087


************************

************************
Document:  CACM-1524.html
************************


A Stopping Criterion for Polynomial Root Finding

When searching for the root <B>of a</B> polynomial,
it is generally difficult to know just when to 
accept a number as an adequate approximation to the root.
 In this paper an algorithm is presented which 
allows one to terminate the iteration process on the
basis of calculated bounds for the roundoff error 
which occurs in evaluating the polynomial.  This stopping
criterion has been tested on numerous examples 
and has been found to serve as a satisfactory means
for accepting a complex number as a zero of a real 
polynomial.

CACM October, 1967

Adams, D. A.

CA671009 JB February 27, 1978  1:56 PM

1524	4	1524
1524	4	1524
1524	4	1524
1931	4	1524
2214	4	1524
2544	4	1524
1197	5	1524
1524	5	1524
1524	5	1524
1524	5	1524
311	5	1524
2544	5	1524
879	5	1524
1524	6	1524
311	6	1524
2214	6	1524


************************

************************
Document:  CACM-1427.html
************************


Simulation of Radioisotope Scans by Computer

In radioisotope scanning, a field which is assuming
increasing importance in medical diagnosis, 
the scan is a two-dimensional pattern made up of dots.
 Areas of increased source activity are represented 
on the scan by areas of increased dot density.  To study
the <B>output of</B> scanners with various characteristics, 
a program which simulates radioisotope scans has been
written  for a PDP-1 computer with auxiliary disk 
storage and cathode ray tube display.  Past and present
research using the output of the simulator has 
shown the flexibility of the system to be important.
 The structure of this program can be useful in 
the simulation of the output of any quantum-limited system.

CACM May, 1966

Pizer, S. M.

CA660510 JB March 3, 1978  9:47 AM

1427	5	1427
1427	5	1427
1427	5	1427


************************



Simulation of Radioisotope Scans by Computer

In radioisotope scanning, a field which is assuming
increasing importance in medical diagnosis, 
the scan is a two-dimensional pattern made up of dots.
 Areas of increased source activity are represented 
on the scan by areas of increased dot density.  To study
the output of scanners with various characteristics, 
a program which simulates radioisotope scans has been
written  for a PDP-1 computer with auxiliary disk 
storage and cathode ray tube display.  Past and present
research using the output of the simulator has 
shown the flexibility of the system to be important.
 The structure of this program can be useful in 
the simulation of the output <B>of a</B>ny quantum-limited system.

CACM May, 1966

Pizer, S. M.

CA660510 JB March 3, 1978  9:47 AM

1427	5	1427
1427	5	1427
1427	5	1427


************************



Simulation of Radioisotope Scans by Computer

In radioisotope scanning, a field which is assuming
increasing importance in medical diagnosis, 
the scan is a two-dimensional pattern made up of dots.
 Areas of increased source activity are represented 
on the scan by areas of increased dot density.  To study
<B>the output</B> of scanners with various characteristics, 
a program which simulates radioisotope scans has been
written  for a PDP-1 computer with auxiliary disk 
storage and cathode ray tube display.  Past and present
research using the output of the simulator has 
shown the flexibility of the system to be important.
 The structure of this program can be useful in 
the simulation of the output of any quantum-limited system.

CACM May, 1966

Pizer, S. M.

CA660510 JB March 3, 1978  9:47 AM

1427	5	1427
1427	5	1427
1427	5	1427


************************

************************
Document:  CACM-1032.html
************************


Theoretical Considerations in Information Retrieval Systems

Information storage and retrieval systems are composed
of three major components: (a) identification 
of information and tagging it for effective retrieval,
(b) searching strategy, how to enter the file 
to circumvent the scanning of nonrelevant material, and
(c) file organization to make access to information 
efficient.  For identification of information the paper
suggests that a metalanguage (recently discussed 
in a paper by Goffman, Verhoeff and Belzer) associated
with an object language be used.  For searching 
strategy, a linear model for an evaluation function
of relevancy is developed which rewards the system 
for retrieving relevant documents and not retrieving
the nonrelevant, and penalizes the system for the 
escaped relevant documents and false drops.  The inadequacies
<B>of a</B> linear model are indicated.  Two approaches 
to file organization are discussed.  One is self-organization
of the file based on its history and past 
performance, and the second is a self-generating subset
of the file with a high probability of being 
relevant.

CACM July, 1964

Belzer, J.
Goffman, W.

CA640715 JB March 9, 1978  7:55 PM

1032	5	1032
1032	5	1032
1032	5	1032


************************



Theoretical Considerations in Information Retrieval Systems

Information storage and <B>retrieval system</B>s are composed
of three major components: (a) identification 
of information and tagging it for effective retrieval,
(b) searching strategy, how to enter the file 
to circumvent the scanning of nonrelevant material, and
(c) file organization to make access to information 
efficient.  For identification of information the paper
suggests that a metalanguage (recently discussed 
in a paper by Goffman, Verhoeff and Belzer) associated
with an object language be used.  For searching 
strategy, a linear model for an evaluation function
of relevancy is developed which rewards the system 
for retrieving relevant documents and not retrieving
the nonrelevant, and penalizes the system for the 
escaped relevant documents and false drops.  The inadequacies
of a linear model are indicated.  Two approaches 
to file organization are discussed.  One is self-organization
of the file based on its history and past 
performance, and the second is a self-generating subset
of the file with a high probability of being 
relevant.

CACM July, 1964

Belzer, J.
Goffman, W.

CA640715 JB March 9, 1978  7:55 PM

1032	5	1032
1032	5	1032
1032	5	1032


************************

************************
Document:  CACM-2781.html
************************


The Algorithm Sequential Access Method:
An Alternative to Index Sequential

CACM March, 1975

Whitt, J. D.
Sullenberger, A. G.

keys, direct access method, sequential access
method, randomizing <B>information retrieval</B>

3.7

CA750307 JB January 9, 1978  4:37 PM

2258	4	2781
2319	4	2781
2313	4	2781
2359	4	2781
2437	4	2781
2552	4	2781
2781	4	2781
2860	4	2781
2991	4	2781
2203	5	2781
2781	5	2781
2781	5	2781
2781	5	2781


************************

************************
Document:  CACM-2372.html
************************


On the Implementation of Security Measures in Information Systems

The security <B>of a</B>n information system may be
represented by a model matrix whose elements are 
decision rules and whose row and column indices are
users and data items respectively.  A set of four 
functions is used to access this matrix at translation
and execution time.  Distinguishing between data 
dependent and data independent decision rules enables
one to perform much of the checking of security 
only once at translation time rather than repeatedly
at execution time.  The model is used to explain 
security features of several existing systems, and serves
as a framework for a proposal for general security 
system implementation within today's languages and operating systems.

CACM April, 1972

Conway, R. W.
Maxwell, W. L.
Morgan, H. L.

security, privacy, access control confidentiality,
operating systems, access management, data banks, 
management information systems

3.50 3.73 4.12 4.22 4.39

CA720401 JB January 31, 1978  1:59 PM

1753	4	2372
2358	4	2372
2377	4	2372
2372	4	2372
2626	4	2372
2840	4	2372
1746	5	2372
2372	5	2372
2372	5	2372
2372	5	2372


************************

************************
Document:  CACM-2318.html
************************


The Role of Computer System Models in Performance Evaluation

Models constitute a useful means of investigating
computer system performance.  This paper 
examines the interrelationships between models and other
methods for evaluating the performance of computer 
systems and establishes circumstances under
which the <B>use of</B> a model is appropriate.

CACM July,1972

Kimbleton, S. R.

modeling, evaluation, performance, analytic-models,
simulation-models, system-models

2.43 2.44 6.2 8.3

CA720710 JB January 30, 1978  2:03 PM

2151	4	2318
2318	4	2318
1653	5	2318
2318	5	2318
2318	5	2318
2318	5	2318


************************



The Role of Computer System Models in Performance Evaluation

Models constitute a useful means of investigating
computer system performance.  This paper 
examines the interrelationships between models and other
methods for evaluating the performance of computer 
systems and establishes circumstances under
which the use <B>of a</B> model is appropriate.

CACM July,1972

Kimbleton, S. R.

modeling, evaluation, performance, analytic-models,
simulation-models, system-models

2.43 2.44 6.2 8.3

CA720710 JB January 30, 1978  2:03 PM

2151	4	2318
2318	4	2318
1653	5	2318
2318	5	2318
2318	5	2318
2318	5	2318


************************



The Role of Computer System Models in Performance Evaluation

Models constitute a useful means of investigating
computer <B>system performance.</B>  This paper 
examines the interrelationships between models and other
methods for evaluating the performance of computer 
systems and establishes circumstances under
which the use of a model is appropriate.

CACM July,1972

Kimbleton, S. R.

modeling, evaluation, performance, analytic-models,
simulation-models, system-models

2.43 2.44 6.2 8.3

CA720710 JB January 30, 1978  2:03 PM

2151	4	2318
2318	4	2318
1653	5	2318
2318	5	2318
2318	5	2318
2318	5	2318


************************

************************
Document:  CACM-1457.html
************************


Data Manipulation and Programming Problems
in Automatic Information Retrieval

Automatic <B>information retrieval</B> programs require
the manipulation of a variety of different 
data structures, including linear text, sparse matrices,
and tree or list structures.  The main data 
manipulations to be performed in automatic information
systems are first briefly reviewed.  A variety 
of data representations which have been used to describe
structured information are then examined, and 
the characteristics of various processing languages are
outlined in the light of the procedures requiring 
implementation.  Advantages of these programming languages
for the retrieval application are examined, 
and suggestions are made for the design of programming
facilities to aid in information retrieval.

CACM March, 1966

Salton, G.

CA660315 JB March 3, 1978  11:35 AM

1457	4	1457
1236	5	1457
1457	5	1457
1457	5	1457
1457	5	1457


************************



Data Manipulation and Programming Problems
in Automatic Information Retrieval

Automatic information retrieval programs require
the manipulation <B>of a</B> variety of different 
data structures, including linear text, sparse matrices,
and tree or list structures.  The main data 
manipulations to be performed in automatic information
systems are first briefly reviewed.  A variety 
of data representations which have been used to describe
structured information are then examined, and 
the characteristics of various processing languages are
outlined in the light of the procedures requiring 
implementation.  Advantages of these programming languages
for the retrieval application are examined, 
and suggestions are made for the design of programming
facilities to aid in information retrieval.

CACM March, 1966

Salton, G.

CA660315 JB March 3, 1978  11:35 AM

1457	4	1457
1236	5	1457
1457	5	1457
1457	5	1457
1457	5	1457


************************

************************
Document:  CACM-2598.html
************************


Extending the Information Theory Approach to Converting
Limited-Entry Decision Tables to Computer 
Programs

This paper modifies an earlier algorithm for
converting decision tables into flowcharts which 
minimize subsequent execution time when compiled into
a computer program.  The algorithms considered 
in this paper perform limited search and, accordingly,
do not necessarily result in globally optimal 
solutions.  However, the greater search effort needed
to obtain a globally optimal solution for complex 
decision tables is usually not justified by sufficient
savings in execution time.  There is an analogy 
between the problem of converting decision tables into
efficient flowcharts and the well-understood problem 
in information theory of noiseless coding.  The results
of the noiseless coding literature are used to 
explore the limitations <B>of a</B>lgorithms used to solve
the decision table problem.  The analogy between 
the two problems is also used to develop improvements
to the information algorithm in extending the depth 
of search under certain conditions and in proposing
additional conditions to be added to the decision 
table.  Finally, the information algorithm is compared
with an algorithm proposed in a recent paper by 
Verhelst.

CACM September, 1974

Shwayder, K.

coding, decision tables, flowcharting, information
theory, noiseless channel, sorting

3.50 5.31

CA740910 JB January 17, 1978  8:40 AM

1354	4	2598
2053	4	2598
2220	4	2598
2220	4	2598
2273	4	2598
2273	4	2598
2453	4	2598
2453	4	2598
2492	4	2598
2518	4	2598
2598	4	2598
2598	4	2598
2598	4	2598
2598	4	2598
2598	4	2598
2598	4	2598
2616	4	2598
2691	4	2598
2726	4	2598
2726	4	2598
2726	4	2598
2726	4	2598
2856	4	2598
2856	4	2598
2856	4	2598
3113	4	2598
3113	4	2598
1172	5	2598
1548	5	2598
2220	5	2598
2263	5	2598
2453	5	2598
2598	5	2598
2598	5	2598
2598	5	2598
2691	5	2598
2845	5	2598
2856	5	2598
3113	5	2598
1172	6	2598
1184	6	2598
1327	6	2598
1354	6	2598
1354	6	2598
2053	6	2598
2220	6	2598
2263	6	2598
2435	6	2598
2453	6	2598
2598	6	2598
2598	6	2598
2598	6	2598
2691	6	2598
2736	6	2598
2747	6	2598
2768	6	2598
2856	6	2598


************************

************************
Document:  CACM-1307.html
************************


A Lightpen-Controlled Program For On-Line Data Analysis

This paper describes a technique designed
to ease the <B>use of</B> a data processing system by a 
person, in particular, a scientist, who is intimately and
primarily concerned with interpreting the significance 
of data handled by the system.  Since such a person is
often unable to spend the time necessary to master 
a programming language, it is essential that he be aided
in composing commands to the computer.  In the 
system described, the user is not required to learn
or remember the vocabulary of the language because 
the vocabulary is displayed before him on"menus" by
means of a computer-drive scope.  He selects the 
various vocabulary elements required by pointing with
the light pen.  By use of a small unordered set 
of rewriting rules applied as a result of light pen
selections, the user generates only syntactically
correct commands to the system.  He does not have to learn
or remember the grammar.  The program restricts 
the user severely in the particular language he can use,
but the method for communicating with the program 
makes these restrictions seem quite natural and unconstraining.
 The program has been used successfully 
for over ten months.

CACM February, 1965

Goodenough, J. B.

CA650217 JB March 7, 1978  10:40 PM

1307	5	1307
1307	5	1307
1307	5	1307
1978	5	1307
1307	6	1307
1589	6	1307
1813	6	1307


************************



A Lightpen-Controlled Program For On-Line Data Analysis

This paper describes a technique designed
to ease the use <B>of a</B> data processing system by a 
person, in particular, a scientist, who is intimately and
primarily concerned with interpreting the significance 
of data handled by the system.  Since such a person is
often unable to spend the time necessary to master 
a programming language, it is essential that he be aided
in composing commands to the computer.  In the 
system described, the user is not required to learn
or remember the vocabulary of the language because 
the vocabulary is displayed before him on"menus" by
means of a computer-drive scope.  He selects the 
various vocabulary elements required by pointing with
the light pen.  By use of a small unordered set 
of rewriting rules applied as a result of light pen
selections, the user generates only syntactically
correct commands to the system.  He does not have to learn
or remember the grammar.  The program restricts 
the user severely in the particular language he can use,
but the method for communicating with the program 
makes these restrictions seem quite natural and unconstraining.
 The program has been used successfully 
for over ten months.

CACM February, 1965

Goodenough, J. B.

CA650217 JB March 7, 1978  10:40 PM

1307	5	1307
1307	5	1307
1307	5	1307
1978	5	1307
1307	6	1307
1589	6	1307
1813	6	1307


************************

************************
Document:  CACM-2976.html
************************


Approximating Block Accesses in Database Organizations

CACM April, 1977

Yao, S. B.

database, inverted file organization, database performance
and measurement, <B>information retrieval</B>, 
query answering

3.70 3.72 4.33

CA770406 JB December 29, 1977  5:06 AM

2976	4	2976
2976	4	2976
2976	4	2976
2688	5	2976
2765	5	2976
2882	5	2976
2976	5	2976
2976	5	2976
2976	5	2976


************************

************************
Document:  CACM-1651.html
************************


An Interpretive Input Routine for Linear Programming

In this descriptive article an input code
is presented which greatly simplifies data input 
to any linear programming solution routine, for subsequent
use either as a pedagogical device or for 
solving rather small LP problems.  This latter (limited)
use derives not at all from inherent limitations 
in the code itself, but from an efficiency evaluation:
large LP problems would doubtless benefit from 
an input system more suited for bulk data handling than
the input code described.  From <B>a user</B>'s standpoint, 
input appears almost exactly as a textbook presentation
of the LP problem (limited only by a keypunch's 
inability to write subscripts, etc.).  The input interpreter
scans column wise, thus no fixed format 
data preparation is required.  The user may also, under
very general requirements only, liberally use 
editorial comments throughout the input deck as an
aid in identification, e.g., of row constraints.  
The article includes examples of input, output from a
solution routine presently in use, and a skeleton 
flowchart of the input interpreter.

CACM January, 1967

Aigner, D. J.

CA670104 JB March 1, 1978  8:58 AM

1651	5	1651
1651	5	1651
1651	5	1651


************************



An Interpretive Input Routine for Linear Programming

In this descriptive article an input code
is presented which greatly simplifies data input 
to any linear programming solution routine, for subsequent
use either as a pedagogical device or for 
solving rather small LP problems.  This latter (limited)
use derives not at all from inherent limitations 
in the code itself, but from an efficiency evaluation:
large LP problems would doubtless benefit from 
an input system more suited for bulk data handling than
the input code described.  From a user's standpoint, 
input appears almost exactly as a textbook presentation
of the LP problem (limited only by a keypunch's 
inability to write subscripts, etc.).  The input interpreter
scans column wise, thus no fixed format 
data preparation is required.  <B>The use</B>r may also, under
very general requirements only, liberally use 
editorial comments throughout the input deck as an
aid in identification, e.g., of row constraints.  
The article includes examples of input, output from a
solution routine presently in use, and a skeleton 
flowchart of the input interpreter.

CACM January, 1967

Aigner, D. J.

CA670104 JB March 1, 1978  8:58 AM

1651	5	1651
1651	5	1651
1651	5	1651


************************

************************
Document:  CACM-3012.html
************************


The Use of an Interactive Information Storage
and Retrieval System in Medical Research

This paper presents the results of a study
of the use of an interactive computerized storage 
and <B>retrieval system</B>.  A monitor built into the computer
system provided usage data for the study.  Additional 
data on user reactions were gathe red from a questionnaire.
 The results show the important role played 
by frequently chosen laboratory reference leaders in influencing
the use of this system.  The implications 
of the study for the design of similar systems are discussed.

CACM March, 1978

Lucas, Hr.

implementation, system use, information storage and retrieval system

2.10 3.50 3.72

CA780301 JB March 28, 1978  1:51 PM

3012	5	3012
3012	5	3012
3012	5	3012


************************



The Use <B>of a</B>n Interactive Information Storage
and Retrieval System in Medical Research

This paper presents the results of a study
of the use of an interactive computerized storage 
and retrieval system.  A monitor built into the computer
system provided usage data for the study.  Additional 
data on user reactions were gathe red from a questionnaire.
 The results show the important role played 
by frequently chosen laboratory reference leaders in influencing
the use of this system.  The implications 
of the study for the design of similar systems are discussed.

CACM March, 1978

Lucas, Hr.

implementation, system use, information storage and retrieval system

2.10 3.50 3.72

CA780301 JB March 28, 1978  1:51 PM

3012	5	3012
3012	5	3012
3012	5	3012


************************



The Use of an Interactive Information Storage
and Retrieval System in Medical Research

This paper presents the results of a study
of the <B>use of</B> an interactive computerized storage 
and retrieval system.  A monitor built into the computer
system provided usage data for the study.  Additional 
data on user reactions were gathe red from a questionnaire.
 The results show the important role played 
by frequently chosen laboratory reference leaders in influencing
the use of this system.  The implications 
of the study for the design of similar systems are discussed.

CACM March, 1978

Lucas, Hr.

implementation, system use, information storage and retrieval system

2.10 3.50 3.72

CA780301 JB March 28, 1978  1:51 PM

3012	5	3012
3012	5	3012
3012	5	3012


************************

************************
Document:  CACM-1747.html
************************


Three Criteria for Designing Computing Systems to Facilitate Debugging

The designer <B>of a</B> computing system should adopt
explicit criteria for accepting or rejecting 
proposed system features.  Three possible criteria of this
kind are input recordability, input specifiability, 
and asynchronous reproducibility of output.  These criteria
imply that a user can, if he desires, either 
know or control all the influences affecting the content
and extent of his computer's output.  To define 
the scope of the criteria, the notion of an abstract
machine of a programming language and the notion 
of a virtual computer are explained.  Examples of applications
of the criteria concern the reading of 
a time-of-day clock,  the synchronization of parallel
processes, protection in multiprogrammed systems, 
and the assignment of capability indexes.

CACM May, 1968

Van Horn, E. C.

computer design, computer design criteria, computer
systems, computer systems design, input equipment, 
input equipment design, operating systems, operating
systems design, multiprogramming, multiprogrammed 
systems, multiprogrammed system design, virtual computers,
programming languages, programming language 
design, program semantics, programming language semantics,
determinism, reproducibility, repeatability, 
deterministic computers, protection, memory protection,
information security, information privacy, computing 
reliability, debugging, program debugging, program testing,
parallel processing, parallel programming, 
multiprocessing

2.11 4.12 4.13 4.20 4.30 4.42 4.43 5.24 6.20 6.35

CA680509 JB February 23, 1978  9:06 AM

1458	4	1747
1523	4	1747
1603	4	1747
1698	4	1747
1747	4	1747
1748	4	1747
1854	4	1747
1877	4	1747
1960	4	1747
2377	4	1747
2378	4	1747
2497	4	1747
2558	4	1747
2625	4	1747
2632	4	1747
2840	4	1747
2941	4	1747
3105	4	1747
3144	4	1747
1471	5	1747
1747	5	1747
1747	5	1747
1747	5	1747
2151	5	1747
1653	6	1747
1747	6	1747
1860	6	1747


************************



Three Criteria for Designing Computing Systems to Facilitate Debugging

The designer of a computing system should adopt
explicit criteria for accepting or rejecting 
proposed system features.  Three possible criteria of this
kind are input recordability, input specifiability, 
and asynchronous reproducibility of output.  These criteria
imply that <B>a user</B> can, if he desires, either 
know or control all the influences affecting the content
and extent of his computer's output.  To define 
the scope of the criteria, the notion of an abstract
machine of a programming language and the notion 
of a virtual computer are explained.  Examples of applications
of the criteria concern the reading of 
a time-of-day clock,  the synchronization of parallel
processes, protection in multiprogrammed systems, 
and the assignment of capability indexes.

CACM May, 1968

Van Horn, E. C.

computer design, computer design criteria, computer
systems, computer systems design, input equipment, 
input equipment design, operating systems, operating
systems design, multiprogramming, multiprogrammed 
systems, multiprogrammed system design, virtual computers,
programming languages, programming language 
design, program semantics, programming language semantics,
determinism, reproducibility, repeatability, 
deterministic computers, protection, memory protection,
information security, information privacy, computing 
reliability, debugging, program debugging, program testing,
parallel processing, parallel programming, 
multiprocessing

2.11 4.12 4.13 4.20 4.30 4.42 4.43 5.24 6.20 6.35

CA680509 JB February 23, 1978  9:06 AM

1458	4	1747
1523	4	1747
1603	4	1747
1698	4	1747
1747	4	1747
1748	4	1747
1854	4	1747
1877	4	1747
1960	4	1747
2377	4	1747
2378	4	1747
2497	4	1747
2558	4	1747
2625	4	1747
2632	4	1747
2840	4	1747
2941	4	1747
3105	4	1747
3144	4	1747
1471	5	1747
1747	5	1747
1747	5	1747
1747	5	1747
2151	5	1747
1653	6	1747
1747	6	1747
1860	6	1747


************************

************************
Document:  CACM-2141.html
************************


Algorithmic Selection of the Best
Method for Compressing Map Data Strings

The best <B>of a</B> dozen different methods for
compressing map data is illustrated.  The choices 
are generated by encoding data strings-sequence of like
codes-by three methods and in four directions. 
 Relationships are developed between compression alternatives
to avoid comparing all of them.  The technique 
has been used to compress data from forest resource maps,
but is widely applicable to map and photographic 
data reduction.

CACM December, 1971

Amidon, E. L.
Akin, G. S.

data compression, map storage, information retrieval,
input/output, run coding, data reduction

3.71 3.74

CA711202 JB February 2, 1978  10:23 AM

2141	5	2141
2141	5	2141
2141	5	2141


************************



Algorithmic Selection of the Best
Method for Compressing Map Data Strings

The best of a dozen different methods for
compressing map data is illustrated.  The choices 
are generated by encoding data strings-sequence of like
codes-by three methods and in four directions. 
 Relationships are developed between compression alternatives
to avoid comparing all of them.  The technique 
has been used to compress data from forest resource maps,
but is widely applicable to map and photographic 
data reduction.

CACM December, 1971

Amidon, E. L.
Akin, G. S.

data compression, map storage, <B>information retrieval</B>,
input/output, run coding, data reduction

3.71 3.74

CA711202 JB February 2, 1978  10:23 AM

2141	5	2141
2141	5	2141
2141	5	2141


************************

************************
Document:  CACM-3169.html
************************


Note on "An Optimal Evaluation of Boolean Expressions 
in an Online Query System."

CACM October, 1979

Gudes, E.
Hoffman, A.

Query, Boolean expression, optimal evaluation, <B>information retrieval</B>

3.50 3.70 3.74

CA791002 DB January 16, 1980  4:52 PM

3168	4	3169
3169	4	3169
2965	5	3169
3169	5	3169
3169	5	3169
3169	5	3169


************************

************************
Document:  CACM-2140.html
************************


Retrieval-Update Speed Tradeoffs Using Combined Indices

In a paper in the November 1970 Communications
of the ACM, V. Y. Lum introduced a technique 
of file indexing named combined indices.  This technique
permitted decreased retrieval time at the cost 
of increased storage space.  This paper examines combined
indices under conditions of file usage with 
different fractions of retrieval and update.  Tradeoff
curves are developed to show minimal cost of file 
usage by grouping various partially combined indices.

CACM December, 1971

Mullin, J. K.

file organization, combined index files, inverted
files, <B>information retrieval</B>, query, multi-attribute 
retrieval, file update

3.73 3.74 3.79

CA711203 JB February 2, 1978  10:18 AM

2140	4	2140
2452	4	2140
2765	4	2140
2901	4	2140
3134	4	2140
1976	5	2140
2140	5	2140
2140	5	2140
2140	5	2140


************************

************************
Document:  CACM-2288.html
************************


File Organization: The Consecutive Retrieval Property

The consecutive retrieval property is an important
relation between a query set and record 
set.  Its existence enables the design <B>of a</B>n information
retrieval system with a minimal search time 
and no redundant storage.  Some important theorems on
the consecutive retrieval property are proved in 
this paper.  Conditions under which the consecutive retrieval
property exists and remain invariant have 
been established.  An outline for designing an information
retrieval system based on the consecutive 
retrieval property is also discussed.

CACM September, 1972

Ghosh, S. P.

file organization, consecutive storage, consecutive
retrieval, information retrieval, record organization, 
query structure, record structure, storage on
tapes, storage space, minimum access time

3.70 3.73 3.74

CA720902 JB January 27,1978  4:52 PM

2288	5	2288
2288	5	2288
2288	5	2288
2729	5	2288
2288	6	2288
2801	6	2288


************************



File Organization: The Consecutive Retrieval Property

The consecutive retrieval property is an important
relation between a query set and record 
set.  Its existence enables the design of an information
retrieval system with a minimal search time 
and no redundant storage.  Some important theorems on
the consecutive retrieval property are proved in 
this paper.  Conditions under which the consecutive retrieval
property exists and remain invariant have 
been established.  An outline for designing an information
retrieval system based on the consecutive 
retrieval property is also discussed.

CACM September, 1972

Ghosh, S. P.

file organization, consecutive storage, consecutive
retrieval, <B>information retrieval</B>, record organization, 
query structure, record structure, storage on
tapes, storage space, minimum access time

3.70 3.73 3.74

CA720902 JB January 27,1978  4:52 PM

2288	5	2288
2288	5	2288
2288	5	2288
2729	5	2288
2288	6	2288
2801	6	2288


************************



File Organization: The Consecutive Retrieval Property

The consecutive retrieval property is an important
relation between a query set and record 
set.  Its existence enables the design of an information
<B>retrieval system</B> with a minimal search time 
and no redundant storage.  Some important theorems on
the consecutive retrieval property are proved in 
this paper.  Conditions under which the consecutive retrieval
property exists and remain invariant have 
been established.  An outline for designing an information
retrieval system based on the consecutive 
retrieval property is also discussed.

CACM September, 1972

Ghosh, S. P.

file organization, consecutive storage, consecutive
retrieval, information retrieval, record organization, 
query structure, record structure, storage on
tapes, storage space, minimum access time

3.70 3.73 3.74

CA720902 JB January 27,1978  4:52 PM

2288	5	2288
2288	5	2288
2288	5	2288
2729	5	2288
2288	6	2288
2801	6	2288


************************

************************
Document:  CACM-2046.html
************************


A Relational Model of Data for Large Shared Data Banks

Future users of large data banks must be protected from having to know how the 
data is organized in the machine (the internal representation).  A prompting
service which supplies such information is not a satisfactory
solution.  Activities of users at terminals and most application
programs should remain unaffected when the internal representation
of data is changed and even when some aspects of the external representation 
are changed.  Change in data representation will often be needed as a result 
of changes in query, update, and report traffic and natural growth in the 
types of stored information.  Existing noninferential, formatted data systems 
provide users with tree-structured files or slightly more general network 
models of the data.  In Section 1, inadequacies of these models are discussed.
A model based on n-ary relations, a normal form for data base relations,
and the concept <B>of a</B> universal form for data base relations,
and the concept of a universal data sublanguage are introduced.  In
Section 2, certain operations on relations (other than logical
inference) are discussed and applied to the problems
of redundancy and consistency in the user's model.

CACM June, 1970

Codd, E. F.

data bank, data base, data structure, data organization,
hierarchies of data, networks of data, relations, derivability, 
redundancy, consistency, composition, join, retrieval
language, predicate calculus, security, data integrity

3.70 3.73 3.75 4.20 4.22 4.29

CA700609 JB February 13, 1978  10:57 AM

2046	4	2046
2710	4	2046
1515	5	2046
2046	5	2046
2046	5	2046
2046	5	2046
2155	5	2046
2406	5	2046
2710	5	2046
2715	5	2046
2716	5	2046
2717	5	2046
2718	5	2046
2765	5	2046
2817	5	2046
2888	5	2046
2901	5	2046
2957	5	2046
2959	5	2046
2965	5	2046
3087	5	2046
3154	5	2046
1389	6	2046
1515	6	2046
210	6	2046
1936	6	2046
1976	6	2046
1976	6	2046
1989	6	2046
378	6	2046
2046	6	2046
2046	6	2046
2046	6	2046
2046	6	2046
2046	6	2046
2046	6	2046
2046	6	2046
2046	6	2046
2046	6	2046
2046	6	2046
2046	6	2046
2046	6	2046
2046	6	2046
2046	6	2046
2046	6	2046
2046	6	2046
2060	6	2046
2110	6	2046
2406	6	2046
2451	6	2046
2451	6	2046
2452	6	2046
2715	6	2046
2715	6	2046
2715	6	2046
3133	6	2046
616	6	2046
616	6	2046
616	6	2046


************************

************************
Document:  CACM-1680.html
************************


A General-Purpose Display Processing and Tutorial System

ADEPT (A display-Expedited Processing and Tutorial)
system is described.  This system was designed 
to improve man-computer communications by employing
a display unit to interleave tutoring with other 
computer operations such as simulation, programming, and
<B>information retrieval</B>.  It is written in FORTRAN 
IV (G) for the IBM System/360, Model 40, and the IBM 2250
display Unit under Operating System/360.  Adept 
is a cataloged program that controls the standard operating
system by terminating and rescheduling itself 
automatically, relinquishing computer resources allocated
to it, and surrendering control to the operating 
system to perform other jobs.  It expands the power
and flexibility of computer-assisted instruction 
by making immediately available to students, teachers,
and other users, the full resources (system-cataloged 
programs) of the operating system.  Language processors
and compilers, simulation models, mathematical 
solution techniques, stored data, and all other library and
user programs can be incorporated into instructional 
material without reprogramming.  Illustrations of the various
applications are presented and their implications 
are discussed.

CACM October, 1968

Engvold, K. J.
Hughes, J. L.

computer-assisted instruction, tutorial systems,
programming, simulation, modeling, information 
retrieval operating systems, graphics, displays, man-machine
interface, on-line computing, graphic programming

1.5 3.3 3.5 3.8 4.0 4.3

CA681007 JB February 21, 1978  3:36 PM

1680	4	1680
1591	5	1680
1680	5	1680
1680	5	1680
1680	5	1680


************************

************************
Document:  CACM-1652.html
************************


A Code for Non-numeric Information Processing
Applications in Online Systems

A code has been specifically designed to simplify
the internal information processing operations 
within an online computer system with respect to non-numeric
applications, and to maximize the transfer 
rate of the information channel linking the system and
the system user.  The code has direct application 
to problems in area such as <B>information retrieval</B>, document
classification, computer-aided teaching and 
text editing.  This code, called IPC (Information Processing
Code), is an 8-bit code set constructed 
so that 7, 6, 5 and 4-bit subsets can be easily derived
from the basic set.  The code set is organized 
so that simple binary operations can distinguish between
the numeric alphabetic, special symbol and control 
character codes.  The number of usable characters within
the basic set size may be expanded either by 
use of escape codes included in the set, or by suitable
interpretation of otherwise unassigned codes 
on the basis of the requirements of local environments.

CACM January, 1967

Morenoff, E.
McLean, J. B.

CA670103 JB March 1, 1978  9:05 AM

1652	5	1652
1652	5	1652
1652	5	1652


************************



A Code for Non-numeric Information Processing
Applications in Online Systems

A code has been specifically designed to simplify
the internal information processing operations 
within an online computer system with respect to non-numeric
applications, and to maximize the transfer 
rate of the information channel linking the system and
the system user.  The code has direct application 
to problems in area such as information retrieval, document
classification, computer-aided teaching and 
text editing.  This code, called IPC (Information Processing
Code), is an 8-bit code set constructed 
so that 7, 6, 5 and 4-bit subsets can be easily derived
from the basic set.  The code set is organized 
so that simple binary operations can distinguish between
the numeric alphabetic, special symbol and control 
character codes.  The number of usable characters within
the basic set size may be expanded either by 
<B>use of</B> escape codes included in the set, or by suitable
interpretation of otherwise unassigned codes 
on the basis of the requirements of local environments.

CACM January, 1967

Morenoff, E.
McLean, J. B.

CA670103 JB March 1, 1978  9:05 AM

1652	5	1652
1652	5	1652
1652	5	1652


************************

************************
Document:  CACM-2580.html
************************


A Method for Composing Simple Traditional Music by Computer

A method is described for composing musical
rounds by computer.  This method uses some music 
theory plus additional heuristics.  Fundamental to the
method is a set of productions together with sets 
of applicability rules and weight rules which operate
on the productions deciding <B>when a</B>nd to what extent 
they are available for use.  Several rounds generated
by the computer implementation of the method are 
presented.  Generally, the resultant music sounds mediocre
to the professional although usually pleasing 
to the layman.  It appears that full-blown music theory
is not needed for rounds--all the hardware required 
for structural levels is not necessary for these pieces.
 The author has tried to address both musicians 
and computer scientists.

CACM November, 1974

Rader, G. M.

artificial intelligence, heuristic programming,
models of cognitive processes, computer music, 
computer composition, music theory, formal languages, probabilistic grammars

3.44 3.65 5.23

CA741104 JB January 16, 1978  10:35 AM

2580	5	2580
2580	5	2580
2580	5	2580


************************



A Method for Composing Simple Traditional Music by Computer

A method is described for composing musical
rounds by computer.  This method uses some music 
theory plus additional heuristics.  Fundamental to the
method is a set of productions together with sets 
<B>of a</B>pplicability rules and weight rules which operate
on the productions deciding when and to what extent 
they are available for use.  Several rounds generated
by the computer implementation of the method are 
presented.  Generally, the resultant music sounds mediocre
to the professional although usually pleasing 
to the layman.  It appears that full-blown music theory
is not needed for rounds--all the hardware required 
for structural levels is not necessary for these pieces.
 The author has tried to address both musicians 
and computer scientists.

CACM November, 1974

Rader, G. M.

artificial intelligence, heuristic programming,
models of cognitive processes, computer music, 
computer composition, music theory, formal languages, probabilistic grammars

3.44 3.65 5.23

CA741104 JB January 16, 1978  10:35 AM

2580	5	2580
2580	5	2580
2580	5	2580


************************

************************
Document:  CACM-2999.html
************************


An Approach to Multidimensional Data Array Processing by Computer

Some recent work on the development of general-purpose
computer-based statistical and data 
processing capabilities for handling multidimensional
arrays of data is presented. Attention is first 
given to some of the general problems of multidimensional
table and array processing.  This is followed 
by a summary of some recent developments in array processing
capabilities at the World Bank, in particular, 
the system identified as WRAPS(World Bank
Retrieval and Array Processing System).

CACM February, 1977

Muller, M. E.

array processing, table processing, statistical
analysis, dat<B>a retrieval</B>, data processing, syntax 
for data structures, computing techniques, time series, cross tabulation

3.10 3.20 3.30 3.70 4.0

CA770201 JB December 30, 1977  3:12 AM

2999	5	2999
2999	5	2999
2999	5	2999


************************

************************
Document:  CACM-1412.html
************************


The Banking Information System Concept

Most large commercial banks have progressed to
the  point where their major accounting applications 
have been automated and more sophisticated usage of
data processing equipment is being sought.  This, 
coupled with the availability of equipment well suited
to real-time, direct access processing,has led 
to development within some banks of the central file
of data base approach toward a banking information 
system.  The banking information system now serves the
two-fold purpose of providing real-time responses 
to inquires about individual account stasus and providing
more complex combinations of information for 
management use.  Both kinds of processing draw upon a
common store of data contained in the direct access 
central file.  This data base includes indexes which
facilitate cross referencing <B>of a</B>ccount information 
so that all relationships between bank and customer may
be discerned.  In introducing the banking information 
system concept, a gradual approach to account cross-referencing
and file conversion is most prudent. 
 Generally, this system must interface with other computer
applications already existing within the bank.

CACM July, 1966

Head, R. V.

CA660702 JB March 2, 1978  9:53 PM

1412	5	1412
1412	5	1412
1412	5	1412


************************

************************
Document:  CACM-1527.html
************************


A Grammar Base Question Answering Procedure

The subject of this paper is a procedure for
the automatic retrieval of certain segments of 
stored information, either explicitly or implicitly represented,
through questions posed in natural language 
sentences.  This procedure makes use <B>of a</B> sentence recognition
device for the class of grammars which 
will correctly decide between the grammatical and ungrammatical
sentences of a natural language.  It 
is possible to make use of a recognition device of this
sort for the following reason: Much data is fully 
expressible as a set of sentences in a natural language,
a set which can be exhaustively and exclusively 
generated by a grammar.  Based upon the rules of this grammar,
a sentence recognizer will evaluate sentences, 
questions in the normal situation.  Since the recognition
function succeeds just in case the posed question 
is drawn from the set of sentences expressing the data,
or, more correctly, is grammatical in terms of 
the grammar for this set of sentences, sentence recognition
itself is a procedure for retrieving information. 
 When the recognition function succeeds, its
value represents the requested information.

CACM October, 1967

Rosenbaum, P.

CA671006 JB February 27, 1978  2:14 PM

1527	5	1527
1527	5	1527
1527	5	1527
2092	5	1527
2127	5	1527
1155	6	1527
1324	6	1527
1487	6	1527
1527	6	1527
1527	6	1527
1781	6	1527
1856	6	1527


************************



A Grammar Base Question Answering Procedure

The subject of this paper is a procedure for
the automatic retrieval of certain segments of 
stored information, either explicitly or implicitly represented,
through questions posed in natural language 
sentences.  This procedure makes <B>use of</B> a sentence recognition
device for the class of grammars which 
will correctly decide between the grammatical and ungrammatical
sentences of a natural language.  It 
is possible to make use of a recognition device of this
sort for the following reason: Much data is fully 
expressible as a set of sentences in a natural language,
a set which can be exhaustively and exclusively 
generated by a grammar.  Based upon the rules of this grammar,
a sentence recognizer will evaluate sentences, 
questions in the normal situation.  Since the recognition
function succeeds just in case the posed question 
is drawn from the set of sentences expressing the data,
or, more correctly, is grammatical in terms of 
the grammar for this set of sentences, sentence recognition
itself is a procedure for retrieving information. 
 When the recognition function succeeds, its
value represents the requested information.

CACM October, 1967

Rosenbaum, P.

CA671006 JB February 27, 1978  2:14 PM

1527	5	1527
1527	5	1527
1527	5	1527
2092	5	1527
2127	5	1527
1155	6	1527
1324	6	1527
1487	6	1527
1527	6	1527
1527	6	1527
1781	6	1527
1856	6	1527


************************

