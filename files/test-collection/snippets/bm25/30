Snippets for the query:  I'd like to find articles describing the use of singular value decomposition in digital image processing. Applications include finding approximations to the original image and restoring images that are subject to noise. An article on the subject is H. Andrews and C. Patterson "Outer product expansions and their uses in digital image processing", American Mathematical Andrews, H. Patterson, C.
************************
Total Hits:  122
************************

************************
Document:  CACM-0695.html
************************


Use of the Disk File on Stretch

The paper begins by briefly describing the
Stretch (IBM 7030) computer with special emphasis 
given to the organization and operation of its input-output
equipment.  Physical characteristics of the 
two-disk system (4,194,304 72-bit words, 8 usec-per-word
transmission rate, etc.) are noted.  Timing 
limitations due to arm motion and disk rotation are discussed.
 Applications of disk usage are discussed 
separately for problem programs and for systems programs
such as compilers and the supervisory program. 
Approximately 260,000 words of disk storage are reserved
for the storage of systems programs and the 
subroutine library.  Problem programs, however, are not
currently filed <B>on the</B> disk.  Certain programming 
techniques are discussed for transmitting words between
disk and core storage with minimum delaying and 
interruption of the arithmetic unit.  Dumps on disk are
considered for both recovery from computer malfunction 
and for mathematical or physical developments during
the calculation.  Some comments are made regarding 
the reliability, economics, utility and weaknesses or
limitations of the disk system.  Several possible 
future applications are noted which appear to have disk connotations.

CACM October, 1963

Carlson, B. G.
Voorhes, E. A.

CA631030 JB March 13, 1978  4:28 PM

695	5	695
695	5	695
695	5	695


************************



Use of the Disk File on Stretch

The paper begins by briefly <B>describing the</B>
Stretch (IBM 7030) computer with special emphasis 
given to the organization and operation of its input-output
equipment.  Physical characteristics of the 
two-disk system (4,194,304 72-bit words, 8 usec-per-word
transmission rate, etc.) are noted.  Timing 
limitations due to arm motion and disk rotation are discussed.
 Applications of disk usage are discussed 
separately for problem programs and for systems programs
such as compilers and the supervisory program. 
Approximately 260,000 words of disk storage are reserved
for the storage of systems programs and the 
subroutine library.  Problem programs, however, are not
currently filed on the disk.  Certain programming 
techniques are discussed for transmitting words between
disk and core storage with minimum delaying and 
interruption of the arithmetic unit.  Dumps on disk are
considered for both recovery from computer malfunction 
and for mathematical or physical developments during
the calculation.  Some comments are made regarding 
the reliability, economics, utility and weaknesses or
limitations of the disk system.  Several possible 
future applications are noted which appear to have disk connotations.

CACM October, 1963

Carlson, B. G.
Voorhes, E. A.

CA631030 JB March 13, 1978  4:28 PM

695	5	695
695	5	695
695	5	695


************************



Use of the Disk File on Stretch

The paper begins by briefly describing the
Stretch (IBM 7030) computer with special emphasis 
given <B>to the</B> organization and operation of its input-output
equipment.  Physical characteristics of the 
two-disk system (4,194,304 72-bit words, 8 usec-per-word
transmission rate, etc.) are noted.  Timing 
limitations due to arm motion and disk rotation are discussed.
 Applications of disk usage are discussed 
separately for problem programs and for systems programs
such as compilers and the supervisory program. 
Approximately 260,000 words of disk storage are reserved
for the storage of systems programs and the 
subroutine library.  Problem programs, however, are not
currently filed on the disk.  Certain programming 
techniques are discussed for transmitting words between
disk and core storage with minimum delaying and 
interruption of the arithmetic unit.  Dumps on disk are
considered for both recovery from computer malfunction 
and for mathematical or physical developments during
the calculation.  Some comments are made regarding 
the reliability, economics, utility and weaknesses or
limitations of the disk system.  Several possible 
future applications are noted which appear to have disk connotations.

CACM October, 1963

Carlson, B. G.
Voorhes, E. A.

CA631030 JB March 13, 1978  4:28 PM

695	5	695
695	5	695
695	5	695


************************

************************
Document:  CACM-2004.html
************************


A Procedure for Generation of Three-dimensional
Half-toned Computer Graphics Presentations

A description is given of an algorithm for producing computer generated 
half-tone presentations of three-dimensional polygonal surface structures.  
This algorithm achieves a significant increase in speed of computation over 
the Warnock algorithm developed at the University of Utah and implemented
also <B>on the</B> Coordinated Science Laboratory CDC 1604 computer
system at the University of Illinois.  The history leading to the algorithm
development and then the algorithm itself are described.
Results are presented and are compared with computer runs achieved
by the Warnock approach.  An extension of the procedure to variable position
illumination sources is also given.

CACM September, 1970

Bouknight, W. J.

half-tone computer graphics, line-scan image processing,
hidden surface, polygonal surface structure presentations

4.9

CA700901 JB February 10, 1978  2:27 PM

2004	4	2004
2004	4	2004
2687	4	2004
2692	4	2004
1686	5	2004
1915	5	2004
2004	5	2004
2004	5	2004
2004	5	2004
2674	5	2004
2687	5	2004
2828	5	2004
1741	6	2004
1741	6	2004
1751	6	2004
1915	6	2004
2004	6	2004
2004	6	2004
2004	6	2004
2421	6	2004
2687	6	2004
2751	6	2004
2841	6	2004


************************



A Procedure for Generation of Three-dimensional
Half-toned Computer Graphics Presentations

A description is given of an algorithm for producing computer generated 
half-tone presentations of three-dimensional polygonal surface structures.  
This algorithm achieves a significant increase in speed of computation over 
the Warnock algorithm developed at the University of Utah and implemented
also on the Coordinated Science Laboratory CDC 1604 computer
system at the University of Illinois.  The history leading <B>to the</B> algorithm
development and then the algorithm itself are described.
Results are presented and are compared with computer runs achieved
by the Warnock approach.  An extension of the procedure to variable position
illumination sources is also given.

CACM September, 1970

Bouknight, W. J.

half-tone computer graphics, line-scan image processing,
hidden surface, polygonal surface structure presentations

4.9

CA700901 JB February 10, 1978  2:27 PM

2004	4	2004
2004	4	2004
2687	4	2004
2692	4	2004
1686	5	2004
1915	5	2004
2004	5	2004
2004	5	2004
2004	5	2004
2674	5	2004
2687	5	2004
2828	5	2004
1741	6	2004
1741	6	2004
1751	6	2004
1915	6	2004
2004	6	2004
2004	6	2004
2004	6	2004
2421	6	2004
2687	6	2004
2751	6	2004
2841	6	2004


************************

************************
Document:  CACM-0078.html
************************


Remarks <B>on the</B> Practical Solution of Characteristic Value Problems

This paper is concerned with the practical
solution of characteristic value problem for an 
ordinary differential equation.  It is at once apparent
that sequential computers, be they digital or 
analog, solve initial value problems, rather than boundary
value problems, and some mathematical process 
must be found to compensate for the machine's inadequacy.
 (Compensating for machine imperfection is, 
of course, the normal activity of the numerical analyst.)
 A number of other papers have applied particular 
devices to particular problems.  The purpose of this
note is to establish a mathematical framework or 
model for these practical procedures and thus assist in
the use and extension of the ideas in other particular 
problems.

CACM June, 1959

Wouk, A.

CA590606 JB March 22, 1978  6:30 PM

78	5	78
78	5	78
78	5	78


************************



Remarks on the Practical Solution of Characteristic Value Problems

This paper is concerned with the practical
solution of characteristic value problem for an 
ordinary differential equation.  It is at once apparent
that sequential computers, be they digital or 
analog, solve initial value problems, rather than boundary
value problems, and some mathematical process 
must be found to compensate for the machine's inadequacy.
 (Compensating for machine imperfection is, 
of course, the normal activity of the numerical analyst.)
 A number of other papers have applied particular 
devices to particular problems.  The purpose of this
note is to establish a mathematical framework or 
model for these practical procedures and thus assist in
<B>the use</B> and extension of the ideas in other particular 
problems.

CACM June, 1959

Wouk, A.

CA590606 JB March 22, 1978  6:30 PM

78	5	78
78	5	78
78	5	78


************************

************************
Document:  CACM-2674.html
************************


Scan Conversion Algorithms for a Cell Organized Raster Display

Raster scan computer graphics with "real time"
character generators have previously been limited 
to alphanumeric characters.  A display has been described
which extends the capabilities of this organization 
to include general graphics.  Two fundamentally different
scan conversion algorithms which have been 
developed to support this display are presented.  One
is most suitable to non-interactive applications 
and the other to interactive applications.  The algorithms
were implemented in Fortran <B>on the</B> CDC 6400 
computer.  Results obtained from the implementations show
that the noninteractive algorithms can significantly 
reduce display file storage requirements at little cost
in execution time over that of a conventional 
raster display.  The interactive algorithm can improve
response time and reduce storage requirements.

CACM March, 1974

Barrett, R. C.
Fordan, B. W. Jr.

graphics, scan conversion, raster display, line
drawing, discrete image, dot generation, matrix
displays

4.41 6.35 8.2

CA740309 JB January 18, 1978  11:08 AM

1891	4	2674
2211	4	2674
2421	4	2674
2674	4	2674
2674	4	2674
2674	4	2674
2674	4	2674
2687	4	2674
2687	4	2674
2828	4	2674
1741	5	2674
2004	5	2674
2421	5	2674
2674	5	2674
2674	5	2674
2674	5	2674
2687	5	2674


************************

************************
Document:  CACM-2829.html
************************


Texture and Reflection in Computer Generated Images

In 1974 Catmull developed a new algorithm
for rendering images of bivariate surface patches. 
 This paper describes extensions of this algorithm in
the areas of texture simulation and lighting models. 
 The parameterization of a patch defines a coordinate
system which is used as a key for mapping patterns 
on<B>to the</B> surface.  The intensity of the pattern at each
picture element is computed as a weighted average 
of regions of the pattern definition function. The shape
and size of this weighting function are chosen 
using digital signal processing theory.  The patch rendering
algorithm allows accurate computation of 
the surface normal to the patch at each picture element,
permitting the simulation of the mirror reflections. 
 The amount of light coming from a given direction is
modeled in a similar manner to the texture mapping 
and then added to the intensity obtained from the texture
mapping.  Several examples of images synthesized 
using these new techniques are included.

CACM October, 1976

Blinn, J. F.
Newell, M. E.

computer graphics, graphic display, shading, hidden surface removal

3.41 5.12 5.15 8.2

CA761002 JB January 4, 1978  8:36 AM

2816	5	2829
2829	5	2829
2829	5	2829
2829	5	2829
3047	5	2829
2493	6	2829
2751	6	2829
2751	6	2829
2829	6	2829
2829	6	2829


************************

************************
Document:  CACM-1726.html
************************


Preliminary Investigation of Techniques
for Automated Reading of Unformatted Text

Methods for converting unstructured printed
material into computer code are experimentally 
investigated.  An operator-controlled mode, depending
on human demarcation of the various regions of 
the page for guiding the scanner, is implemented by
means of a joystick and a CRT display.  This mode, 
for which some performance figures are obtained, is thought
to be suitable for processing very complicated 
material, such as technical journals.  For simpler material,
for instance the "claims" sections of patents, 
and in applications where the utmost accuracy is not necessary,
an unsupervised mode is advocated.  Here, 
the textual portions of the page are located during
a rapid prescan by a rudimentary form of frequency 
analysis.  These areas are then rescanned at a higher
resolution suitable for character recognition. 
 Error rates of the order of 0.1 percent are obtained in
a simple problem involving photographs of telephone 
company meter boards.  Other matters related <B>to the</B>
design of a general purpose page reader, such as 
the segmentation of printed text, the possibility of
time-sharing the scanner, interactive man-machine 
operation, and the facsimile reproduction of illustrations, are discussed.

CACM July, 1968

Nagy, G.

pattern recognition, character recognition, text
reading, information retrieval, unformatted text 
operator-controlled reader, online reader,
text-image discrimination, reading machine

3.63 3.79 3.89 6.29 6.35

CA680703 JB February 22, 1978  2:52 PM

1726	5	1726
1726	5	1726
1726	5	1726
2370	5	1726
1726	6	1726


************************

************************
Document:  CACM-2486.html
************************


Computer Photocomposition of Technical Text

In computer assisted typesetting by means of
photocomposition, special problems arise in highly 
technical material such as mathematical formulas.  New
solutions to several of these problems have been 
devised in the information system of the American Institute
of Physics.  They include: the representation 
of special characters (foreign alphabets, mathematical
symbols, etc.) not available on input keyboards 
or <B>on the</B> photocomposer; the generation of such symbols,
e.g. by overprinting; the precise positioning 
of accent marks (floating diacritics); line breaks,
i.e. words or formulas placed partly at the end of 
one line and partly at the beginning of the next;
and certain aspects of error correction.

CACM June, 1973

Alt, F. L.
Yuni Kirk, J.

photocomposition, typesetting, printing, graphics, text processing

3.79 3.82

CA730614 JB January 23, 1978  1:30 PM

2486	5	2486
2486	5	2486
2486	5	2486


************************

************************
Document:  CACM-1741.html
************************


BRAD: The Brookhaven Raster Display

A multiconsole computer display system has
been designed that provides very rich displays at 
low unit cost.  Each BRAD (Brookhaven Raster Display)
console can plot tens of thousands of points, or 
up to 4000 characters at 30 frames per second.  After
an initial display system investment of $50,000 
each display, with teletype, costs less than $3,000.
 The technique employed is that of programmatically 
generating a binary image of the desired display in a
computer.  The image is written on a rotating drum 
memory.  Independent read heads continuously display
the picture, which is generated by swept horizontal 
lines.  A standard TV monitor serves as the display device.
 The technique has two drawbacks.  A computer 
must compute any image to be displayed.  Also, the "pointing"
interaction is more difficult.  This is 
because the pointing function gives only the coordinates
of the point <B>on the</B> screen.  The inverse of 
the map generation process is required to calculate
the coordinates of the point on the screen.  The 
inverse of the map generation process is required to
calculate the coordinates at the selected point 
in the input space.

CACM June, 1968

Ophir, D.
Rankowitz, S.
Shepherd, B. J.
Spinrad, R. J.

computer display, computer graphics, computer raster
display, TV display console, digital TV display, 
swept raster computer display, swept raster TV computer
display, TV graphics terminal, multiconsole computer 
graphics, inexpensive graphic terminal

2.0 4.49 6.35

CA680604 JB February 22, 1978  4:35 PM

1741	5	1741
1741	5	1741
1741	5	1741
1891	5	1741
2211	5	1741
2421	5	1741
2674	5	1741
2687	5	1741
1554	6	1741
1741	6	1741
1741	6	1741
1741	6	1741
1741	6	1741
1741	6	1741
1915	6	1741
2004	6	1741
2004	6	1741
2211	6	1741
2421	6	1741
2687	6	1741


************************

************************
Document:  CACM-2275.html
************************


Integral Equations of Immunology

The inversion of a particular integral equation
of the first (Fredholm) kind is the basic problem 
considered.  The strategy which yielded success consisted
of three essential points: (1) fit the known 
experimental data by a curve with properties which derive
from properties of the (as yet unknown) function; 
(2) stabilize the computation for the unknown function
by using <B>singular value</B> decomposition; (3) constrain 
the unknown function approximation (since it represents
a probability distribution) to be nonnegative. 
 A number of test cases are presented. One set of actual
experimental data is analyzed with the procedures 
presented.

CACM October, 1972

Hanson, R. J.

integral equations of the first kind, nonnegative
constraints, singular value analysis

3.10 5.14 5.18 5.41

CA721003 JB January 27, 1978  3:37 PM

2275	5	2275
2275	5	2275
2275	5	2275


************************



Integral Equations of Immunology

The inversion of a particular integral equation
of the first (Fredholm) kind is the basic problem 
considered.  The strategy which yielded success consisted
of three essential points: (1) fit the known 
experimental data by a curve with properties which derive
from properties of the (as yet unknown) function; 
(2) stabilize the computation for the unknown function
by using singular <B>value decomposition</B>; (3) constrain 
the unknown function approximation (since it represents
a probability distribution) to be nonnegative. 
 A number of test cases are presented. One set of actual
experimental data is analyzed with the procedures 
presented.

CACM October, 1972

Hanson, R. J.

integral equations of the first kind, nonnegative
constraints, singular value analysis

3.10 5.14 5.18 5.41

CA721003 JB January 27, 1978  3:37 PM

2275	5	2275
2275	5	2275
2275	5	2275


************************

************************
Document:  CACM-1891.html
************************


Three-Dimensional Computer Display

A stereographic display terminal has been
produced using the raster display (BRAD) recently 
developed at Brookhaven.  The system uses a rotating refresh
memory to feed standard television monitors. 
 To produce a stereographic display the computer calculates
the projected video images of an object, 
viewed from two separate points.  The resulting video
maps are stored on separate refresh bands of the 
rotating memory.  The two output signals are connected
to separate color guns of a color television monitor, 
thus creating a superimposed image <B>on the</B> screen.  Optical
separation is achieved by viewing the image 
through color filters.  The display is interactive and
can be viewed by a large group of people at the 
same time.

CACM June, 1969

Ophir, D.
Shepherd, B. J.
Spinrad, R. J.

computer graphics, three-dimensional display, swept
raster display, interactive stereographic terminal, 
video map, color separation

2.0 4.49 6.35

CA690602 JB February 17, 1978  1:34 PM

1891	4	1891
2211	4	1891
2421	4	1891
2674	4	1891
2687	4	1891
1741	5	1891
1891	5	1891
1891	5	1891
1891	5	1891


************************

************************
Document:  CACM-2274.html
************************


Generating English Discourse from Semantic Networks

A system is described for generating English
sentences from a form of semantic nets in which 
the nodes are word-sense meanings and the paths are
primarily deep case relations.  The grammar used 
by the system is in the form of a network that imposes
an ordering on a set of syntactic transformations 
<B>that are</B> expressed as LISP functions.  The generation
algorithm uses the information in the semantic 
network to select appropriate generation paths through
the grammar.  The system is designed for use as 
a computational tool that allows a linguist to develop
and study methods for generating surface strings 
from an underlying semantic structure.  Initial finding
with regard to form determiners such as voice, 
form, tense, and mood, some rules for embedding sentences,
and some attention to pronominal substitution 
are reported.  The system is programmed in LISP
1.5 and is available from the authors.

CACM October, 1972

Simmons, R.
Slocum, J.

semantic nets, grammars, deep case relations,
semantic generation, discourse generation

3.42 3.65

CA721004 JB January 27, 1978  3:10 PM

2274	5	2274
2274	5	2274
2274	5	2274
2795	5	2274
1928	6	2274
1989	6	2274
2274	6	2274


************************

************************
Document:  CACM-3076.html
************************


Value Conflicts and Social Choice in Electronic
Funds Transfer System Developments

During the last few years, computer-based
systems which automate the transfer and recording 
of debits and credits have begun to be implemented on
a large scale.  These systems promise both financial 
benefits for the institutions that use them and potential
conveniences <B>to the</B>ir customers.  However, 
they also raise significant social, legal, and technical
questions that must be resolved if full scale 
systems for Electronic Funds Transfer (EFT) are not
to cause more problems for the larger public than 
they solve.  This paper examines the incentives for EFT
developments and the social problems they raise 
in the context of conflicts between five different value
positions that are often implicit in analyses 
of proposed EFT arrangements.  These conflicts reflect
the relative importance of certain problems for 
specific groups.  The value positions implicit in EFT proposals
help to organize analyses of market arrangements, 
system reliability, and privacy of transactions.  These
topics are analyzed in this article and related 
to the value positions held by concerned parties.  Last,
the ways in which the public can learn about 
the social qualities of different EFT arrangements and
the pace of EFT developments are both discussed 
in the context of social choice. 

CACM August, 1978

Kling, R.

Electronic funds transfer systems, social impacts
of computing, privacy, social choice, computer 
networks, network reliability, security, social values

2.11 2.12 2.3 3.52 3.53 3.55

CA780802 DH February 7, 1979  2:25 PM

2756	4	3076
3076	4	3076
3076	4	3076
3179	4	3076
2607	5	3076
2840	5	3076
3076	5	3076
3076	5	3076
3076	5	3076
3142	5	3076
3179	5	3076
3178	5	3076
3182	5	3076
3183	5	3076
2572	6	3076
2583	6	3076
2607	6	3076
3076	6	3076
3076	6	3076
3076	6	3076
3076	6	3076
3076	6	3076
3140	6	3076
3142	6	3076
3179	6	3076
3180	6	3076
3181	6	3076
3182	6	3076


************************



Value Conflicts and Social Choice in Electronic
Funds Transfer System Developments

During the last few years, computer-based
systems which automate the transfer and recording 
of debits and credits have begun to be implemented on
a large scale.  These systems promise both financial 
benefits for the institutions that use them and potential
conveniences to their customers.  However, 
they also raise significant social, legal, and technical
questions that must be resolved if full scale 
systems for Electronic Funds Transfer (EFT) are not
to cause more problems for the larger public than 
they solve.  This paper examines the incentives for EFT
developments and the social problems they raise 
in the context of conflicts between five different value
positions <B>that are</B> often implicit in analyses 
of proposed EFT arrangements.  These conflicts reflect
the relative importance of certain problems for 
specific groups.  The value positions implicit in EFT proposals
help to organize analyses of market arrangements, 
system reliability, and privacy of transactions.  These
topics are analyzed in this article and related 
to the value positions held by concerned parties.  Last,
the ways in which the public can learn about 
the social qualities of different EFT arrangements and
the pace of EFT developments are both discussed 
in the context of social choice. 

CACM August, 1978

Kling, R.

Electronic funds transfer systems, social impacts
of computing, privacy, social choice, computer 
networks, network reliability, security, social values

2.11 2.12 2.3 3.52 3.53 3.55

CA780802 DH February 7, 1979  2:25 PM

2756	4	3076
3076	4	3076
3076	4	3076
3179	4	3076
2607	5	3076
2840	5	3076
3076	5	3076
3076	5	3076
3076	5	3076
3142	5	3076
3179	5	3076
3178	5	3076
3182	5	3076
3183	5	3076
2572	6	3076
2583	6	3076
2607	6	3076
3076	6	3076
3076	6	3076
3076	6	3076
3076	6	3076
3076	6	3076
3140	6	3076
3142	6	3076
3179	6	3076
3180	6	3076
3181	6	3076
3182	6	3076


************************

************************
Document:  CACM-2931.html
************************


Logic and Programming Languages

Logic has been long in terested in whether answers
to certain questions are computable in principle, 
since the outcome puts bounds <B>on the</B> possibilities of
formalization.  More recently, precise comparisons 
in the efficiency of decision methods have become available
through the developments in complexity theory. 
 These, however, are applications to logic, and a big question
is whether methods of logic have significance 
in the other direction for the more applied parts of
computability theory.  Programming languages offer 
an obvious opportunity as their syntactic formalization
is well advanced; however, the semantical theory 
can hardly be said to be complete.  Though we have
many examples, we have still to give wide-ranging 
mathematical answers to these queries:  What is a machine?
 What is a computable process?  How (or how 
well) does a machine simulate a process?  Programs naturally
enter in giving descriptions of processes. 
 The definition of the precise meaning of a program
then requires us to explain what are the objects 
of computation (in a way, the statics of the problem)
and how they are to be transformed (the dynamics). 
 So far the theories of automata and of nets, though
most in teresting for dynamics, have formalized only 
a portion of the field, and there has been perhaps too
much concentration on the finite-state and algebraic 
aspects.  It would seem that the understanding of higher-level
program features involves us with infinite 
objects and forces us to pass through several levels
of explanation to go from the conceptual ideas to 
the final simulation on a real machine.  These levels
can be made mathematically exact if we can find 
the right abstractions to represent the necessary structures.
 The experience of many independent workers 
with the method of data types as lattices (or partial
orderings) under an information content ordering, 
and with their continuous mappings, has demonstrated the
flexibility of this approach in providing definitions 
and proofs, which are clean and without undue dependence
on implementations.  Nevertheless much remains 
to be done in showing how abstract conceptualizations
can (or cannot) be actualized before we can say 
we have a unified theory.

CACM September, 1977

Scott, D. S.

logic, programming languages, automata, denotational
semantics, a-calculus models, computability, 
partial functions, approximation, function spaces

1.2 4.20 5.21 5.24 5.27

CA770902 JB December 28, 1977  6:49 AM

2931	5	2931
2931	5	2931
2931	5	2931


************************



Logic and Programming Languages

Logic has been long in terested in whether answers
to certain questions are computable in principle, 
since the outcome puts bounds on the possibilities of
formalization.  More recently, precise comparisons 
in the efficiency of decision methods have become available
through the developments in complexity theory. 
 These, however, are applications to logic, and a big question
is whether methods of logic have significance 
in the other direction for the more applied parts of
computability theory.  Programming languages offer 
an obvious opportunity as their syntactic formalization
is well advanced; however, the semantical theory 
can hardly be said to be complete.  Though we have
many examples, we have still to give wide-ranging 
mathematical answers <B>to the</B>se queries:  What is a machine?
 What is a computable process?  How (or how 
well) does a machine simulate a process?  Programs naturally
enter in giving descriptions of processes. 
 The definition of the precise meaning of a program
then requires us to explain what are the objects 
of computation (in a way, the statics of the problem)
and how they are to be transformed (the dynamics). 
 So far the theories of automata and of nets, though
most in teresting for dynamics, have formalized only 
a portion of the field, and there has been perhaps too
much concentration on the finite-state and algebraic 
aspects.  It would seem that the understanding of higher-level
program features involves us with infinite 
objects and forces us to pass through several levels
of explanation to go from the conceptual ideas to 
the final simulation on a real machine.  These levels
can be made mathematically exact if we can find 
the right abstractions to represent the necessary structures.
 The experience of many independent workers 
with the method of data types as lattices (or partial
orderings) under an information content ordering, 
and with their continuous mappings, has demonstrated the
flexibility of this approach in providing definitions 
and proofs, which are clean and without undue dependence
on implementations.  Nevertheless much remains 
to be done in showing how abstract conceptualizations
can (or cannot) be actualized before we can say 
we have a unified theory.

CACM September, 1977

Scott, D. S.

logic, programming languages, automata, denotational
semantics, a-calculus models, computability, 
partial functions, approximation, function spaces

1.2 4.20 5.21 5.24 5.27

CA770902 JB December 28, 1977  6:49 AM

2931	5	2931
2931	5	2931
2931	5	2931


************************

************************
Document:  CACM-1929.html
************************


Images from Computers and Microfilm Plotters

Digital computers are widely used for the
processing of information and data of all kinds, 
including the pictorial information contained in photographs
and other graphical representations.  Efficient 
conversion facilities for putting graphical information
in<B>to the</B> computer and retrieving it in graphical 
form are therefore much needed.  One of the most commonly
employed devices for obtaining permanent graphical 
output from digital computers is the microfilm plotter.
 Regrettably, present models have no provision 
for producing images with a continuous gray scale or "half tones."
 In this note several programming techniques 
are described for obtaining half tone pictures from a
microfilm plotter under the control of a digital 
computer.  Illustrative examples of several methods are given.

CACM February, 1969

Schroeder, M. R.

computer images, half tone pictures, microfilm plotters; processing

3.10 3.15 3.24 4.49

CA690209 JB February 20, 1978  10:06 AM

1929	5	1929
1929	5	1929
1929	5	1929
2142	5	1929
1929	6	1929
2231	6	1929


************************

************************
Document:  CACM-1608.html
************************


Numerical Integration of Function That Has a Pole

It is common to need to integrate numerically
functions that diverge somewhere outside the 
range of integration.  Even if the divergence occurs quite
far away, integration formulas like Simpson's, 
that depend on fitting a polynomial, usually will be
inaccurate: near a pole they will be very bad.  
A method is described that gives formulas that will integrate
functions of this kind accurately if the 
orders and positions of the poles are known.  Explicit
formulas are given that are easy to use on an 
automatic computer.  It is shown that they can be used
for some other singularities as well as poles. 
 If the integral converges, integration can be carried
<B>to the</B> singularity.  The accuracy of the integration 
with a pole of second order is discussed, and, as an example,
the new formula is compared with Simpson's. 
 The new formulas are useful even far from the pole,
while near the pole their advantage is overwhelming.

CACM April, 1967

Eisner, E.

CA670407 JB February 28, 1978  11:20 AM

1608	5	1608
1608	5	1608
1608	5	1608


************************



Numerical Integration of Function That Has a Pole

It is common to need to integrate numerically
functions that diverge somewhere outside the 
range of integration.  Even if the divergence occurs quite
far away, integration formulas like Simpson's, 
that depend on fitting a polynomial, usually will be
inaccurate: near a pole they will be very bad.  
A method is described that gives formulas that will integrate
functions of this kind accurately if the 
orders and positions of the poles are known.  Explicit
formulas are given <B>that are</B> easy to use on an 
automatic computer.  It is shown that they can be used
for some other singularities as well as poles. 
 If the integral converges, integration can be carried
to the singularity.  The accuracy of the integration 
with a pole of second order is discussed, and, as an example,
the new formula is compared with Simpson's. 
 The new formulas are useful even far from the pole,
while near the pole their advantage is overwhelming.

CACM April, 1967

Eisner, E.

CA670407 JB February 28, 1978  11:20 AM

1608	5	1608
1608	5	1608
1608	5	1608


************************

************************
Document:  CACM-1388.html
************************


AUTOMAST: Automatic Mathematical Analysis and Symbolic Translation

A procedure for numerically solving systems
of ordinary differential equation is shown to also 
generate symbolic solutions.  The procedure is based
on a finite Taylor series expansion that includes 
an estimate of the error in the final result.  A computer
program is described that reads in a system 
of such equations and then generates the expansions
for all of the dependent variables. The expansions 
are determined symbolically, hence any non-numeric parameters
in the original equations are carried automatically 
in<B>to the</B> final expansions.  Thus the exact influence
of any parameters on the problem solution can be 
easily displayed.

CACM August, 1966

Ball, W. E.
Berns, R. I.

CA660810 JB March 2, 1978  7:16 PM

1024	4	1388
1051	4	1388
1098	4	1388
1214	4	1388
1223	4	1388
1380	4	1388
1388	4	1388
1388	4	1388
1393	4	1388
1485	4	1388
1487	4	1388
1549	4	1388
1570	4	1388
1878	4	1388
1946	4	1388
1957	4	1388
2168	4	1388
436	4	1388
2723	4	1388
2857	4	1388
3112	4	1388
1388	5	1388
1388	5	1388
1388	5	1388
1396	5	1388
405	5	1388
731	5	1388
964	6	1388
1028	6	1388
1029	6	1388
1083	6	1388
1132	6	1388
1214	6	1388
1278	6	1388
1334	6	1388
1365	6	1388
1386	6	1388
1387	6	1388
1388	6	1388
1392	6	1388
1393	6	1388
1394	6	1388
1395	6	1388
1396	6	1388
1397	6	1388
1496	6	1388
284	6	1388
407	6	1388
3199	6	1388
3200	6	1388
3201	6	1388
3202	6	1388
3203	6	1388
3204	6	1388
561	6	1388
730	6	1388


************************



AUTOMAST: Automatic Mathematical Analysis and Symbolic Translation

A procedure for numerically solving systems
of ordinary differential equation is shown to also 
generate symbolic solutions.  The procedure is based
on a finite Taylor series expansion that includes 
an estimate of the error in the final result.  A computer
program is described that reads in a system 
of such equations and then generates the expansions
for all of the dependent variables. The expansions 
are determined symbolically, hence any non-numeric parameters
in the original equations are carried automatically 
into the final expansions.  Thus the exact influence
of any parameters <B>on the</B> problem solution can be 
easily displayed.

CACM August, 1966

Ball, W. E.
Berns, R. I.

CA660810 JB March 2, 1978  7:16 PM

1024	4	1388
1051	4	1388
1098	4	1388
1214	4	1388
1223	4	1388
1380	4	1388
1388	4	1388
1388	4	1388
1393	4	1388
1485	4	1388
1487	4	1388
1549	4	1388
1570	4	1388
1878	4	1388
1946	4	1388
1957	4	1388
2168	4	1388
436	4	1388
2723	4	1388
2857	4	1388
3112	4	1388
1388	5	1388
1388	5	1388
1388	5	1388
1396	5	1388
405	5	1388
731	5	1388
964	6	1388
1028	6	1388
1029	6	1388
1083	6	1388
1132	6	1388
1214	6	1388
1278	6	1388
1334	6	1388
1365	6	1388
1386	6	1388
1387	6	1388
1388	6	1388
1392	6	1388
1393	6	1388
1394	6	1388
1395	6	1388
1396	6	1388
1397	6	1388
1496	6	1388
284	6	1388
407	6	1388
3199	6	1388
3200	6	1388
3201	6	1388
3202	6	1388
3203	6	1388
3204	6	1388
561	6	1388
730	6	1388


************************



AUTOMAST: Automatic Mathematical Analysis and Symbolic Translation

A procedure for numerically solving systems
of ordinary differential equation is shown to also 
generate symbolic solutions.  The procedure is based
on a finite Taylor series expansion that includes 
an estimate of the error in the final result.  A computer
program is described that reads in a system 
of such equations and then generates the expansions
for all of the dependent variables. The expansions 
are determined symbolically, hence any non-numeric parameters
in <B>the original</B> equations are carried automatically 
into the final expansions.  Thus the exact influence
of any parameters on the problem solution can be 
easily displayed.

CACM August, 1966

Ball, W. E.
Berns, R. I.

CA660810 JB March 2, 1978  7:16 PM

1024	4	1388
1051	4	1388
1098	4	1388
1214	4	1388
1223	4	1388
1380	4	1388
1388	4	1388
1388	4	1388
1393	4	1388
1485	4	1388
1487	4	1388
1549	4	1388
1570	4	1388
1878	4	1388
1946	4	1388
1957	4	1388
2168	4	1388
436	4	1388
2723	4	1388
2857	4	1388
3112	4	1388
1388	5	1388
1388	5	1388
1388	5	1388
1396	5	1388
405	5	1388
731	5	1388
964	6	1388
1028	6	1388
1029	6	1388
1083	6	1388
1132	6	1388
1214	6	1388
1278	6	1388
1334	6	1388
1365	6	1388
1386	6	1388
1387	6	1388
1388	6	1388
1392	6	1388
1393	6	1388
1394	6	1388
1395	6	1388
1396	6	1388
1397	6	1388
1496	6	1388
284	6	1388
407	6	1388
3199	6	1388
3200	6	1388
3201	6	1388
3202	6	1388
3203	6	1388
3204	6	1388
561	6	1388
730	6	1388


************************

************************
Document:  CACM-1272.html
************************


Expanding the Editing Function In Language Data Processing

In automatic abstracting, citation indexing,
mechanical translation and other such procedures, 
editing is required whenever the automatic method leaves
something to be desired.  This paper discusses 
the economy of editing as a function of the amount of condensation
of text in language processing operations, 
and then contends that editing can be regarded as an
opportunity rather than as an unwelcome necessity. 
 "Heavy editing," which goes beyond mere correction
and improvement of computer output, is exemplified 
by the <B>use of</B> a concordance in preparing a survey article
or lecture.  Other opportunities for heavy 
editing are described, chief among them being interpretation and
expansion of computer output in such 
processes as factor analysis.  Applications are described,
such processes as factor analysis.  Applications 
are described, such as the quick, unbiased evaluation
of a large volume of incoming mail or telegrams, 
yielding summary reports not possible for either
humans or computers to produce alone.

CACM April, 1965

Doule, L. B.

CA650419 JB March 7, 1978  3:26 PM

1272	5	1272
1272	5	1272
1272	5	1272


************************



Expanding the Editing Function In Language Data Processing

In automatic abstracting, citation indexing,
mechanical translation and other such procedures, 
editing is required whenever the automatic method leaves
something to be desired.  This paper discusses 
the economy of editing as a function of the amount of condensation
of text in language processing operations, 
and then contends that editing can be regarded as an
opportunity rather than as an unwelcome necessity. 
 "Heavy editing," which goes beyond mere correction
and improvement of computer output, is exemplified 
by <B>the use</B> of a concordance in preparing a survey article
or lecture.  Other opportunities for heavy 
editing are described, chief among them being interpretation and
expansion of computer output in such 
processes as factor analysis.  Applications are described,
such processes as factor analysis.  Applications 
are described, such as the quick, unbiased evaluation
of a large volume of incoming mail or telegrams, 
yielding summary reports not possible for either
humans or computers to produce alone.

CACM April, 1965

Doule, L. B.

CA650419 JB March 7, 1978  3:26 PM

1272	5	1272
1272	5	1272
1272	5	1272


************************

************************
Document:  CACM-3040.html
************************


Synthesizing Constraint Expressions

A constraint network representation is presented
for a combinatorial search problem: finding 
values for a set of variables <B>subject to</B> a set of constraints.
 A theory of consistency levels in such 
networks is formulated, which is related to problems
of backtrack tree search efficiency.  An algorithm 
is developed that can achieve any level of consistency
desired, in order to preprocess the problem for 
subsequent backtrack search, or to function as an alternative
to backtrack search by explicitly determining 
all solutions.

CACM November, 1978

Freuder, E.

Backtrack, combinatorial algorithms, constraint
networks, constraint satisfaction, graph coloring, 
network consistency, relaxation, scene labeling, search

3.63 3.64 5.25 5.30 5.32

CA781111 DH January 22, 1979  3:43 PM

1504	4	3040
3040	4	3040
1145	5	3040
3040	5	3040
3040	5	3040
3040	5	3040


************************

************************
Document:  CACM-2020.html
************************


The Allocation of Computer Resources-Is Pricing the Answer?

The widespread use of complex third generation computing systems has led to a 
much broader concern about the means by which the resources of these systems
are allocated among the user community.  One means that is suggested
more and more frequently is a pricing procedure.  In this
paper the manner in which one would like to allocate computing resources
is considered, and then the extent to which a pricing mechanism fits this mold 
is discussed.  Inasmuch as pricing must serve as a rationing mechanism at 
times, consideration is given <B>to the</B> means by which prices can be adjusted 
flexibly in order to make a dynamic allocation of resources.  Consideration is 
also given to the means by which users can be insulated from the harmful 
effects of frequent price fluctuations.  Although the subject of pricing has
been given a lot of attention recently, a number of misconceptions
persist about its purpose and its operation.  An attempt is made to clarify 
some of these misunderstandings and to highlight the advantages and 
disadvantages and to highlight the advantages and disadvantages of pricing. Two
illustrative pricing systems are also discussed in order to demonstrate the 
applicability of pricing in quite different environments.

CACM August, 1970

Nielsen, N. R.

allocation mechanisms, charging, computer pricing,
costing, flexible pricing, pricing, priority charges,
resource allocation, user motivation

1.3 2.4

CA700801 JB February 10, 1978  4:13 PM

2020	4	2020
1735	5	2020
2020	5	2020
2020	5	2020
2020	5	2020
2479	5	2020
2020	6	2020


************************



The Allocation of Computer Resources-Is Pricing the Answer?

The widespread use of complex third generation computing systems has led to a 
much broader concern about the means by which the resources of these systems
are allocated among the user community.  One means that is suggested
more and more frequently is a pricing procedure.  In this
paper the manner in which one would <B>like to</B> allocate computing resources
is considered, and then the extent to which a pricing mechanism fits this mold 
is discussed.  Inasmuch as pricing must serve as a rationing mechanism at 
times, consideration is given to the means by which prices can be adjusted 
flexibly in order to make a dynamic allocation of resources.  Consideration is 
also given to the means by which users can be insulated from the harmful 
effects of frequent price fluctuations.  Although the subject of pricing has
been given a lot of attention recently, a number of misconceptions
persist about its purpose and its operation.  An attempt is made to clarify 
some of these misunderstandings and to highlight the advantages and 
disadvantages and to highlight the advantages and disadvantages of pricing. Two
illustrative pricing systems are also discussed in order to demonstrate the 
applicability of pricing in quite different environments.

CACM August, 1970

Nielsen, N. R.

allocation mechanisms, charging, computer pricing,
costing, flexible pricing, pricing, priority charges,
resource allocation, user motivation

1.3 2.4

CA700801 JB February 10, 1978  4:13 PM

2020	4	2020
1735	5	2020
2020	5	2020
2020	5	2020
2020	5	2020
2479	5	2020
2020	6	2020


************************



The Allocation of Computer Resources-Is Pricing the Answer?

The widespread use of complex third generation computing systems has led to a 
much broader concern about the means by which the resources of these systems
are allocated among the user community.  One means that is suggested
more and more frequently is a pricing procedure.  In this
paper the manner in which one would like to allocate computing resources
is considered, and then the extent to which a pricing mechanism fits this mold 
is discussed.  Inasmuch as pricing must serve as a rationing mechanism at 
times, consideration is given to the means by which prices can be adjusted 
flexibly in order to make a dynamic allocation of resources.  Consideration is 
also given to the means by which users can be insulated from the harmful 
effects of frequent price fluctuations.  Although <B>the subject</B> of pricing has
been given a lot of attention recently, a number of misconceptions
persist about its purpose and its operation.  An attempt is made to clarify 
some of these misunderstandings and to highlight the advantages and 
disadvantages and to highlight the advantages and disadvantages of pricing. Two
illustrative pricing systems are also discussed in order to demonstrate the 
applicability of pricing in quite different environments.

CACM August, 1970

Nielsen, N. R.

allocation mechanisms, charging, computer pricing,
costing, flexible pricing, pricing, priority charges,
resource allocation, user motivation

1.3 2.4

CA700801 JB February 10, 1978  4:13 PM

2020	4	2020
1735	5	2020
2020	5	2020
2020	5	2020
2020	5	2020
2479	5	2020
2020	6	2020


************************



The Allocation of Computer Resources-Is Pricing the Answer?

The widespread use of complex third generation computing systems has led to a 
much broader concern about the means by which the resources of these systems
are allocated among <B>the use</B>r community.  One means that is suggested
more and more frequently is a pricing procedure.  In this
paper the manner in which one would like to allocate computing resources
is considered, and then the extent to which a pricing mechanism fits this mold 
is discussed.  Inasmuch as pricing must serve as a rationing mechanism at 
times, consideration is given to the means by which prices can be adjusted 
flexibly in order to make a dynamic allocation of resources.  Consideration is 
also given to the means by which users can be insulated from the harmful 
effects of frequent price fluctuations.  Although the subject of pricing has
been given a lot of attention recently, a number of misconceptions
persist about its purpose and its operation.  An attempt is made to clarify 
some of these misunderstandings and to highlight the advantages and 
disadvantages and to highlight the advantages and disadvantages of pricing. Two
illustrative pricing systems are also discussed in order to demonstrate the 
applicability of pricing in quite different environments.

CACM August, 1970

Nielsen, N. R.

allocation mechanisms, charging, computer pricing,
costing, flexible pricing, pricing, priority charges,
resource allocation, user motivation

1.3 2.4

CA700801 JB February 10, 1978  4:13 PM

2020	4	2020
1735	5	2020
2020	5	2020
2020	5	2020
2020	5	2020
2479	5	2020
2020	6	2020


************************



The Allocation of Computer Resources-Is Pricing the Answer?

The widespread <B>use of</B> complex third generation computing systems has led to a 
much broader concern about the means by which the resources of these systems
are allocated among the user community.  One means that is suggested
more and more frequently is a pricing procedure.  In this
paper the manner in which one would like to allocate computing resources
is considered, and then the extent to which a pricing mechanism fits this mold 
is discussed.  Inasmuch as pricing must serve as a rationing mechanism at 
times, consideration is given to the means by which prices can be adjusted 
flexibly in order to make a dynamic allocation of resources.  Consideration is 
also given to the means by which users can be insulated from the harmful 
effects of frequent price fluctuations.  Although the subject of pricing has
been given a lot of attention recently, a number of misconceptions
persist about its purpose and its operation.  An attempt is made to clarify 
some of these misunderstandings and to highlight the advantages and 
disadvantages and to highlight the advantages and disadvantages of pricing. Two
illustrative pricing systems are also discussed in order to demonstrate the 
applicability of pricing in quite different environments.

CACM August, 1970

Nielsen, N. R.

allocation mechanisms, charging, computer pricing,
costing, flexible pricing, pricing, priority charges,
resource allocation, user motivation

1.3 2.4

CA700801 JB February 10, 1978  4:13 PM

2020	4	2020
1735	5	2020
2020	5	2020
2020	5	2020
2020	5	2020
2479	5	2020
2020	6	2020


************************

************************
Document:  CACM-1839.html
************************


Singular Value Decomposition of a Complex
Matrix (Algorithm 358 [F1, 4,5])

CACM October, 1969

Businger, P. A.
Goulub, G. H.

<B>singular value</B>s, matrix decomposition,
least squares solution, pseudoinverse

5.14

CA691007 JB February 15, 1978  3:22 PM

1839	5	1839
1839	5	1839
1839	5	1839


************************

************************
Document:  CACM-2130.html
************************


Automatic Segmentation of Cyclic Program Structures
Based on Connectivity and Processor Timing

Time-shared, multiprogrammed, and overlayed batch systems frequently
require segmentation of computer programs into discrete portions.  
These program portions are transferred between executable and
peripheral storage whenever necessary; segmentation of program
s in a manner that  reduces the frequency of such transfers is the
subject of this paper.  Segmentation techniques proposed by C. V.
Ramamoorthy are <B>subject to</B> limitations that arise when the preferred
segment size is not compatible with the physical restrictions
imposed by the available computing equipment.  A generalization of
Ramamoorthy's suggestions is made in order to allow their application 
when circumstances are other than ideal.

CACM January, 1970

Lowe, T. C.

automatic segmentation, cyclic program structures, loops, paging, 
multiprogramming, loaders, assemblers, compilers, time-sharing, program 
connectivity

4.19 5.24 5.32

CA700101 JB February 14, 1978, 2:20 PM

2130	4	2130
1916	5	2130
2130	5	2130
2130	5	2130
2130	5	2130
2582	5	2130
1751	6	2130
1924	6	2130
2017	6	2130
2130	6	2130


************************



Automatic Segmentation of Cyclic Program Structures
Based on Connectivity and Processor Timing

Time-shared, multiprogrammed, and overlayed batch systems frequently
require segmentation of computer programs into discrete portions.  
These program portions are transferred between executable and
peripheral storage whenever necessary; segmentation of program
s in a manner that  reduces the frequency of such transfers is the
subject of this paper.  Segmentation techniques proposed by C. V.
Ramamoorthy <B>are subject</B> to limitations that arise when the preferred
segment size is not compatible with the physical restrictions
imposed by the available computing equipment.  A generalization of
Ramamoorthy's suggestions is made in order to allow their application 
when circumstances are other than ideal.

CACM January, 1970

Lowe, T. C.

automatic segmentation, cyclic program structures, loops, paging, 
multiprogramming, loaders, assemblers, compilers, time-sharing, program 
connectivity

4.19 5.24 5.32

CA700101 JB February 14, 1978, 2:20 PM

2130	4	2130
1916	5	2130
2130	5	2130
2130	5	2130
2130	5	2130
2582	5	2130
1751	6	2130
1924	6	2130
2017	6	2130
2130	6	2130


************************

************************
Document:  CACM-3090.html
************************


Automated Welfare Client-Tracking and Service
Integration: The Political Economy of Computing

The impacts of an automated client-tracking
system <B>on the</B> clients, caseworkers, administrators, 
and operations of the welfare agencies that use it are
reported.  The major impact of this system was 
to enhance the administrative  attractiveness of the
using agencies in the eyes of funders rather than 
to increase their internal administrative efficiency. 
This impact is a joint product of both the technical 
features of the computer-based system and of the organizational
demands placed upon different agencies, 
administrators, and caseworkers.  It illustrates the
way "successful" automated information systems fit 
the political economies of the groups that use them.    

CACM June, 1978

Kling, R.

Social impacts of computing, organizational impacts
of computing, management information systems, 
sociology of computing, information systems and
service integration, urban information systems

2.11 3.53

CA780607 DH February 12, 1979  11:01 AM

3090	5	3090
3090	5	3090
3090	5	3090
3117	5	3090
3090	6	3090


************************

************************
Document:  CACM-0973.html
************************


Estimation of Heart Parameters Using Skin Potential Measurements

A fundamental problem of vector cardiography
is the estimation of the state of the heart on 
the basis of skin potential measurements.  A mathematical
model relating ventricular dipoles to surface 
potentials is sketched.  Then it is shown that the inverse
problem-that of determining electrical heart 
parameters <B>on the</B> basis of skin potential measurements-may
be viewed as a nonlinear multipoint boundary 
value problem.  A feasible solution, employing quasilinearization
and high-speed digital computers, is 
given.

CACM November, 1964

Bellman, R.
Collier, C.
Kagiwada, H.
Kalaba, R.
Selvester, R.

CA641110 JB March 9, 1978  4:00 PM

973	5	973
973	5	973
973	5	973
1278	5	973
973	6	973
1028	6	973
1029	6	973


************************

************************
Document:  CACM-1423.html
************************


A Simple Algorithm for Computing the Generalized Inverse of a Matrix

The generalized inverse of a matrix is important
in analysis because it provides an extension 
of the concept of an inverse which applies to all matrices.
 It also has many applications in numerical 
analysis, but it is not widely used because the existing
algorithms are fairly complicated and require 
considerable storage space.  A simple extension has
been found <B>to the</B> conventional orthogonalization 
method for inverting non-singular matrices, which gives
the generalized inverse with little extra effort 
and with no additional storage requirements.  The algorithm
gives the generalized inverse for any m by 
n matrix A, including the special case when m+n and A
is non-singular and the case when m>n and rank(A) 
= n.  In the first case the algorithm gives the ordinary
inverse of A.  In the second case the algorithm 
yields the ordinary least squares transformation matrix
INV(A'A)A' and has the advantage of avoiding 
the loss of significance which results in forming the product A'A explicitly.

CACM May, 1966

Rust, R.
Burrus, W. R.
Schneeberger, C.

CA660514 JB March 3, 1978  9:22 AM

1423	5	1423
1423	5	1423
1423	5	1423


************************

************************
Document:  CACM-1796.html
************************


Index by Subject to Algorithms, 1969

CACM December, 1969

This 1969 index is the first supplement <B>to the</B>
Index by Subject to Algorithms, 1960 1968 (Comm. 
ACM 11, 12 (Dec. 1968), 827 830).

CA691216 JB February 15, 1978  2:03 PM

1796	5	1796
1796	5	1796
1796	5	1796


************************

************************
Document:  CACM-3041.html
************************


Median Split Trees: A Fast Lookup Technique for Frequently Occuring Keys

Split trees are a new technique for searching sets
of keys with highly skewed frequency distributions. 
 A split tree is a binary search tree each node of which
contains two key values-a node value which is 
a maximally frequent key in that subtree, and a split
value which partitions the remaining keys (with 
respect <B>to the</B>ir lexical ordering) between the left and
right subtrees.  A median split tree (MST) uses 
the lexical median of a node's descendents as its split
value to force the search tree to be perfectly 
balanced, achieving both a space efficient representation
of the tree and high search speed.  Unlike 
frequency ordered binary search trees, the cost of a
successful search of an MST is log n bounded and 
very stable around minimal values.  Further, an MST
can be built for a given key ordering and set of 
frequencies in time n log n, as opposed to n2 for an
optimum binary search tree.  A discussion of the 
application of MST's to dictionary lookup for English is
presented, and the performance obtained is contrasted 
with that of other techniques.

CACM November, 1978

Sheil, B.

Tree search, dictionary lookup, binary search, heaps,
balanced trees, Zipf's Law, information retrieval

3.74 5.25 5.39

CA781110 DH January 25, 1979  9:49 AM

3041	4	3041
3041	4	3041
3126	4	3041
3176	4	3041
2846	5	3041
2905	5	3041
3041	5	3041
3041	5	3041
3041	5	3041


************************

************************
Document:  CACM-1846.html
************************


On Simulating Networks of Parallel Processes
in Which Simultaneous Events May Occur

Some of the problems of simulating discrete
event systems, particularly computer systems, on 
a conventional digital computer are dealt with.  The
systems are assumed to be described as a network 
of interconnected sequential processes.  Briefly reviewed
are the common techniques used to handle such 
simulations when simultaneous events do not occur, can
be ignored, or can be handled by simple priority 
rules.  Following this, the problem of dealing with simultaneous
events in separate processes is introduced. 
 An abstraction of this problem is developed which admits
solution for a majority of commonly encountered
problems.  The technique will either find a method of
simulating the parallel events or report that none 
can be found.  In some of the latter cases it is shown
to be possible <B>to find</B> a solution by extending 
the information available to the solution technique, but
in many cases the technique becomes computationally 
unfeasible when the additional information is provided.

CACM September, 1969

Parnas, D. L.

simulation, parallel processes, simultaneous events,
picture processing, computer system simulation

3.19 3.24 4.24 5.9 6.9

CA690910 JB February 15, 1978  4:21 PM

1541	4	1846
1805	4	1846
1846	4	1846
1846	4	1846
1846	4	1846
1846	4	1846
1846	4	1846
1892	4	1846
2060	4	1846
2188	4	1846
2218	4	1846
2218	4	1846
2317	4	1846
2630	4	1846
2650	4	1846
3112	4	1846
1380	5	1846
1424	5	1846
1484	5	1846
1572	5	1846
1846	5	1846
1846	5	1846
1846	5	1846
576	5	1846
3064	5	1846
1846	6	1846
1939	6	1846
2742	6	1846
2767	6	1846
2936	6	1846


************************



On Simulating Networks of Parallel Processes
in Which Simultaneous Events May Occur

Some of the problems of simulating discrete
event systems, particularly computer systems, on 
a conventional digital computer are dealt with.  The
systems are assumed to be described as a network 
of interconnected sequential processes.  Briefly reviewed
are the common techniques used to handle such 
simulations when simultaneous events do not occur, can
be ignored, or can be handled by simple priority 
rules.  Following this, the problem of dealing with simultaneous
events in separate processes is introduced. 
 An abstraction of this problem is developed which admits
solution for a majority of commonly encountered
problems.  The technique will either find a method of
simulating the parallel events or report that none 
can be found.  In some of the latter cases it is shown
to be possible to find a solution by extending 
the information available <B>to the</B> solution technique, but
in many cases the technique becomes computationally 
unfeasible when the additional information is provided.

CACM September, 1969

Parnas, D. L.

simulation, parallel processes, simultaneous events,
picture processing, computer system simulation

3.19 3.24 4.24 5.9 6.9

CA690910 JB February 15, 1978  4:21 PM

1541	4	1846
1805	4	1846
1846	4	1846
1846	4	1846
1846	4	1846
1846	4	1846
1846	4	1846
1892	4	1846
2060	4	1846
2188	4	1846
2218	4	1846
2218	4	1846
2317	4	1846
2630	4	1846
2650	4	1846
3112	4	1846
1380	5	1846
1424	5	1846
1484	5	1846
1572	5	1846
1846	5	1846
1846	5	1846
1846	5	1846
576	5	1846
3064	5	1846
1846	6	1846
1939	6	1846
2742	6	1846
2767	6	1846
2936	6	1846


************************

************************
Document:  CACM-2188.html
************************


An Approach to the Optimum Design of Computer Graphics Systems

Display system designers are faced with the
difficult task of selecting major subsystems in 
an intelligent way.  Each subsystem is chosen from large
numbers of alternatives; the selection is based 
on considerations such as system response time, system
cost, and the distribution of data storage and 
processing between the graphics processor and its supporting
data processing system.  The work reported 
here develops an objective, quantitative design procedure
and helps give a better understanding of now 
to  configure display systems.  This is accomplished by
means of a mathematical model of a computer driven 
graphics system.  The parameters of the model are functions
of the capabilities of the graphics hardware 
and of the computational requirements of the graphics application.
 The model can be analyzed using numerical 
queueing analysis or simulation to obtain an average
response time prediction.  By combining the model 
with an optimization, the best graphics system configuration,
<B>subject to</B> a cost constraint, is found 
for several applications.  The optimum configurations
are in turn used to find general display system 
design guidelines.

CACM June, 1971

Foley, J. D.

design guidelines, graphic display systems, mathematical
model, optimum system design, queueing 
model

3.8 6.22 6.35

CA710602 JB February 3, 1978  10:26 AM

1805	4	2188
1846	4	2188
1892	4	2188
2188	4	2188
2218	4	2188
2317	4	2188
1572	5	2188
2188	5	2188
2188	5	2188
2188	5	2188
2319	5	2188
1408	6	2188
1719	6	2188
1749	6	2188
1751	6	2188
2016	6	2188
2017	6	2188
2080	6	2188
2188	6	2188
2203	6	2188
2204	6	2188


************************



An Approach <B>to the</B> Optimum Design of Computer Graphics Systems

Display system designers are faced with the
difficult task of selecting major subsystems in 
an intelligent way.  Each subsystem is chosen from large
numbers of alternatives; the selection is based 
on considerations such as system response time, system
cost, and the distribution of data storage and 
processing between the graphics processor and its supporting
data processing system.  The work reported 
here develops an objective, quantitative design procedure
and helps give a better understanding of now 
to  configure display systems.  This is accomplished by
means of a mathematical model of a computer driven 
graphics system.  The parameters of the model are functions
of the capabilities of the graphics hardware 
and of the computational requirements of the graphics application.
 The model can be analyzed using numerical 
queueing analysis or simulation to obtain an average
response time prediction.  By combining the model 
with an optimization, the best graphics system configuration,
subject to a cost constraint, is found 
for several applications.  The optimum configurations
are in turn used to find general display system 
design guidelines.

CACM June, 1971

Foley, J. D.

design guidelines, graphic display systems, mathematical
model, optimum system design, queueing 
model

3.8 6.22 6.35

CA710602 JB February 3, 1978  10:26 AM

1805	4	2188
1846	4	2188
1892	4	2188
2188	4	2188
2218	4	2188
2317	4	2188
1572	5	2188
2188	5	2188
2188	5	2188
2188	5	2188
2319	5	2188
1408	6	2188
1719	6	2188
1749	6	2188
1751	6	2188
2016	6	2188
2017	6	2188
2080	6	2188
2188	6	2188
2203	6	2188
2204	6	2188


************************



An Approach to the Optimum Design of Computer Graphics Systems

Display system designers are faced with the
difficult task of selecting major subsystems in 
an intelligent way.  Each subsystem is chosen from large
numbers of alternatives; the selection is based 
on considerations such as system response time, system
cost, and the distribution of data storage and 
processing between the graphics processor and its supporting
data processing system.  The work reported 
here develops an objective, quantitative design procedure
and helps give a better understanding of now 
to  configure display systems.  This is accomplished by
means of a mathematical model of a computer driven 
graphics system.  The parameters of the model are functions
of the capabilities of the graphics hardware 
and of the computational requirements of the graphics application.
 The model can be analyzed using numerical 
queueing analysis or simulation to obtain an average
response time prediction.  By combining the model 
with an optimization, the best graphics system configuration,
subject to a cost constraint, is found 
for several applications.  The optimum configurations
are in turn used <B>to find</B> general display system 
design guidelines.

CACM June, 1971

Foley, J. D.

design guidelines, graphic display systems, mathematical
model, optimum system design, queueing 
model

3.8 6.22 6.35

CA710602 JB February 3, 1978  10:26 AM

1805	4	2188
1846	4	2188
1892	4	2188
2188	4	2188
2218	4	2188
2317	4	2188
1572	5	2188
2188	5	2188
2188	5	2188
2188	5	2188
2319	5	2188
1408	6	2188
1719	6	2188
1749	6	2188
1751	6	2188
2016	6	2188
2017	6	2188
2080	6	2188
2188	6	2188
2203	6	2188
2204	6	2188


************************

************************
Document:  CACM-2142.html
************************


Reconstruction of Pictures from Their Projections

There are situations in the natural sciences
and medicine (e.g. in electron microscopy and 
X-ray photography) in which it is desirable to estimate the
gray levels of a digital picture at the individual 
points from the sums of the gray levels along straight
lines (projections) at a few angles.  Usually, 
in such situations, the picture is far from determined
and the problem is <B>to find</B> the "most representative" 
picture.  Three algorithms are described (all using
Monte Carlo methods) which were designed to solve 
this problem.  The algorithms are applicable in a large
and varied number of fields.  The most important 
uses may be the reconstruction of possibly asymmetric particles
from electron micrographs and three-dimensional 
X-ray analysis.

CACM December, 1971

Gordon,R.
Herman, G. T.

approximation, biomedical image processing, efficient
encoding, image processing, linear programming, 
mathematical programming, Monte Carlo techniques, optimization,
picture compression, picture description, 
picture processing, stereology, X-ray analysis

3.12 3.13 3.15 3.17 3.63 5.41 5.6

CA711201 JB February 2, 1978  10:32 AM

2142	4	2142
2142	4	2142
2529	4	2142
1929	5	2142
2142	5	2142
2142	5	2142
2142	5	2142
2231	5	2142


************************

************************
Document:  CACM-2211.html
************************


Scanned-Display Computer Graphics

A television-like scanned-display system has
been successfully implemented on a Honeywell DDP-224 
computer installation.  The scanned image is stored
in the core memory of the computer, and software 
scan conversion is used to convert the rectangular coordinates
of a point <B>to the</B> appropriate word and 
bit in an output display array in core storage.  Results
thus far indicate that flicker-free displays 
of large amounts of data are possible with reasonably
fast graphical interaction.  A scanned image of 
size 240 X 254 points is displayed at a 30 frame-per-second rate.

CACM March, 1971

Noll, A. M.

computer graphics, scanned-display, scan conversion, raster displays

4.41 6.35

CA710301 JB February 3, 1978  4:53 PM

1891	4	2211
2211	4	2211
2211	4	2211
2421	4	2211
2674	4	2211
2687	4	2211
1554	5	2211
1741	5	2211
2211	5	2211
2211	5	2211
2211	5	2211
2421	5	2211
1741	6	2211
2211	6	2211


************************

************************
Document:  CACM-1381.html
************************


Impact of Computers <B>on the</B> Undergraduate Mathematics Curriculum 

The use of computers to permit the widespread application
of mathematical ideas requiring computation 
in science and technology is extremely significant for
the understanding of our current society.  Student 
interest in this development is intense and if properly
utilized should yield a much better understanding 
of mathematical concepts as well as the ideas of programming
and logical structure which have been introduced 
into many fields by the use of computers.  The present
paper suggests that that portion of the undergraduate 
mathematical curriculum which is preparation for the use
of mathematics by persons who are not professional 
mathematicians be modified to include the extensions
and clarifications which are possible because of 
computers.  An early introduction to programming is
desirable to permit a continuing use of automatic 
computation to illustrate and clarify mathematical concepts.
 Following the calculus equation stage an 
intensive introduction to numerical analysis should
be added to the current curriculum.  In addition 
to providing competence in the mostly used computing
techniques, it would permit a more sophisticated 
utilization of the advanced mathematical ideas associated
with complex variables and transform theories.

CACM September, 1966

Murray, F. J.

CA660905 JB March 2, 1978  6:31 PM  

1381	5	1381
1381	5	1381
1381	5	1381


************************



Impact of Computers on the Undergraduate Mathematics Curriculum 

The use of computers to permit the widespread application
of mathematical ideas requiring computation 
in science and technology is extremely significant for
the understanding of our current society.  Student 
interest in this development is intense and if properly
utilized should yield a much better understanding 
of mathematical concepts as well as the ideas of programming
and logical structure which have been introduced 
into many fields by <B>the use</B> of computers.  The present
paper suggests that that portion of the undergraduate 
mathematical curriculum which is preparation for the use
of mathematics by persons who are not professional 
mathematicians be modified to include the extensions
and clarifications which are possible because of 
computers.  An early introduction to programming is
desirable to permit a continuing use of automatic 
computation to illustrate and clarify mathematical concepts.
 Following the calculus equation stage an 
intensive introduction to numerical analysis should
be added to the current curriculum.  In addition 
to providing competence in the mostly used computing
techniques, it would permit a more sophisticated 
utilization of the advanced mathematical ideas associated
with complex variables and transform theories.

CACM September, 1966

Murray, F. J.

CA660905 JB March 2, 1978  6:31 PM  

1381	5	1381
1381	5	1381
1381	5	1381


************************



Impact of Computers on the Undergraduate Mathematics Curriculum 

The use of computers to permit the widespread application
of mathematical ideas requiring computation 
in science and technology is extremely significant for
the understanding of our current society.  Student 
interest in this development is intense and if properly
utilized should yield a much better understanding 
of mathematical concepts as well as the ideas of programming
and logical structure which have been introduced 
into many fields by the use of computers.  The present
paper suggests that that portion of the undergraduate 
mathematical curriculum which is preparation for the use
of mathematics by persons who are not professional 
mathematicians be modified to include the extensions
and clarifications which are possible because of 
computers.  An early introduction to programming is
desirable to permit a continuing use of automatic 
computation to illustrate and clarify mathematical concepts.
 Following the calculus equation stage an 
intensive introduction to numerical analysis should
be added <B>to the</B> current curriculum.  In addition 
to providing competence in the mostly used computing
techniques, it would permit a more sophisticated 
utilization of the advanced mathematical ideas associated
with complex variables and transform theories.

CACM September, 1966

Murray, F. J.

CA660905 JB March 2, 1978  6:31 PM  

1381	5	1381
1381	5	1381
1381	5	1381


************************



Impact of Computers on the Undergraduate Mathematics Curriculum 

The <B>use of</B> computers to permit the widespread application
of mathematical ideas requiring computation 
in science and technology is extremely significant for
the understanding of our current society.  Student 
interest in this development is intense and if properly
utilized should yield a much better understanding 
of mathematical concepts as well as the ideas of programming
and logical structure which have been introduced 
into many fields by the use of computers.  The present
paper suggests that that portion of the undergraduate 
mathematical curriculum which is preparation for the use
of mathematics by persons who are not professional 
mathematicians be modified to include the extensions
and clarifications which are possible because of 
computers.  An early introduction to programming is
desirable to permit a continuing use of automatic 
computation to illustrate and clarify mathematical concepts.
 Following the calculus equation stage an 
intensive introduction to numerical analysis should
be added to the current curriculum.  In addition 
to providing competence in the mostly used computing
techniques, it would permit a more sophisticated 
utilization of the advanced mathematical ideas associated
with complex variables and transform theories.

CACM September, 1966

Murray, F. J.

CA660905 JB March 2, 1978  6:31 PM  

1381	5	1381
1381	5	1381
1381	5	1381


************************

************************
Document:  CACM-2231.html
************************


The Reconstruction of Binary Patterns from Their Projections

Given the horizontal and vertical projections
of a finite binary pattern f, can we construct 
the original pattern f?  In this paper we give a characterization
of patterns <B>that are</B> reconstructable 
from their projection.  Three algorithms are developed
to reconstruct both unambiguous and ambiguous 
patterns.  It is shown that an unambiguous pattern can
be perfectly reconstructed in time m X n and that 
a pattern similar to an ambiguous pattern can also be constructed
in time m X n, where m, n are the dimensions 
of the pattern frame.

CACM January, 1971

Chang, S.

pattern reconstruction, image reconstruction, data
compression, pattern recognition, integral geometry

3.63 5.30

CA710103 JB February 8, 1978  12:33 PM

2142	5	2231
2231	5	2231
2231	5	2231
2231	5	2231
2529	5	2231
1929	6	2231
2231	6	2231
2231	6	2231


************************



The Reconstruction of Binary Patterns from Their Projections

Given the horizontal and vertical projections
of a finite binary pattern f, can we construct 
<B>the original</B> pattern f?  In this paper we give a characterization
of patterns that are reconstructable 
from their projection.  Three algorithms are developed
to reconstruct both unambiguous and ambiguous 
patterns.  It is shown that an unambiguous pattern can
be perfectly reconstructed in time m X n and that 
a pattern similar to an ambiguous pattern can also be constructed
in time m X n, where m, n are the dimensions 
of the pattern frame.

CACM January, 1971

Chang, S.

pattern reconstruction, image reconstruction, data
compression, pattern recognition, integral geometry

3.63 5.30

CA710103 JB February 8, 1978  12:33 PM

2142	5	2231
2231	5	2231
2231	5	2231
2231	5	2231
2529	5	2231
1929	6	2231
2231	6	2231
2231	6	2231


************************

************************
Document:  CACM-1261.html
************************


Modeling and Simulation of Digital Networks

The simulation of digital networks on a digital
computer provides the engineer with an effective 
means of analyzing time-quantized logical behavior.  The
digital network is modeled as a set of time-dependent 
or time-independent Boolean transformations; each transformation
<B>describing the</B> input-output relationship 
of a model element comprising the network mode.  The
simplicity of utilizing the FORTRAN IV Programming 
System as a digital Network Simulator is discussed an
illustrated.  This simplicity is derived from a 
common modeling technique applicable to combinational
and sequential digital networks and a systematic 
programming approach.

CACM May, 1965

Larsen, R. P.
Mano, M. M.

CA650510 JB March 7, 1978  1:15 PM

1261	4	1261
1939	4	1261
1030	5	1261
1261	5	1261
1261	5	1261
1261	5	1261


************************

************************
Document:  CACM-3013.html
************************


Some New Methods of Detecting Step Edges in Digital Pictures

This note describes two operators that respond
to step edges, but not to ramps.  The first 
is similar to the digital Laplacian, but uses the max, rather
than the sum, of the x and y second differences. 
 The second uses the difference between the mean and
median gray levels in a neighborhood.  The outputs 
obtained from these operators applied to a set of test
pictures are compared with each other and with 
the standard digital Laplacian and gradient.  A third
operator, which uses the distance between the center 
and centroid of a neighborhood as an edge value, is also
briefly considered; it turns out to be equivalent 
to one of the standard digital <B>approximations to</B> the gradient.

CACM February,1978

Schachter, B.
Rosenfeld, A.

image processing, pattern recognition, edge detection

3.63

CA780210 JB March 28, 1978  1:56 PM

3013	5	3013
3013	5	3013
3013	5	3013


************************



Some New Methods of Detecting Step Edges in Digital Pictures

This note describes two operators that respond
to step edges, but not to ramps.  The first 
is similar <B>to the</B> digital Laplacian, but uses the max, rather
than the sum, of the x and y second differences. 
 The second uses the difference between the mean and
median gray levels in a neighborhood.  The outputs 
obtained from these operators applied to a set of test
pictures are compared with each other and with 
the standard digital Laplacian and gradient.  A third
operator, which uses the distance between the center 
and centroid of a neighborhood as an edge value, is also
briefly considered; it turns out to be equivalent 
to one of the standard digital approximations to the gradient.

CACM February,1978

Schachter, B.
Rosenfeld, A.

image processing, pattern recognition, edge detection

3.63

CA780210 JB March 28, 1978  1:56 PM

3013	5	3013
3013	5	3013
3013	5	3013


************************

************************
Document:  CACM-1415.html
************************


Automatic Derivation of Microsentences

The decomposition of long complex English sentences
into shorter kernel-like constituent sentences 
(microsentences)has often been suggested as an avenue
toward conducting automatic retrieval of natural 
language messages.  To explore the prospects of such
a step, the authors attempted in 1963 to prepare 
a general program for deriving microsentences from longer
sentences that had been syntactically analyzed 
by the Harvard Multipath Analysis Program.  The basic
idea was to extract <B>the subject</B>, verb and object 
(if any) of each clause and to reassemble these materials
into a grammatical microsentence.  A program 
is described in this paper, which was designed to operate
on the tree structure output of the analyzer, 
and the microsentences that were produced are exhibited.
 The authors conclude that while microsentences 
of the quality achieved do not open up immediate prospects
for improving the performance of automatic 
message retrieval systems, they may have practical
value in man-machine systems using human monitors 
to select the preferred syntactic interpretation of a sentence.

CACM June, 1966

Carmody, B. T
Jones Jr., P. E.

CA660606 JB March 3, 1978  8:47 AM

1415	5	1415
1415	5	1415
1415	5	1415


************************



Automatic Derivation of Microsentences

The decomposition of long complex English sentences
into shorter kernel-like constituent sentences 
(microsentences)has often been suggested as an avenue
toward conducting automatic retrieval of natural 
language messages.  To explore the prospects of such
a step, the authors attempted in 1963 to prepare 
a general program for deriving microsentences from longer
sentences that had been syntactically analyzed 
by the Harvard Multipath Analysis Program.  The basic
idea was to extract the subject, verb and object 
(if any) of each clause and to reassemble these materials
into a grammatical microsentence.  A program 
is described in this paper, which was designed to operate
<B>on the</B> tree structure output of the analyzer, 
and the microsentences that were produced are exhibited.
 The authors conclude that while microsentences 
of the quality achieved do not open up immediate prospects
for improving the performance of automatic 
message retrieval systems, they may have practical
value in man-machine systems using human monitors 
to select the preferred syntactic interpretation of a sentence.

CACM June, 1966

Carmody, B. T
Jones Jr., P. E.

CA660606 JB March 3, 1978  8:47 AM

1415	5	1415
1415	5	1415
1415	5	1415


************************

************************
Document:  CACM-0595.html
************************


Guides to Teaching COBOL

The teaching of COBOL can be divided into
three main subject areas.  They are the syntax of 
COBOL, <B>the use</B> of such syntax in solving any given problem,
and programming concepts.  It is generally 
accepted that some knowledge of the hardware and computer
logic must be possessed by the programmer. 
 The teaching problem arises in determining how thoroughly
a student must know the hardware and logic 
for that computer for which he will write COBOL programs.
 Unfortunately, historical data concerning 
students' programming proficiency is almost non-existent
and, at best, difficult to measure.  How then 
might we approach solving this problem?

CACM May, 1962

Greene, I.

CA620510 JB March 20, 1978  1:44 PM

595	5	595
595	5	595
595	5	595


************************



Guides to Teaching COBOL

The teaching of COBOL can be divided into
three main subject areas.  They are the syntax of 
COBOL, the <B>use of</B> such syntax in solving any given problem,
and programming concepts.  It is generally 
accepted that some knowledge of the hardware and computer
logic must be possessed by the programmer. 
 The teaching problem arises in determining how thoroughly
a student must know the hardware and logic 
for that computer for which he will write COBOL programs.
 Unfortunately, historical data concerning 
students' programming proficiency is almost non-existent
and, at best, difficult to measure.  How then 
might we approach solving this problem?

CACM May, 1962

Greene, I.

CA620510 JB March 20, 1978  1:44 PM

595	5	595
595	5	595
595	5	595


************************

************************
Document:  CACM-2174.html
************************


The Stable Marriage Problem

The original work of Gale and Shapley on an assignment
method using the stable marriage criterion 
has been extended <B>to find</B> all the stable marriage assignments.
 The algorithm derived for finding all 
the stable marriage assignments is proved to satisfy
all the conditions of the problem.  Algorithm 411 
applies to this paper.

CACM July, 1971

McVitie, D. G.
Wilson,L. B.

assignment problems, assignment procedures, combinatorics,
discrete mathematics, operational research, 
stable marriage problem, university entrance

5.30

CA710708 JB February 2, 1978  4:40 PM

2174	4	2174
2173	5	2174
2174	5	2174
2174	5	2174
2174	5	2174


************************

************************
Document:  CACM-2054.html
************************


On the Feasibility of Voice Input to
an On-line Computer Processing System

An on-line digital computer processing system is considered in which an 
ordinary telephone is the complete terminal device, input to the computer 
being provided as a sequence of spoken words, and output to <B>the use</B>r being 
audio responses from the machine.  The feasibility of implementing such a 
system with a FORTRAN-like algebraic compiler as the object processor is 
considered.  Details of a specific word recognition program are given.  This 
technique depends on three simplifying restrictions, namely, a "small"
vocabulary set, "known" speakers, and a "moment of silence"
between each input word.  Experimental results are presented giving
error rates for different experimental conditions as well as the machine 
resources required to accommodate several users at a time. The results show 
that at this time it is both economically and logically feasible to handle at 
least 40 users at a time with an IBM 360/65 computer.

CACM June, 1970

Elder, H. A.

speech recognition, word recognition, pattern-matching, pattern
recognition, time-sharing, remote access, voice input, speech input,
telephone input/output, acoustic signal, spoken-word input, talking to 
computers, man-machine interaction

3.63 3.81 4.32 4.41 6.35

CA700601 JB February 13, 1978  12:12 PM

2054	4	2054
1544	5	2054
2054	5	2054
2054	5	2054
2054	5	2054


************************



On the Feasibility of Voice Input to
an On-line Computer Processing System

An on-line digital computer processing system is considered in which an 
ordinary telephone is the complete terminal device, input <B>to the</B> computer 
being provided as a sequence of spoken words, and output to the user being 
audio responses from the machine.  The feasibility of implementing such a 
system with a FORTRAN-like algebraic compiler as the object processor is 
considered.  Details of a specific word recognition program are given.  This 
technique depends on three simplifying restrictions, namely, a "small"
vocabulary set, "known" speakers, and a "moment of silence"
between each input word.  Experimental results are presented giving
error rates for different experimental conditions as well as the machine 
resources required to accommodate several users at a time. The results show 
that at this time it is both economically and logically feasible to handle at 
least 40 users at a time with an IBM 360/65 computer.

CACM June, 1970

Elder, H. A.

speech recognition, word recognition, pattern-matching, pattern
recognition, time-sharing, remote access, voice input, speech input,
telephone input/output, acoustic signal, spoken-word input, talking to 
computers, man-machine interaction

3.63 3.81 4.32 4.41 6.35

CA700601 JB February 13, 1978  12:12 PM

2054	4	2054
1544	5	2054
2054	5	2054
2054	5	2054
2054	5	2054


************************

************************
Document:  CACM-2051.html
************************


A PL/I Program to Assist the Comparative Linguist

A practical PL/I program is described which
can assist comparative linguists to determine
the regular sound correspondences between genetically related languages.
The investigator must arrange data for input by aligning pairs
of suspected cognates.  The program tabulates the correspondences,
and uses list processing techniques to sort and count them.
Each pair of words is then assigned a relative value that is a function
of the total frequency in the data of each correspondence found
in that pair of words.  The output is a list of all correspondence
types with their frequency of occurrence in the data, and a
separate listing of each correspondence with all word-pairs showing
that correspondence (unless their relative value is below an arbitrarily 
chosen cutoff point).  The article explains <B>the use</B>fulness,
as well as the limitations, of the programs, and illustrates its
use with a small portion of hypothetical data.

CACM June, 1970

Frantz, D. G.

comparative linguistics, natural
language processing, comparative method, historical linguistics, diachronic
linguistics, genetic relationship, sound change, sound
correspondence, regular correspondence, list processing

3.42

CA700604 JB February 13, 1978  11:51 AM

2051	5	2051
2051	5	2051
2051	5	2051


************************

************************
Document:  CACM-3198.html
************************


   Microprogramming, Emulators and Programming Languages

  The problem we have been concerned with is that of converting language to
action - or intellectual energy to mechanical energy. The medium that we use 
for this purpose is language and therefore we are preoccupied with <B>the subject</B>
of language. In the areas of language investigation we have concentrated first 
on formalizing syntax and then on semantics.

CACM March, 1966

Greem, J.

CA660318 ES March 17, 1982 10:10 AM

1542	5	3198
3198	5	3198
3198	5	3198
3198	5	3198
1491	6	3198
3198	6	3198


************************

************************
Document:  CACM-2721.html
************************


The Digital Simulation of River Plankton Population Dynamics

This paper deals with the development of a
mathematical model for and the digital simulation 
in Fortran IV of phytoplankton and zooplankton population
densities in a river using previously developed 
rate expressions.  In order to study the relationships
between the ecological mechanisms involved, the 
simulation parameters were varied illustrating the
response of the ecosystem to different conditions, 
including those corresponding to certain types of chemical
and thermal pollution.  As an investigation 
of the accuracy of the simulation methods, a simulation
of the actual population dynamics of Asterionella 
in the Columbia River was made based on approximations
of conditions in that river. Although not totally 
accurate, the simulation was found to predict the general
annual pattern of plankton growth fairly well 
and, specifically, revealed the importance of the annual
velocity cycle in determining such patterns. 
 In addition, the study demonstrates <B>the use</B>fulness of
digital simulations in the examinations of certain 
aquatic ecosystems, as well as in environmental
planning involving such examinations.

CACM September, 1975

Claudson, R. M.

digital simulation, mathematical modeling, plankton
population dynamics, phytoplankton, zooplankton, 
river ecosystems, ecological mechanisms, environmental simulation,
modeling ecosystems, pollution, environmental 
impact, environmental planning

3.12 3.19

CA750903 JB January 6, 1978  2:55 PM

2721	5	2721
2721	5	2721
2721	5	2721


************************

************************
Document:  CACM-3156.html
************************


Computing Connected Components on Parallel Computers

We present a parallel algorithm which uses n2 processors <B>to find</B> the connected
components of an undirected graph with n vertices in time O(log2n).  An
O(log2n) time bound also can be achieved using only n$n/$log2n)) processors.
The algorithm can be used to find the transitive closure
of a symmetric Boolean matrix.  We assume that the processors have
access to a common memory.  Simultaneous access to the same location
is permitted for fetch instructions but not for store instructions.

CACM August, 1979

Hirschberg, D.
Chandra, A.
Sarwate, D.

Graph theory, parallel processing, algorithms,
transitive closure, connected component

5.25 5.32 6.22

CA790802 DB January 4, 1980  12:18 PM

3075	4	3156
3156	4	3156
3156	4	3156
3156	4	3156
2289	5	3156
2973	5	3156
3075	5	3156
3156	5	3156
3156	5	3156
3156	5	3156


************************



Computing Connected Components on Parallel Computers

We present a parallel algorithm which uses n2 processors to find the connected
components of an undirected graph with n vertices in time O(log2n).  An
O(log2n) time bound also can be achieved using only n$n/$log2n)) processors.
The algorithm can be used to find the transitive closure
of a symmetric Boolean matrix.  We assume that the processors have
access to a common memory.  Simultaneous access <B>to the</B> same location
is permitted for fetch instructions but not for store instructions.

CACM August, 1979

Hirschberg, D.
Chandra, A.
Sarwate, D.

Graph theory, parallel processing, algorithms,
transitive closure, connected component

5.25 5.32 6.22

CA790802 DB January 4, 1980  12:18 PM

3075	4	3156
3156	4	3156
3156	4	3156
3156	4	3156
2289	5	3156
2973	5	3156
3075	5	3156
3156	5	3156
3156	5	3156
3156	5	3156


************************

************************
Document:  CACM-1066.html
************************


Growing Applications of Linear Programming

Use of linear programming models has grown so
extensively in recent years that the whole concept 
for organizing a computer code has undergone a radical
change.  It no longer is adequate merely to reduce 
a mathematical algorithm (i.e. the simplex method) to
a computer code.  An advanced code must cope with 
such a variety of situations that the respective computer
subprograms must be organized into an integrated 
system.  Emphasis in this paper is devoted <B>to the</B> underlying
principles upon which future linear programming 
systems must be based.  These viewpoints are influenced
by the new demands that applications within the 
petroleum industry are placing on such systems.  Some
of the components of such a system are: translation 
of problem statement in terms of basic data to linear
programming matrix coefficients, data transmission 
for direct computer entry, data file at the computer center,
data processing and editing prior to solving 
the simplex algorithm, an efficient and reliable code
for solving the above-mentioned algorithm, and 
flexible means for summarizing the results.

CACM June, 1964

Aronofsky, J. S.

CA640601 JB March 9, 1978  9:55 PM

1066	5	1066
1066	5	1066
1066	5	1066


************************

************************
Document:  CACM-2065.html
************************


A Programming System for the On-line Analysis of Biomedical Images

A preliminary description of the software for a computer-display
system is given with special emphasis <B>on the</B>  man-machine interaction. This 
system is intended for a wide variety of biomedical applications.
As an example, the methods are applied to the karyotyping of chromosomes.  The 
system is separated into four programming tasks: picture transformations, file 
maintenance, picture structuring, and display management.  Picture structuring
is considered as the vehicle for man-machine communication.
A prototype data format for pictures, called a picture-form, is developed.
Structure operators are defined which manipulate picture-forms to produce 
new pictures-forms.  Many of the ideas are taken from the symbolic mathematical 
laboratory at MIT conceived by Marvin Minsky.

CACM May, 1970

Hodes, L.

image processing, biomedical image processing, on-line image processing,
semiautomatic image processing, data structure, structure operators,
picture processing, biomedical picture processing, on-line picture
processing, semiautomatic picture processing, semiautomatic
karyotyping, karyotyping, list processing picture processing

3.12 3.34 3.63 4.39 6.29

CA700501 JB February 13, 1978  2:27 PM

2065	5	2065
2065	5	2065
2065	5	2065


************************



A Programming System for the On-line Analysis of Biomedical Images

A preliminary description of the software for a computer-display
system is given with special emphasis on the  man-machine interaction. This 
system is intended for a wide variety of biomedical applications.
As an example, the methods are applied <B>to the</B> karyotyping of chromosomes.  The 
system is separated into four programming tasks: picture transformations, file 
maintenance, picture structuring, and display management.  Picture structuring
is considered as the vehicle for man-machine communication.
A prototype data format for pictures, called a picture-form, is developed.
Structure operators are defined which manipulate picture-forms to produce 
new pictures-forms.  Many of the ideas are taken from the symbolic mathematical 
laboratory at MIT conceived by Marvin Minsky.

CACM May, 1970

Hodes, L.

image processing, biomedical image processing, on-line image processing,
semiautomatic image processing, data structure, structure operators,
picture processing, biomedical picture processing, on-line picture
processing, semiautomatic picture processing, semiautomatic
karyotyping, karyotyping, list processing picture processing

3.12 3.34 3.63 4.39 6.29

CA700501 JB February 13, 1978  2:27 PM

2065	5	2065
2065	5	2065
2065	5	2065


************************

************************
Document:  CACM-2283.html
************************


Thinning Algorithms on Rectangular, Hexagonal, and Triangular Arrays

In this report three thinning algorithms are
developed: one each for use with rectangular, 
hexagonal, and triangular arrays.  The approach <B>to the</B>
development of each algorithm is the same.  Pictorial 
results produced by each of the algorithms are presented
and the relative performances of the algorithms 
are compared.  It is found that the algorithm operating
with the triangular array is the most sensitive 
to image irregularities and noise, yet it will yield
a thinned image with an overall reduced number of 
points.  It is concluded that the algorithm operating in
conjunction with the hexagonal array has features 
which strike a balance between those of the other two arrays.

CACM September, 1972

Deutsch, E. S.

thinning algorithms, rectangular, hexagonal,
triangular arrays, image processing, skeleton

3.64

CA720907 JB January 27, 1978  4:25 PM

2283	5	2283
2283	5	2283
2283	5	2283


************************

************************
Document:  CACM-1325.html
************************


Remote, On-Line, Real-time Computer Diagnosis
of the Clinical Electrocardiogram

Presented in this paper is a brief report on
the hardware, software, system configuration and 
function of a system for the remote, online, real-time digital
computer diagnosis of clinical electrocardiograms. 
 It seems likely that efforts of this sort will lead
to a satisfactory solution <B>to the</B> problem of the 
automatic diagnosis of electrocardiograms.  Current
attempts by the authors to extend the diagnostic 
capabilities of the present system are particularly concerned
with increasing the fidelity of the adaptive 
matched filters, the development of three dimensional pattern analysis,
the analysis of parallel electrocardiographer-computer 
diagnostic interaction, and a study of the possibility
of introducing major, tree-like branching decisions 
early in the diagnostic process.

CACM January, 1965

Whipple, G. H.
Dickson, J. F.
Horibe, H.
Stark, L.

CA650112 JB March 8, 1978  2:27 PM

1325	4	1325
1325	5	1325
1325	5	1325
1325	5	1325
462	5	1325


************************

************************
Document:  CACM-1403.html
************************


A Method for Finding the m Smallest Values of
a Monotonic Function Defined on Ordered Sets of 
Positive Integers

The minimum value of a monotonic increasing
function defined on a partially ordered set S is 
assumed <B>on the</B> set of minimal points of S.  This observation
is used to devise an efficient method for 
finding the m smallest functional values of monotonic
functions defined on ordered pairs of positive 
integers.  The method is easily extended to include
monotonic functions defined on ordered n-tuples. 
 Included is a FORTRAN program which was written to implement
the procedure for a certain important case.

CACM July, 1966

Sigillito, V. G.

CA660709 JB March 2, 1978  9:13 PM

1403	5	1403
1403	5	1403
1403	5	1403


************************

************************
Document:  CACM-2050.html
************************


Automatic Parsing for Content Analysis

Although automatic syntactic and semantic analysis is not yet possible for
all of an unrestricted natural language text, some applications, of which 
content analysis is one, do not have such a stringent coverage requirement.
Preliminary studies show that the Harvard Syntactic Analyzer can
produce correct and unambiguous identification of <B>the subject</B> and
object of certain verbs for approximately half of the relevant occurrences. 
This provides a degree of coverage for content analysis variables which 
compares favorably to manual methods, in variables which compares favorably 
to manual methods, in which only a sample of the total available text is 
normally processed.

CACM June, 1970

Damerau, F. J.

Content analysis, parsing, syntactic analysis, natural language processing,
information retrieval, language analysis, text processing

3.42 3.71

CA700605 JB February 13, 1978  11:43 AM

1350	4	2050
1659	4	2050
1856	4	2050
2050	4	2050
1225	5	2050
2050	5	2050
2050	5	2050
2050	5	2050


************************

************************
Document:  CACM-0531.html
************************


Person-Matching by Electronic Methods

Record linkage in the updating of files is
accomplished in many establishments through the 
use of a preassigned number, such as payroll number,
customer number, or social security number.  In 
vital and health records, however, a unique number
is generally not preassigned to an individual for 
purposes of reporting services received <B>to the</B> health
department.  In order to determine whether different 
physician reports refer to the same individual, name
and other identification must be compared.  This 
is a laborious operation which is subject to various
errors because of name misspellings, changes of 
name upon marriage, and other problems.  We are interested
in the maintenance of a psychiatric case register 
in Maryland, where many of the reports from over a hundred
psychiatric agencies refer to the same patient. 
 These records must be linked in order to provide unduplicated
counts of individuals under care and longitudinal 
records of psychiatric history.  An earlier paper [1] describes
our general procedures for register maintenance 
by use of a digital computer (Honeywell 800).  Here
we present in more detail our initial procedures 
for the person-matching process in order to elicit comments
and suggestions from persons who have had 
experience in matching.

CACM July, 1962

Phillips Jr., W.
Bahn, A. K.
Miyasaki, M.

CA620730 JB March 17, 1978  7:51 PM

531	5	531
531	5	531
531	5	531


************************



Person-Matching by Electronic Methods

Record linkage in the updating of files is
accomplished in many establishments through the 
use of a preassigned number, such as payroll number,
customer number, or social security number.  In 
vital and health records, however, a unique number
is generally not preassigned to an individual for 
purposes of reporting services received to the health
department.  In order to determine whether different 
physician reports refer to the same individual, name
and other identification must be compared.  This 
is a laborious operation which is <B>subject to</B> various
errors because of name misspellings, changes of 
name upon marriage, and other problems.  We are interested
in the maintenance of a psychiatric case register 
in Maryland, where many of the reports from over a hundred
psychiatric agencies refer to the same patient. 
 These records must be linked in order to provide unduplicated
counts of individuals under care and longitudinal 
records of psychiatric history.  An earlier paper [1] describes
our general procedures for register maintenance 
by use of a digital computer (Honeywell 800).  Here
we present in more detail our initial procedures 
for the person-matching process in order to elicit comments
and suggestions from persons who have had 
experience in matching.

CACM July, 1962

Phillips Jr., W.
Bahn, A. K.
Miyasaki, M.

CA620730 JB March 17, 1978  7:51 PM

531	5	531
531	5	531
531	5	531


************************



Person-Matching by Electronic Methods

Record linkage in the updating of files is
accomplished in many establishments through the 
<B>use of</B> a preassigned number, such as payroll number,
customer number, or social security number.  In 
vital and health records, however, a unique number
is generally not preassigned to an individual for 
purposes of reporting services received to the health
department.  In order to determine whether different 
physician reports refer to the same individual, name
and other identification must be compared.  This 
is a laborious operation which is subject to various
errors because of name misspellings, changes of 
name upon marriage, and other problems.  We are interested
in the maintenance of a psychiatric case register 
in Maryland, where many of the reports from over a hundred
psychiatric agencies refer to the same patient. 
 These records must be linked in order to provide unduplicated
counts of individuals under care and longitudinal 
records of psychiatric history.  An earlier paper [1] describes
our general procedures for register maintenance 
by use of a digital computer (Honeywell 800).  Here
we present in more detail our initial procedures 
for the person-matching process in order to elicit comments
and suggestions from persons who have had 
experience in matching.

CACM July, 1962

Phillips Jr., W.
Bahn, A. K.
Miyasaki, M.

CA620730 JB March 17, 1978  7:51 PM

531	5	531
531	5	531
531	5	531


************************

************************
Document:  CACM-1476.html
************************


Control Procedures for Data Communication-An ASA Progress Report

Sectional Committee X.3 of the American Standards
Association, has charged one of its task 
groups, X3.3.4, with the responsibility to "Define and specify
functional control requirements and characteristics 
governing the operation of digital data generating and
receiving systems interconnected by communication 
system."  This effort is primarily directed toward systems
employing the American Standard Code for Information 
Interchange (ASCII).  This paper represents a progress
report on the work of this group toward a proposal 
for national and international standardization in the
field of control procedures.  It describes both 
the old and new work of the task group.  The new work
is presented in detail, while the work that has 
been presented in earlier papers ["Control Procedures for
Data Communication," Task Group document X3.3.4/44, 
May 1964: "Transparent-Mode Control Procedures for Data
Communication," Task Group document X3.3.4/58, 
December, 1964: Comm. ACM 8 (Apr. 1965), 203-206; "Control
Procedures for Data Communications," Task 
Group document X3.3.4/60, March, 1965] is retained here
in summary form.  Many of the concepts and principles 
described herein have been submitted <B>to the</B> International
Organization for Standardization via earlier 
papers and are now embodied in working papers of that organization. 

CACM February, 1966

CA660208JB March 3, 1978  3:04 PM

1476	5	1476
1476	5	1476
1476	5	1476


************************



Control Procedures for Data Communication-An ASA Progress Report

Sectional Committee X.3 of the American Standards
Association, has charged one of its task 
groups, X3.3.4, with the responsibility to "Define and specify
functional control requirements and characteristics 
governing the operation of digital data generating and
receiving systems interconnected by communication 
system."  This effort is primarily directed toward systems
employing the American Standard Code for Information 
Interchange (ASCII).  This paper represents a progress
report <B>on the</B> work of this group toward a proposal 
for national and international standardization in the
field of control procedures.  It describes both 
the old and new work of the task group.  The new work
is presented in detail, while the work that has 
been presented in earlier papers ["Control Procedures for
Data Communication," Task Group document X3.3.4/44, 
May 1964: "Transparent-Mode Control Procedures for Data
Communication," Task Group document X3.3.4/58, 
December, 1964: Comm. ACM 8 (Apr. 1965), 203-206; "Control
Procedures for Data Communications," Task 
Group document X3.3.4/60, March, 1965] is retained here
in summary form.  Many of the concepts and principles 
described herein have been submitted to the International
Organization for Standardization via earlier 
papers and are now embodied in working papers of that organization. 

CACM February, 1966

CA660208JB March 3, 1978  3:04 PM

1476	5	1476
1476	5	1476
1476	5	1476


************************

************************
Document:  CACM-1543.html
************************


Computer Formulation of the Equations of Motion Using Tensor Notation

A means is described for extending the area
of application of digital computers beyond the 
numerical data processing stage and reducing the need for
human participation in the formulation of certain 
types of computer problems.  By <B>the use</B> of tensor calculus
and a computer language designed to facilitate 
symbolic mathematical computation, a method has been
devised whereby a digital computer can be used to 
do non-numeric work, that is, symbolic algebraic manipulation
and differentiation. To illustrate the 
techniques involved, a digital computer has been used
to derive the equations of motion of a point mass 
in a general orthogonal curvilinear coordinate system.
 Since this operation involves a formulation in 
terms of first- and second-order differential coefficients,
it provides a good demonstration of a computer's 
capability to do non-numeric work and to assist in the
formulation process which normally precedes the 
numerical data processing stage.  Moreover, this particular
problem serves to illustrate the advantages 
of the mathematical techniques employed.  With the program
prepared for this purpose the computer will 
derive the equations of motion in any coordinate system
requested by the user.   Results are presented 
for the following coordinate systems: cylindrical
polar, spherical polar, and prolate spheroidal.

CACM September, 1967

Howard, J. C.

CA670903 JB February 27, 1978  3:58 PM

1543	4	1543
1543	4	1543
1664	4	1543
1664	4	1543
1345	5	1543
1543	5	1543
1543	5	1543
1543	5	1543
1616	5	1543
1664	5	1543
1345	6	1543
1543	6	1543
1616	6	1543


************************



Computer Formulation of the Equations of Motion Using Tensor Notation

A means is described for extending the area
of application of digital computers beyond the 
numerical data processing stage and reducing the need for
human participation in the formulation of certain 
types of computer problems.  By the <B>use of</B> tensor calculus
and a computer language designed to facilitate 
symbolic mathematical computation, a method has been
devised whereby a digital computer can be used to 
do non-numeric work, that is, symbolic algebraic manipulation
and differentiation. To illustrate the 
techniques involved, a digital computer has been used
to derive the equations of motion of a point mass 
in a general orthogonal curvilinear coordinate system.
 Since this operation involves a formulation in 
terms of first- and second-order differential coefficients,
it provides a good demonstration of a computer's 
capability to do non-numeric work and to assist in the
formulation process which normally precedes the 
numerical data processing stage.  Moreover, this particular
problem serves to illustrate the advantages 
of the mathematical techniques employed.  With the program
prepared for this purpose the computer will 
derive the equations of motion in any coordinate system
requested by the user.   Results are presented 
for the following coordinate systems: cylindrical
polar, spherical polar, and prolate spheroidal.

CACM September, 1967

Howard, J. C.

CA670903 JB February 27, 1978  3:58 PM

1543	4	1543
1543	4	1543
1664	4	1543
1664	4	1543
1345	5	1543
1543	5	1543
1543	5	1543
1543	5	1543
1616	5	1543
1664	5	1543
1345	6	1543
1543	6	1543
1616	6	1543


************************

************************
Document:  CACM-1362.html
************************


Code Extension in ASCII* (An ASA Tutorial)

The American Standard Code for Information
Interchange (ASCII) contains a number of control 
characters associated with the principle of code extension,
that is, with the representation of information 
which cannot be directly represented by means of the characters
in the Code.  The manner of use of these 
characters has not previously been completely described.
 This paper presents a set of mutually consistent 
philosophies regarding code extension applications,
and suggests a corollary set of doctrines for the 
application of the code extension characters.  Distinctions
are drawn between code extension and such 
other concepts as "graphic substitution" or "syntactic
representation" which are often used to meet similar 
requirements.  Also covered are certain topics which
are not truly concerned with code extension but 
which are often linked with it in discussion on code applications.
 The material in this paper is equally 
applicable in principle <B>to the</B> (proposed) ISO international
7-bit code for information interchange.

CACM October, 1966

CA661005 JB March 2, 1978  4:02 PM

1362	5	1362
1362	5	1362
1362	5	1362


************************



Code Extension in ASCII* (An ASA Tutorial)

The American Standard Code for Information
Interchange (ASCII) contains a number of control 
characters associated with the principle of code extension,
that is, with the representation of information 
which cannot be directly represented by means of the characters
in the Code.  The manner of <B>use of</B> these 
characters has not previously been completely described.
 This paper presents a set of mutually consistent 
philosophies regarding code extension applications,
and suggests a corollary set of doctrines for the 
application of the code extension characters.  Distinctions
are drawn between code extension and such 
other concepts as "graphic substitution" or "syntactic
representation" which are often used to meet similar 
requirements.  Also covered are certain topics which
are not truly concerned with code extension but 
which are often linked with it in discussion on code applications.
 The material in this paper is equally 
applicable in principle to the (proposed) ISO international
7-bit code for information interchange.

CACM October, 1966

CA661005 JB March 2, 1978  4:02 PM

1362	5	1362
1362	5	1362
1362	5	1362


************************

************************
Document:  CACM-1700.html
************************


PEEKABIT, Computer Offspring of Punched
Card PEEKABOO, for Natural Language Searching

The "peekaboo" idea from punched card information
retrieval methods has been mated with the 
idea of superimposed punching to produce a programming
technique which cuts computer run time in half 
on a test search of 33,000 subject index entries.  A search
program using the device has been operational 
since late 1963.  As an item is entered in the store,
an 18-byte mask is created from the item's meaningful 
words using the inclusive OR operation.  If, at search
time, the logical product (using the AND operation) 
of this mask and a similarly constructed question mask
is not equal <B>to the</B> question mask, then one or 
more question words are not present in the store item.
 An equality is in conclusive; the words of the 
store item must be unpacked and compared with question
words.  The present store is made up of over 600,000 
subject index entries estimated to average 60 characters
each.  Longer texts, such as abstracts, could 
be handled by multiple masks.

CACM September,1968

Hutton, F. C.

peekaboo, superimposed coding, natural language
searching text searching, information compaction, 
computer search technique

3.74

CA680901 JB February 22, 1978  9:38 AM

1700	5	1700
1700	5	1700
1700	5	1700


************************

************************
Document:  CACM-1529.html
************************


Decomposition Programming An Analysis of Matrix Substructure 

A petroleum blending problem was analyzed in order
to compare the primal and primal-dual decomposition 
algorithms.  In the course of the analysis, a substructure
was discovered which has relevance <B>to the</B> 
relative performance of the two algorithms and to their
absolute performance as compared with a standard 
primal-Simplex solution without decomposition.

CACM October, 1967

Bell, E. J.

CA671004 JB February 27, 1978  2:33 PM

1529	5	1529
1529	5	1529
1529	5	1529


************************

************************
Document:  CACM-2402.html
************************


Pictorial Pattern Recognition and the
Phase Problem of X-ray Crystallography

The availability of interactive, three-dimensional,
computer graphics systems coupled to powerful 
digital computers encourages the development of algorithms
adapted to this environment.  Pictorial pattern 
recognition techniques make possible a number of approaches
to X-ray structure determination based on 
molecular model building, i.e. <B>the use</B> of chemical information
to frame "structural hypotheses" which 
can computationally be tested and refined by reference
to the experimental data.  Application of standard 
pattern recognition algorithms is hindered by the fact
that the cross-correlation between a model and 
the correct structure cannot be computed because of
a fundamental incompleteness in the measured data. 
 However, it is possible to compute an upper bound to such
a cross-correlation.  A simple example demonstrates 
that this information can be the basis of a technique
for structure determination that can make effective 
use of an interactive graphics system. Model building
by cross-correlations has intrinsic advantages 
over usual crystallographic techniques based on the
autocorrelation or Patterson function, especially 
for large structures.  This is significant, for crystallography
of biological macromolecules hasbeen 
and will continue to be a field of intense interest.

CACM January, 1972

Lesk, A. M.

pictorial pattern recognition, phase problem,
X-ray crystallography, interactive graphics

3.13 3.17 3.63

CA720101 JB February 1, 1978  9:53 AM

2402	5	2402
2402	5	2402
2402	5	2402


************************



Pictorial Pattern Recognition and the
Phase Problem of X-ray Crystallography

The availability of interactive, three-dimensional,
computer graphics systems coupled to powerful 
digital computers encourages the development of algorithms
adapted to this environment.  Pictorial pattern 
recognition techniques make possible a number of approaches
to X-ray structure determination based on 
molecular model building, i.e. the use of chemical information
to frame "structural hypotheses" which 
can computationally be tested and refined by reference
<B>to the</B> experimental data.  Application of standard 
pattern recognition algorithms is hindered by the fact
that the cross-correlation between a model and 
the correct structure cannot be computed because of
a fundamental incompleteness in the measured data. 
 However, it is possible to compute an upper bound to such
a cross-correlation.  A simple example demonstrates 
that this information can be the basis of a technique
for structure determination that can make effective 
use of an interactive graphics system. Model building
by cross-correlations has intrinsic advantages 
over usual crystallographic techniques based on the
autocorrelation or Patterson function, especially 
for large structures.  This is significant, for crystallography
of biological macromolecules hasbeen 
and will continue to be a field of intense interest.

CACM January, 1972

Lesk, A. M.

pictorial pattern recognition, phase problem,
X-ray crystallography, interactive graphics

3.13 3.17 3.63

CA720101 JB February 1, 1978  9:53 AM

2402	5	2402
2402	5	2402
2402	5	2402


************************



Pictorial Pattern Recognition and the
Phase Problem of X-ray Crystallography

The availability of interactive, three-dimensional,
computer graphics systems coupled to powerful 
digital computers encourages the development of algorithms
adapted to this environment.  Pictorial pattern 
recognition techniques make possible a number of approaches
to X-ray structure determination based on 
molecular model building, i.e. the use of chemical information
to frame "structural hypotheses" which 
can computationally be tested and refined by reference
to the experimental data.  Application of standard 
pattern recognition algorithms is hindered by the fact
that the cross-correlation between a model and 
the correct structure cannot be computed because of
a fundamental incompleteness in the measured data. 
 However, it is possible to compute an upper bound to such
a cross-correlation.  A simple example demonstrates 
that this information can be the basis of a technique
for structure determination that can make effective 
use of an interactive graphics system. Model building
by cross-correlations has intrinsic advantages 
over usual crystallographic techniques based <B>on the</B>
autocorrelation or Patterson function, especially 
for large structures.  This is significant, for crystallography
of biological macromolecules hasbeen 
and will continue to be a field of intense interest.

CACM January, 1972

Lesk, A. M.

pictorial pattern recognition, phase problem,
X-ray crystallography, interactive graphics

3.13 3.17 3.63

CA720101 JB February 1, 1978  9:53 AM

2402	5	2402
2402	5	2402
2402	5	2402


************************



Pictorial Pattern Recognition and the
Phase Problem of X-ray Crystallography

The availability of interactive, three-dimensional,
computer graphics systems coupled to powerful 
digital computers encourages the development of algorithms
adapted to this environment.  Pictorial pattern 
recognition techniques make possible a number of approaches
to X-ray structure determination based on 
molecular model building, i.e. the <B>use of</B> chemical information
to frame "structural hypotheses" which 
can computationally be tested and refined by reference
to the experimental data.  Application of standard 
pattern recognition algorithms is hindered by the fact
that the cross-correlation between a model and 
the correct structure cannot be computed because of
a fundamental incompleteness in the measured data. 
 However, it is possible to compute an upper bound to such
a cross-correlation.  A simple example demonstrates 
that this information can be the basis of a technique
for structure determination that can make effective 
use of an interactive graphics system. Model building
by cross-correlations has intrinsic advantages 
over usual crystallographic techniques based on the
autocorrelation or Patterson function, especially 
for large structures.  This is significant, for crystallography
of biological macromolecules hasbeen 
and will continue to be a field of intense interest.

CACM January, 1972

Lesk, A. M.

pictorial pattern recognition, phase problem,
X-ray crystallography, interactive graphics

3.13 3.17 3.63

CA720101 JB February 1, 1978  9:53 AM

2402	5	2402
2402	5	2402
2402	5	2402


************************

************************
Document:  CACM-2484.html
************************


A Note on Information Organization and Storage

Since the logical structure of a data base
can be represented by a tree or graph, it is quite 
natural for us to view the process of designing a data
base as that of constructing a tree or a graph. 
 A general method for constructing such a tree or a graph
is provided.  There are three important elements 
in this general construction method; namely, a set of
binary relations, an algorithm for constructing 
subsets of a set, and an algorithm for selecting an
element from the given set of objects.  The use of 
different relations and algorithms results in different
information structures, as list, tree, ring, 
etc.  Thus the problem of information organization and
storage is reduced to that of defining relations 
and formulating algorithms under a given set of constraints.
 The results presented may be valuable to 
designers as useful design concepts, and may serve as
a basis for developing a formal theory <B>on the</B> subject.

CACM July, 1973

Huang, J. C.

data base, data-base management, information retrieval,
information structure, file organization, 
storage allocation, tree, graph

3.70 3.73 3.74 5.32

CA730702 JB January 23, 1978  1:14 PM

2484	5	2484
2484	5	2484
2484	5	2484


************************



A Note on Information Organization and Storage

Since the logical structure of a data base
can be represented by a tree or graph, it is quite 
natural for us to view the process of designing a data
base as that of constructing a tree or a graph. 
 A general method for constructing such a tree or a graph
is provided.  There are three important elements 
in this general construction method; namely, a set of
binary relations, an algorithm for constructing 
subsets of a set, and an algorithm for selecting an
element from the given set of objects.  The <B>use of</B> 
different relations and algorithms results in different
information structures, as list, tree, ring, 
etc.  Thus the problem of information organization and
storage is reduced to that of defining relations 
and formulating algorithms under a given set of constraints.
 The results presented may be valuable to 
designers as useful design concepts, and may serve as
a basis for developing a formal theory on the subject.

CACM July, 1973

Huang, J. C.

data base, data-base management, information retrieval,
information structure, file organization, 
storage allocation, tree, graph

3.70 3.73 3.74 5.32

CA730702 JB January 23, 1978  1:14 PM

2484	5	2484
2484	5	2484
2484	5	2484


************************



A Note on Information Organization and Storage

Since the logical structure of a data base
can be represented by a tree or graph, it is quite 
natural for us to view the process of designing a data
base as that of constructing a tree or a graph. 
 A general method for constructing such a tree or a graph
is provided.  There are three important elements 
in this general construction method; namely, a set of
binary relations, an algorithm for constructing 
subsets of a set, and an algorithm for selecting an
element from the given set of objects.  The use of 
different relations and algorithms results in different
information structures, as list, tree, ring, 
etc.  Thus the problem of information organization and
storage is reduced to that of defining relations 
and formulating algorithms under a given set of constraints.
 The results presented may be valuable to 
designers as useful design concepts, and may serve as
a basis for developing a formal theory on <B>the subject</B>.

CACM July, 1973

Huang, J. C.

data base, data-base management, information retrieval,
information structure, file organization, 
storage allocation, tree, graph

3.70 3.73 3.74 5.32

CA730702 JB January 23, 1978  1:14 PM

2484	5	2484
2484	5	2484
2484	5	2484


************************

************************
Document:  CACM-1445.html
************************


Use of the Computer to Teach Introductory Statistics

It has always been obvious that the aid to calculation
offered by the computer forces a change 
in the curricula of mathematics, statistics, physics,
engineering and other courses.  Not so obvious 
are the many pedagogic aids the computer can offer in
teaching <B>the subject</B> matter.  The possibilities 
of giving the student a better technical as well as conceptual
understanding of statistics were explored 
for a number of years at the College of Medicine of
the University of Cincinnati and are reported here.

CACM April, 1966

Sterling, T. D.
Pollack, S. V.

CA660404 JB March 3, 1978  10:48 AM

1445	5	1445
1445	5	1445
1445	5	1445


************************

************************
Document:  CACM-2994.html
************************


A Linear Algorithm for Incremental Digital Display of Circular Arcs

Circular arcs can be drawn on an incremental
display device such as a cathode ray tube, digital 
plotter, or matrix prin ter using only sign testing and
elementary addition and subtraction.  This paper 
describes methodology for producing dot or
step patterns closet <B>to the</B> true circle.

CACM February, 1977

Bresenham, J.

graphics, circle drawing, step generation, dot
generation, incremental digital plotting, raster 
display, integer arithmetic, circle algorithm

4.41 8.2

CA770207 JB December 30, 1977  2:16 AM

2994	5	2994
2994	5	2994
2994	5	2994


************************

************************
Document:  CACM-1308.html
************************


A Mathematical Model for Mechanical part Description

The flexibility of a mathematical model takes
advantage of the common information requirements 
of computer-aided engineering drawing, numerical control
tape generation, and physical characteristic 
computation.  By judicious control of man-machine communication
requirements, improved results over conventional 
engineering design processes are possible.  An English-like
input language, tailored for use by draftsmen 
and designers, will describe the part and specify the
output desired.  One approach <B>to the</B> mathematical 
model consists of a group of surface-defining quadric
equations, which are created by a system of modular 
subprogram.  Other subprograms will convert the mathematical
model into instructions for driving automatic 
drafting machines and numerical controlled machine tools.
 Physical part characteristics, such as center 
of gravity, can be computed by subprograms and used in
dynamic analysis work.  The proposed overall system 
is presented and experiments and demonstrations are discussed.

CACM February, 1965

Luh, J. Y. S.
Krolak, R. J.

CA650216 JB March 7, 1978  10:46 PM

1308	5	1308
1308	5	1308
1308	5	1308


************************

************************
Document:  CACM-1108.html
************************


Digital Data Processor for Tracking the Partially Illuminated Moon*

A study of lunar tracking techniques and fabrication
of a breadboard to assess the feasibility 
of the best technique selected was conducted to define
a tracking system for observation of the sight line 
<B>to the</B> center of a partially illuminated moon.  The
data processing portion of the system is presented 
in detail and then described in general are the operation
of the tracker head assembly for data readout, 
the operation of the entire system and the effect data
processing considerations have on the design of 
the tracker system.  The system basically consists of
an optical sensor, digital computer and tracker 
drive mechanism.  The three system units, connected
in cascade, comprise the control loop.  For this 
application, an optical telescope with a radial mechanical
scanning mechanism was used that read out 
lunar sight line measurement information.  This information
is sequentially read into a special purpose 
digital computer that extracts the measurements and
computes the error signals that drive the tracker 
to the appropriate attitude.

CACM March, 1964

Wilcox, H. J.

CA640324 JB March 10, 1978  2:02 AM

1108	5	1108
1108	5	1108
1108	5	1108


************************



Digital Data Processor for Tracking the Partially Illuminated Moon*

A study of lunar tracking techniques and fabrication
of a breadboard to assess the feasibility 
of the best technique selected was conducted to define
a tracking system for observation of the sight line 
to the center of a partially illuminated moon.  The
data processing portion of the system is presented 
in detail and then described in general are the operation
of the tracker head assembly for data readout, 
the operation of the entire system and the effect data
processing considerations have <B>on the</B> design of 
the tracker system.  The system basically consists of
an optical sensor, digital computer and tracker 
drive mechanism.  The three system units, connected
in cascade, comprise the control loop.  For this 
application, an optical telescope with a radial mechanical
scanning mechanism was used that read out 
lunar sight line measurement information.  This information
is sequentially read into a special purpose 
digital computer that extracts the measurements and
computes the error signals that drive the tracker 
to the appropriate attitude.

CACM March, 1964

Wilcox, H. J.

CA640324 JB March 10, 1978  2:02 AM

1108	5	1108
1108	5	1108
1108	5	1108


************************

************************
Document:  CACM-2919.html
************************


The Programmer's Workbench-A Machine for Software Development

On almost all software development projects the
assumption is made that the program development 
function will be done on the same machine on which the
eventual system will run.  It is only when this 
production machine is unavailable or when its programming
environment is totally inadequate that alternatives 
are considered.  In this paper it is suggested that
there are many other situations where it would be 
advantageous to separate the program development and
main tenance function onto a specialized computer 
which is dedicated to that purpose.  Such a computer
is here called a Programmer's Workbench.  The four 
basic sections of the paper in troduce <B>the subject</B>,outline
the general concept, discuss areas where such 
an approach may prove beneficial, and describe
an operational system utilizing this concept.

CACM October, 1977

Ivie, E. L.

computer configurations, computer networks, software
development, software engineering, software 
main tenance, UNIX

3.2 3.5 3.7 3.8 4.0

CA771007 JB December 27, 1977  10:37 AM

2626	4	2919
2786	4	2919
2840	4	2919
2919	4	2919
2919	4	2919
2919	4	2919
3017	4	2919
3110	4	2919
3174	4	2919
2536	5	2919
2593	5	2919
2629	5	2919
2919	5	2919
2919	5	2919
2919	5	2919


************************



The Programmer's Workbench-A Machine for Software Development

On almost all software development projects the
assumption is made that the program development 
function will be done <B>on the</B> same machine on which the
eventual system will run.  It is only when this 
production machine is unavailable or when its programming
environment is totally inadequate that alternatives 
are considered.  In this paper it is suggested that
there are many other situations where it would be 
advantageous to separate the program development and
main tenance function onto a specialized computer 
which is dedicated to that purpose.  Such a computer
is here called a Programmer's Workbench.  The four 
basic sections of the paper in troduce the subject,outline
the general concept, discuss areas where such 
an approach may prove beneficial, and describe
an operational system utilizing this concept.

CACM October, 1977

Ivie, E. L.

computer configurations, computer networks, software
development, software engineering, software 
main tenance, UNIX

3.2 3.5 3.7 3.8 4.0

CA771007 JB December 27, 1977  10:37 AM

2626	4	2919
2786	4	2919
2840	4	2919
2919	4	2919
2919	4	2919
2919	4	2919
3017	4	2919
3110	4	2919
3174	4	2919
2536	5	2919
2593	5	2919
2629	5	2919
2919	5	2919
2919	5	2919
2919	5	2919


************************

************************
Document:  CACM-2819.html
************************


Experiments in Text File Compression

A system for the compression of data files,
viewed as strings of characters, is presented. 
 The method is general, and applies equally well to
English, to PL/I, or to digital data.  The system 
consists of an encoder, an analysis program, and a decoder.
  Two algorithms for encoding a string differ 
slightly from earlier proposals.  The analysis program attempts
<B>to find</B> an optimal set of codes for representing 
substrings of the file.  Four new algorithms for this
operation are described and compared.  Various 
parameters in the algorithms are optimized to obtain
a high degree of compression for sample texts.

CACM November, 1976

Rubin, F.

text compression, data file compaction, Huffman
codes, N-gram encoding, comparison of algorithms

3.7 3.73 4.33

CA761104 JB January 3, 1978  3:26 PM

2530	4	2819
2623	4	2819
2819	4	2819
2537	5	2819
2819	5	2819
2819	5	2819
2819	5	2819


************************

************************
Document:  CACM-0615.html
************************


Addressing Multidimensional Arrays

A useful method of representing a function of
n variables is to consider the function to assume 
its values at selected points in n-dimensional space.
 Although this picture is of value <B>to the</B> analyst, 
the elements of an n-dimensional array must exist in
conventional storage as a linear array or vector. 
 The means of performing the transformation of a set
of indices locating on array element in n-space 
to the location (address) of the element in its storage
vector is the subject of this paper.  It is noted 
that the index address transformation is computationally
identical to the conversion of a number from 
a fixed to a mixed radix number system.  Several ways
of implementing the transformation are described.

CACM April, 1962

Hellerman, H.

CA620402 JB March 20, 1978  2:29 PM

435	5	615
615	5	615
615	5	615
615	5	615
849	5	615
155	6	615
196	6	615
615	6	615
615	6	615


************************



Addressing Multidimensional Arrays

A useful method of representing a function of
n variables is to consider the function to assume 
its values at selected points in n-dimensional space.
 Although this picture is of value to the analyst, 
the elements of an n-dimensional array must exist in
conventional storage as a linear array or vector. 
 The means of performing the transformation of a set
of indices locating on array element in n-space 
to the location (address) of the element in its storage
vector is <B>the subject</B> of this paper.  It is noted 
that the index address transformation is computationally
identical to the conversion of a number from 
a fixed to a mixed radix number system.  Several ways
of implementing the transformation are described.

CACM April, 1962

Hellerman, H.

CA620402 JB March 20, 1978  2:29 PM

435	5	615
615	5	615
615	5	615
615	5	615
849	5	615
155	6	615
196	6	615
615	6	615
615	6	615


************************

************************
Document:  CACM-1806.html
************************


On the Downhill Method

The downhill method is a numerical method for
solving complex equations f(z) = 0 on which the 
only restriction is that the function w = f(z) must
be analytical.  An introduction to this method is 
given and a critical review of relating literature is
presented.  Although in theory the method always 
converges, it is shown that a fundamental dilemma exists
which may cause a breakdown in practical applications. 
 To avoid this difficulty and to improve the rate of
convergence toward a root, some modifications of 
<B>the original</B> method are proposed and a program (FORTRAN)
based on the modified method is given in Algorithm 
365.  Some numerical examples are included.

CACM December, 1969

Bach, H.

downhill method, complex relaxation method, complex
iteration, complex equation, transcendental 
complex equation, algebraic complex equation

5.15

CA691206 JB February 15, 1978  2:54 PM

1806	4	1806
1806	5	1806
1806	5	1806
1806	5	1806
1803	5	1806
535	5	1806
1806	6	1806


************************



On the Downhill Method

The downhill method is a numerical method for
solving complex equations f(z) = 0 on which the 
only restriction is that the function w = f(z) must
be analytical.  An introduction to this method is 
given and a critical review of relating literature is
presented.  Although in theory the method always 
converges, it is shown that a fundamental dilemma exists
which may cause a breakdown in practical applications. 
 To avoid this difficulty and to improve the rate of
convergence toward a root, some modifications of 
the original method are proposed and a program (FORTRAN)
based <B>on the</B> modified method is given in Algorithm 
365.  Some numerical examples are included.

CACM December, 1969

Bach, H.

downhill method, complex relaxation method, complex
iteration, complex equation, transcendental 
complex equation, algebraic complex equation

5.15

CA691206 JB February 15, 1978  2:54 PM

1806	4	1806
1806	5	1806
1806	5	1806
1806	5	1806
1803	5	1806
535	5	1806
1806	6	1806


************************

************************
Document:  CACM-2248.html
************************


A New Method for the Solution of the
Cauchy Problem for Parabolic Equations

An integral equation representation is given
for parabolic partial differential equations. 
 When the equations are defined in unbounded domains, as
in the initial value (Cauchy) problem, the solution 
of the integral equation by the method of successive
approximation has inherent advantages over other 
methods.  Error bounds for the methods are of order h^(3/2)
and h^(7/2) (his the increment size) depending 
<B>on the</B> finite difference approximations involved.

CACM December, 1972

Moore, J.
Robinson, P.

parabolic equations, the Cauchy problem,
method of successive approximations

5.17

CA721207 JB January 27, 1978  11:13 AM

2248	5	2248
2248	5	2248
2248	5	2248


************************

************************
Document:  CACM-1327.html
************************


Use of Decision Tables in Computer Programming

A decision table is a tabular form for displaying
decision logic.  Decision tables have many 
inherent advantages.  The technique to be illustrated
puts these advantages to use in that it enables 
one to program directly from a decision table.  The technique
is based <B>on the</B> creation of a binary image 
of a limited entry decision table in computer memory.
 A binary image of a given set of input conditions 
can also be created.  This data image is used to scan
the decision table image to arrive at the proper 
course of action.  There are several advantages gained
from the programming point view: (1) amount of 
computer memory used is drastically reduced, (2) programming
is simplified, and (3) documentation is 
brief and clear.

CACM January, 1965

Kirk, H. W.

CA650110 JB March 8, 1978  2:36 PM

1327	5	1327
1327	5	1327
1327	5	1327
1354	5	1327
1488	5	1327
2053	5	1327
2220	5	1327
2273	5	1327
2726	5	1327
2856	5	1327
1172	6	1327
1172	6	1327
1172	6	1327
1172	6	1327
1172	6	1327
1172	6	1327
1237	6	1327
1237	6	1327
1237	6	1327
1237	6	1327
1237	6	1327
1327	6	1327
1327	6	1327
1327	6	1327
1327	6	1327
1327	6	1327
1327	6	1327
1327	6	1327
1354	6	1327
1354	6	1327
1354	6	1327
1354	6	1327
1354	6	1327
1488	6	1327
1489	6	1327
1489	6	1327
1548	6	1327
1548	6	1327
1684	6	1327
250	6	1327
2053	6	1327
2053	6	1327
2220	6	1327
2220	6	1327
2220	6	1327
2221	6	1327
2263	6	1327
2453	6	1327
2598	6	1327


************************

************************
Document:  CACM-1625.html
************************


On the Automatic Simplification of Source-Language Programs

Methods of simplification that can be applied
automatically to programs written in an ALGOL-like 
language are discussed.  The simplifications are based
<B>on the</B> form of the program and the knowledge obtained 
by a processor, without any understanding of what the
program is supposed to do.  These methods have 
been implemented in a processor called SURE that accepts
a program written in JOVIAL and outputs an equivalent 
JOVIAL program that may be shorter and may be executed
faster than the original.  SURE is described, 
some of the problems encountered in automatic improvement
at the source-language level are discussed, 
and further types of automatic program improvement are suggested.

CACM March, 1967

Clark, E. R.

CA670304 JB February 28, 1978  1:33 PM

1084	4	1625
1379	4	1625
1625	4	1625
1625	4	1625
1807	4	1625
1945	4	1625
1947	4	1625
1248	5	1625
1625	5	1625
1625	5	1625
1625	5	1625
669	5	1625


************************



On the Automatic Simplification of Source-Language Programs

Methods of simplification that can be applied
automatically to programs written in an ALGOL-like 
language are discussed.  The simplifications are based
on the form of the program and the knowledge obtained 
by a processor, without any understanding of what the
program is supposed to do.  These methods have 
been implemented in a processor called SURE that accepts
a program written in JOVIAL and outputs an equivalent 
JOVIAL program that may be shorter and may be executed
faster than <B>the original</B>.  SURE is described, 
some of the problems encountered in automatic improvement
at the source-language level are discussed, 
and further types of automatic program improvement are suggested.

CACM March, 1967

Clark, E. R.

CA670304 JB February 28, 1978  1:33 PM

1084	4	1625
1379	4	1625
1625	4	1625
1625	4	1625
1807	4	1625
1945	4	1625
1947	4	1625
1248	5	1625
1625	5	1625
1625	5	1625
1625	5	1625
669	5	1625


************************

************************
Document:  CACM-1721.html
************************


Determination of the Intersection Points of Two
Plane Curves by Means of Differential Equations

A new method is proposed to calculate the intersection
points of two plane curves.  The theory 
of singular points off a system of two differential equations
is used in developing the method. The intersection 
point to be determined is identified with such a singular
point and appropriate modifications are applied 
<B>to the</B> system to ensure that the singular point be stable,
i.e. all integrals which start in the neighborhood 
of the singular point will always approach this point
if the integral parameter tends to infinity.  In 
addition a method is described for systematically searching
for all intersection points in a prescribed 
rectangular area.

CACM July, 1968

Kuiken, H. K.

plane curves, intersection points, intersections
plane curves, integration, differential equations, 
matrix iteration, singular points, nonlinear differential
equations, eigenvalues, complex roots, roots, 
stationary points, Runge Kutta, stable singularity, unstable singularity

2.0 3.10 3.20 3.50 5.10

CA680708 JB February 22, 1978  11:51 AM

1721	5	1721
1721	5	1721
1721	5	1721


************************



Determination of the Intersection Points of Two
Plane Curves by Means of Differential Equations

A new method is proposed to calculate the intersection
points of two plane curves.  The theory 
<B>of singular</B> points off a system of two differential equations
is used in developing the method. The intersection 
point to be determined is identified with such a singular
point and appropriate modifications are applied 
to the system to ensure that the singular point be stable,
i.e. all integrals which start in the neighborhood 
of the singular point will always approach this point
if the integral parameter tends to infinity.  In 
addition a method is described for systematically searching
for all intersection points in a prescribed 
rectangular area.

CACM July, 1968

Kuiken, H. K.

plane curves, intersection points, intersections
plane curves, integration, differential equations, 
matrix iteration, singular points, nonlinear differential
equations, eigenvalues, complex roots, roots, 
stationary points, Runge Kutta, stable singularity, unstable singularity

2.0 3.10 3.20 3.50 5.10

CA680708 JB February 22, 1978  11:51 AM

1721	5	1721
1721	5	1721
1721	5	1721


************************

************************
Document:  CACM-1144.html
************************


Digital Computer Determination of Alpha Source Activity

A technique is described for determining the
activity and homogeneity of an alpha source.  
It is believed that the technique, using a digital computer,
has many uses and applications in the field 
of nuclear physics. The technique involves computer
manipulation of the <B>digital image</B> of the nuclear 
source.  Experimental details are given.

CACM January, 1964

Robbins, D.
Taylor, W. E.

CA640111 JB March 10, 1978  5:14 AM 

1144	5	1144
1144	5	1144
1144	5	1144


************************

************************
Document:  CACM-3157.html
************************


Proving Termination with Multiset Orderings

A common tool for proving the termination of programs is the well-founded
set, a set ordered in such a way as to admit no infinite descending sequences.
The basic approach is to find a termination function  that maps
the values of the program variables into some well-founded set,
such that the value of the termination function is repeatedly reduced
throughout the computation.  All too often, the termination functions required 
are difficult to find and are of a complexity out
of proportion <B>to the</B> program under consideration. Multisets (bags)
over a given well-founded set S are sets that admit multiple occurrences
of elements taken from S.  The given ordering on S induces
an ordering on the finite multisets over S.  This multiset ordering
is shown to be well-founded.  The multiset ordering enables the
use of relatively simple and intuitive termination functions in otherwise
difficult termination proofs.  In particular, the multiset
ordering is used to prove the termination of production systems,
programs defined in terms of sets of rewriting rules. 

CACM August, 1979

Dershowitz, N.
Manna, Z.

Program correctness, program termination, program verification, well-founded
orderings, well-founded sets, multisets, bags, production systems,
term rewriting systems, tree replacement systems, reduction rules

5.24 5.7

CA790803 DB January 4, 1980  3:44 PM

3157	4	3157
3014	5	3157
3157	5	3157
3157	5	3157
3157	5	3157


************************



Proving Termination with Multiset Orderings

A common tool for proving the termination of programs is the well-founded
set, a set ordered in such a way as to admit no infinite descending sequences.
The basic approach is to find a termination function  that maps
the values of the program variables into some well-founded set,
such that the value of the termination function is repeatedly reduced
throughout the computation.  All too often, the termination functions required 
are difficult to find and are of a complexity out
of proportion to the program under consideration. Multisets (bags)
over a given well-founded set S are sets that admit multiple occurrences
of elements taken from S.  The given ordering on S induces
an ordering <B>on the</B> finite multisets over S.  This multiset ordering
is shown to be well-founded.  The multiset ordering enables the
use of relatively simple and intuitive termination functions in otherwise
difficult termination proofs.  In particular, the multiset
ordering is used to prove the termination of production systems,
programs defined in terms of sets of rewriting rules. 

CACM August, 1979

Dershowitz, N.
Manna, Z.

Program correctness, program termination, program verification, well-founded
orderings, well-founded sets, multisets, bags, production systems,
term rewriting systems, tree replacement systems, reduction rules

5.24 5.7

CA790803 DB January 4, 1980  3:44 PM

3157	4	3157
3014	5	3157
3157	5	3157
3157	5	3157
3157	5	3157


************************



Proving Termination with Multiset Orderings

A common tool for proving the termination of programs is the well-founded
set, a set ordered in such a way as to admit no infinite descending sequences.
The basic approach is to find a termination function  that maps
the values of the program variables into some well-founded set,
such that the value of the termination function is repeatedly reduced
throughout the computation.  All too often, the termination functions required 
are difficult to find and are of a complexity out
of proportion to the program under consideration. Multisets (bags)
over a given well-founded set S are sets that admit multiple occurrences
of elements taken from S.  The given ordering on S induces
an ordering on the finite multisets over S.  This multiset ordering
is shown to be well-founded.  The multiset ordering enables the
<B>use of</B> relatively simple and intuitive termination functions in otherwise
difficult termination proofs.  In particular, the multiset
ordering is used to prove the termination of production systems,
programs defined in terms of sets of rewriting rules. 

CACM August, 1979

Dershowitz, N.
Manna, Z.

Program correctness, program termination, program verification, well-founded
orderings, well-founded sets, multisets, bags, production systems,
term rewriting systems, tree replacement systems, reduction rules

5.24 5.7

CA790803 DB January 4, 1980  3:44 PM

3157	4	3157
3014	5	3157
3157	5	3157
3157	5	3157
3157	5	3157


************************



Proving Termination with Multiset Orderings

A common tool for proving the termination of programs is the well-founded
set, a set ordered in such a way as to admit no infinite descending sequences.
The basic approach is <B>to find</B> a termination function  that maps
the values of the program variables into some well-founded set,
such that the value of the termination function is repeatedly reduced
throughout the computation.  All too often, the termination functions required 
are difficult to find and are of a complexity out
of proportion to the program under consideration. Multisets (bags)
over a given well-founded set S are sets that admit multiple occurrences
of elements taken from S.  The given ordering on S induces
an ordering on the finite multisets over S.  This multiset ordering
is shown to be well-founded.  The multiset ordering enables the
use of relatively simple and intuitive termination functions in otherwise
difficult termination proofs.  In particular, the multiset
ordering is used to prove the termination of production systems,
programs defined in terms of sets of rewriting rules. 

CACM August, 1979

Dershowitz, N.
Manna, Z.

Program correctness, program termination, program verification, well-founded
orderings, well-founded sets, multisets, bags, production systems,
term rewriting systems, tree replacement systems, reduction rules

5.24 5.7

CA790803 DB January 4, 1980  3:44 PM

3157	4	3157
3014	5	3157
3157	5	3157
3157	5	3157
3157	5	3157


************************

************************
Document:  CACM-3015.html
************************


Relaxation Methods for Image Reconstruction

The problem of recovering an image (a function
of two variables) from experimentally available 
integrals of its grayness over thin strips is of great
importance in a large number of scientific areas. 
 An important version of the problem in medicine is
that of obtaining the exact density distribution 
within the human body from X-ray projectionsne approach
that has been taken to solve this problem 
consists of translating the available information into
a system of linear inequalities.  The size and 
the sparsity of the resulting system (typically, 25,000
inequalities with fewer than 1 percent of the 
coefficients nonzero) makes methods using successive
relaxations computationally attractive, as compared 
to other ways of solving systems of inequalities. 
In this paper, it is shown that, for a consistent 
system of linear inequalities, any sequence of relaxarion parameters
lying strictly between 0 and 2 generates 
a sequence of vectors which converges to a solution.
 Under the same assumptions, for a system of linear 
equations, the relaxation method converges <B>to the</B> minimum
norm solution.  Previously proposed techniques
are shown to be special cases of our procedure with
different choices of relaxation parameters.  The 
practical consequences for image reconstruction of the
choice of the relaxation parameters are discussed.

CACM February, 1978

Herman, G.
Lent, A.
Lutz, P.

biomedical image processing, image reconstruction,
X-ray tomography, mathematical programming, 
linear inequalities, relaxation techniques

3.12 3.17 3.34 3.63 5.14 5.18 5.41

CA780208 JB March 28, 1978  2:13 PM

3015	5	3015
3015	5	3015
3015	5	3015


************************

************************
Document:  CACM-2421.html
************************


A Scan Conversion Algorithm with Reduced Storage Requirements

Most graphics systems using a raster scan output
device (CRT or hardcopy) maintain a display 
file in the XY or random scan format.  Scan converters,
hardware or software, must be provided to translate 
the picture description from the XY format to the raster
format.  Published scan conversion algorithms 
which are fast will reserve a buffer area large enough
to accommodate the entire screen.  On the other 
hand, those which use a small buffer area are slow because
they require multiple passes through the XY 
display file.  The scan conversion algorithm described
here uses a linked list data structure to process 
the lines of the drawing in strips corresponding to
groups of scan lines.  A relatively small primary 
memory buffer area is used to accumulate the binary image
for a group of scan lines.  When this portion 
of the drawing has been plotted, the buffer is reused for
the next portion.  Beca<B>use of</B> the list processing 
procedures used, only a single pass through the XY display
file is required when generating the binary 
image and only a slight increase in execution time over
the fully buffered core results.  Results slow 
that storage requirements can be reduced by more than
80 percent while causing less than a 10 percent 
increase in execution time.

CACM November, 1973

Jordan, B. W. Jr.
Barrett, R. C.

graphics, scan conversion, raster plotter,
line drawing, discrete image, dot generation

4.41 6.35 8.2

CA731105 JB January 20, 1978  10:28 AM

1891	4	2421
2211	4	2421
2421	4	2421
2421	4	2421
2674	4	2421
2687	4	2421
1741	5	2421
2211	5	2421
2421	5	2421
2421	5	2421
2421	5	2421
2674	5	2421
1741	6	2421
2004	6	2421
2421	6	2421
2687	6	2421


************************



A Scan Conversion Algorithm with Reduced Storage Requirements

Most graphics systems using a raster scan output
device (CRT or hardcopy) maintain a display 
file in the XY or random scan format.  Scan converters,
hardware or software, must be provided to translate 
the picture description from the XY format to the raster
format.  Published scan conversion algorithms 
which are fast will reserve a buffer area large enough
to accommodate the entire screen.  On the other 
hand, those which use a small buffer area are slow because
they require multiple passes through the XY 
display file.  The scan conversion algorithm described
here uses a linked list data structure to process 
the lines of the drawing in strips corresponding to
groups of scan lines.  A relatively small primary 
memory buffer area is used to accumulate the binary image
for a group of scan lines.  When this portion 
of the drawing has been plotted, the buffer is reused for
the next portion.  Because of the list processing 
procedures used, only a single pass through the XY display
file is required when generating the binary 
<B>image and</B> only a slight increase in execution time over
the fully buffered core results.  Results slow 
that storage requirements can be reduced by more than
80 percent while causing less than a 10 percent 
increase in execution time.

CACM November, 1973

Jordan, B. W. Jr.
Barrett, R. C.

graphics, scan conversion, raster plotter,
line drawing, discrete image, dot generation

4.41 6.35 8.2

CA731105 JB January 20, 1978  10:28 AM

1891	4	2421
2211	4	2421
2421	4	2421
2421	4	2421
2674	4	2421
2687	4	2421
1741	5	2421
2211	5	2421
2421	5	2421
2421	5	2421
2421	5	2421
2674	5	2421
1741	6	2421
2004	6	2421
2421	6	2421
2687	6	2421


************************



A Scan Conversion Algorithm with Reduced Storage Requirements

Most graphics systems using a raster scan output
device (CRT or hardcopy) maintain a display 
file in the XY or random scan format.  Scan converters,
hardware or software, must be provided to translate 
the picture description from the XY format <B>to the</B> raster
format.  Published scan conversion algorithms 
which are fast will reserve a buffer area large enough
to accommodate the entire screen.  On the other 
hand, those which use a small buffer area are slow because
they require multiple passes through the XY 
display file.  The scan conversion algorithm described
here uses a linked list data structure to process 
the lines of the drawing in strips corresponding to
groups of scan lines.  A relatively small primary 
memory buffer area is used to accumulate the binary image
for a group of scan lines.  When this portion 
of the drawing has been plotted, the buffer is reused for
the next portion.  Because of the list processing 
procedures used, only a single pass through the XY display
file is required when generating the binary 
image and only a slight increase in execution time over
the fully buffered core results.  Results slow 
that storage requirements can be reduced by more than
80 percent while causing less than a 10 percent 
increase in execution time.

CACM November, 1973

Jordan, B. W. Jr.
Barrett, R. C.

graphics, scan conversion, raster plotter,
line drawing, discrete image, dot generation

4.41 6.35 8.2

CA731105 JB January 20, 1978  10:28 AM

1891	4	2421
2211	4	2421
2421	4	2421
2421	4	2421
2674	4	2421
2687	4	2421
1741	5	2421
2211	5	2421
2421	5	2421
2421	5	2421
2421	5	2421
2674	5	2421
1741	6	2421
2004	6	2421
2421	6	2421
2687	6	2421


************************

